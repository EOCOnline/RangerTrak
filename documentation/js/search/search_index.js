var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.565,1,1.237]],["body/components/AboutComponent.html",[0,0.827,1,1.965,2,1.562,3,0.196,4,0.293,5,1.446,6,1.677,7,1.446,8,1.38,9,0.162,10,2.997,11,1.38,12,3.464,13,2.258,14,3.086,15,2.76,16,2.039,17,5.664,18,2.039,19,4.889,20,0.232,21,0.749,22,3.346,23,0.787,24,0.582,25,4.889,26,0.289,27,0.016,28,0.413,29,0.583,30,0.556,31,0.463,32,1.517,33,1.266,34,1.871,35,2.118,36,0.369,37,1.871,38,0.269,39,0.007,40,1.207,41,0.791,42,3.467,43,1.986,44,3.467,45,2.687,46,2.687,47,1.38,48,4.889,49,4.031,50,2.987,51,4.227,52,4.227,53,3.464,54,4.227,55,2.801,56,2.495,57,4.227,58,4.227,59,3.79,60,4.227,61,4.227,62,2.801,63,4.227,64,5.318,65,3.464,66,1.702,67,4.227,68,4.227,69,4.227,70,4.227,71,4.227,72,4.227,73,4.227,74,1.779,75,4.227,76,2.039,77,4.769,78,2.139,79,3.79,80,3.204,81,4.227,82,4.227,83,3.79,84,3.464,85,1.86,86,2.247,87,2.827,88,4.227,89,3.464,90,4.769,91,2.639,92,4.031,93,3.79,94,5.318,95,3.464,96,4.227,97,2.801,98,2.139,99,2.639,100,2.987,101,3.464,102,3.464,103,4.227,104,4.889,105,3.79,106,3.204,107,3.79,108,3.464,109,5.318,110,4.227,111,4.227,112,4.227,113,4.227,114,4.769,115,6.653,116,4.227,117,2.801,118,3.204,119,4.227,120,4.769,121,4.227,122,3.758,123,3.79,124,4.227,125,1.661,126,4.227,127,4.227,128,3.464,129,4.227,130,4.227,131,3.204,132,4.227,133,4.769,134,4.227,135,4.227,136,4.227,137,3.79,138,2.139,139,4.227,140,2.987,141,5.318,142,5.318,143,5.318,144,4.227,145,4.227,146,4.227,147,3.79,148,4.227,149,3.79,150,4.227,151,4.227,152,4.227,153,4.227,154,4.227,155,4.227,156,4.227,157,4.227,158,4.227,159,2.365,160,4.227,161,4.227,162,4.227,163,4.227,164,4.227,165,4.227,166,2.639,167,4.769,168,4.227,169,4.227,170,3.79,171,4.227,172,1.946,173,4.227,174,4.227,175,4.889,176,7.628,177,6.151,178,4.227,179,4.889,180,3.204,181,7.063,182,3.525,183,2.639,184,4.769,185,2.365,186,3.79,187,2.495,188,3.758,189,3.139,190,5.318,191,1.946,192,4.889,193,3.467,194,3.79,195,4.889,196,3.204,197,4.889,198,4.889,199,3.467,200,1.769,201,2.687,202,2.272,203,4.226,204,4.596,205,3.467,206,2.997,207,1.986,208,3.467,209,3.467,210,2.154,211,4.391,212,2.997,213,3.467,214,2.118,215,3.467,216,4.227,217,4.896,218,3.467,219,2.987,220,4.889,221,2.603,222,2.118,223,3.467,224,3.467,225,3.467,226,3.467,227,2.687,228,3.467,229,1.677,230,3.467,231,3.467,232,2.997,233,2.687,234,3.467,235,3.467,236,3.467,237,1.871,238,2.687,239,2.118,240,3.467,241,1.446,242,1.702,243,2.039,244,1.446,245,1.593,246,1.446,247,3.467,248,0.463,249,1.446,250,1.018,251,1.446,252,1.207,253,1.446,254,1.207,255,2.039,256,2.362,257,1.156,258,1.446,259,1.107,260,0.898,261,1.446,262,1.207,263,1.446,264,1.207,265,1.446,266,1.319,267,1.446,268,1.207,269,1.446,270,1.207,271,1.446,272,1.156,273,1.446,274,1.207,275,1.207,276,1.446,277,1.207,278,1.446,279,1.207,280,1.446,281,1.207,282,1.446,283,1.156,284,1.446,285,1.38,286,1.446,287,0.01,288,0.01]],["title/components/AlertsComponent.html",[0,0.565,250,1.137]],["body/components/AlertsComponent.html",[0,0.796,1,1.035,2,1.489,3,0.184,4,0.167,5,1.352,6,1.568,7,1.352,8,1.29,9,0.255,11,1.29,14,3.062,15,2.763,16,1.944,18,1.944,20,0.217,21,0.714,23,0.648,24,0.865,26,0.578,27,0.017,28,0.904,29,1.003,30,0.958,31,0.657,32,1.418,33,1.413,36,0.345,38,0.252,39,0.007,40,1.623,41,1.443,47,2.375,56,3.045,102,2.297,125,1.831,167,4.626,187,2.378,188,4.021,194,2.513,207,2.671,210,1.233,214,1.98,241,1.352,242,1.9,243,1.944,244,1.352,245,1.83,246,1.352,248,0.642,249,1.352,250,1.752,251,1.352,252,1.129,253,1.352,254,1.129,255,1.944,256,2.276,257,1.081,258,1.352,259,1.035,260,1.207,261,1.352,262,1.129,263,1.352,264,1.129,265,1.352,266,1.233,267,1.352,268,1.129,269,1.352,270,1.129,271,1.352,272,1.081,273,1.352,274,1.129,275,1.129,276,1.352,277,1.129,278,1.352,279,1.129,280,1.352,281,1.129,282,1.352,283,1.081,284,1.352,285,1.29,286,1.352,287,0.01,288,0.01,289,2.802,290,5.999,291,5.457,292,4.661,293,5.967,294,6.582,295,5.457,296,0.783,297,6.94,298,4.029,299,5.967,300,5.967,301,4.661,302,4.029,303,3.241,304,4.626,305,3.28,306,4.661,307,1.062,308,1.015,309,4.029,310,4.661,311,5.457,312,3.045,313,5.457,314,3.241,315,4.021,316,0.942,317,1.422,318,4.661,319,2.3,320,3.241,321,3.241,322,3.241,323,3.241,324,4.661,325,4.901,326,1.334,327,3.241,328,2.946,329,1.473,330,4.029,331,4.718,332,3.241,333,2.802,334,4.029,335,3.189,336,3.241,337,4.661,338,3.241,339,1.179,340,2.124,341,1.98,342,3.241,343,1.568,344,2.802,345,2.802,346,2.513,347,3.613,348,1.568,349,4.661,350,1.413,351,3.241,352,6.322,353,4.661,354,3.241,355,3.241,356,1.654,357,4.718,358,4.661,359,3.241,360,4.661,361,4.661,362,3.221,363,4.661,364,3.241,365,1.352,366,1.49,367,3.241,368,3.241,369,1.857,370,3.241,371,3.241,372,1.98,373,3.241,374,0.875,375,1.064,376,3.241,377,3.241,378,3.241,379,3.241,380,3.241,381,3.241,382,2.513,383,3.241,384,2.802,385,3.241,386,1.75,387,1.081,388,1.418,389,1.75,390,1.98,391,3.241,392,3.241,393,2.124,394,4.661,395,4.661,396,2.513,397,3.241,398,2.297,399,2.802,400,3.241,401,5.457,402,3.241,403,3.241,404,1.418,405,3.241,406,3.241,407,2.297,408,1.29,409,4.718,410,3.241,411,2.946,412,3.241,413,1.671,414,3.241,415,3.241,416,3.241,417,1.49,418,5.457,419,3.054,420,4.661,421,0.651,422,1.179,423,3.241,424,2.513,425,1.75,426,2.802,427,1.352,428,3.241,429,3.241,430,2.802,431,2.802,432,2.802,433,2.254,434,4.661,435,3.613,436,3.613,437,2.516,438,4.661,439,3.613,440,4.661,441,2.516,442,4.661,443,2.671,444,4.661,445,2.886,446,4.661,447,4.661,448,2.671,449,4.661,450,4.661,451,4.661,452,3.419,453,2.142,454,3.054,455,4.661,456,2.671,457,3.241,458,2.513,459,1.75,460,3.613,461,3.241,462,3.241,463,3.241,464,3.241,465,3.241,466,3.241,467,3.334,468,2.297,469,3.241,470,3.241,471,2.124,472,2.802,473,3.241,474,5.465,475,2.802,476,3.241,477,3.241,478,3.241,479,3.241,480,3.241,481,3.241,482,3.241,483,3.241,484,3.241,485,3.241,486,1.98,487,2.124,488,1.654,489,1.75,490,2.297,491,2.124,492,3.241,493,2.297,494,3.241,495,1.98,496,3.241]],["title/classes/AngularComponentOrService.html",[39,0.008,497,3.002]],["body/classes/AngularComponentOrService.html",[3,0.305,4,0.278,9,0.252,23,0.749,24,0.642,26,0.448,27,0.017,31,0.618,38,0.419,39,0.011,66,1.876,80,3.531,95,3.818,183,2.909,184,3.818,229,2.606,248,0.51,287,0.013,288,0.013,307,0.906,308,0.865,326,1.036,433,2.606,497,5.064,498,1.797,499,4.658,500,5.389,501,3.535,502,5.389,503,2.894,504,2.357,505,2.476,506,2.145,507,4.658,508,2.476,509,5.064,510,5.389,511,4.107,512,5.389,513,6.532,514,6.532,515,2.05,516,6.532,517,5.389,518,2.909,519,6.532,520,3.531,521,5.389,522,5.389,523,5.389,524,4.177,525,5.389,526,6.532,527,2.909,528,1.96,529,5.389,530,5.389,531,4.658,532,5.389,533,5.389,534,4.177,535,3.991,536,5.389,537,5.389,538,2.909,539,2.247,540,3.292,541,6.532,542,5.389,543,3.818,544,3.531,545,5.389,546,3.087]],["title/components/AppComponent.html",[0,0.565,252,1.348]],["body/components/AppComponent.html",[0,0.896,1,1.291,2,1.735,3,0.229,4,0.209,5,1.685,6,1.954,7,1.685,8,1.608,9,0.189,11,1.608,14,3.136,15,2.84,16,2.266,18,2.266,20,0.271,21,0.832,22,3.544,23,0.755,24,0.731,26,0.57,27,0.017,28,0.481,29,0.679,30,0.648,31,0.668,33,1.589,36,0.43,38,0.314,39,0.008,40,1.891,41,1.24,47,2.613,87,2.821,125,1.091,159,1.954,183,2.181,185,1.954,189,3.495,229,2.628,241,1.685,242,1.891,243,2.266,244,1.685,245,1.699,246,1.685,248,0.581,249,1.685,250,1.186,251,1.685,252,2.285,253,1.685,254,1.406,255,2.266,256,2.56,257,1.347,258,1.685,259,1.291,260,1.046,261,1.685,262,1.406,263,1.685,264,1.406,265,1.685,266,1.537,267,1.685,268,1.406,269,1.685,270,1.406,271,1.685,272,1.347,273,1.685,274,1.406,275,1.406,276,1.685,277,1.406,278,1.685,279,1.406,280,1.685,281,1.406,282,1.685,283,1.347,284,1.685,285,1.608,286,1.685,287,0.011,288,0.011,296,0.913,304,5.31,307,0.679,308,0.648,316,0.561,317,0.847,325,3.132,340,2.647,341,2.468,374,1.657,375,1.498,388,3.086,421,1.232,437,3.697,439,3.132,490,2.862,515,1.537,528,1.47,538,2.932,547,3.492,548,1.891,549,6.138,550,5.433,551,3.75,552,4.04,553,7.054,554,5.306,555,5.433,556,4.04,557,4.04,558,6.85,559,3.132,560,3.132,561,1.961,562,5.306,563,4.04,564,4.04,565,6.564,566,5.433,567,6.138,568,6.138,569,6.138,570,6.138,571,6.138,572,6.138,573,6.564,574,3.096,575,6.564,576,5.433,577,3.319,578,5.433,579,4.04,580,3.849,581,1.767,582,4.04,583,4.04,584,2.315,585,2.181,586,1.879,587,2.862,588,2.061,589,2.628,590,4.696,591,4.211,592,5.433,593,3.319,594,4.04,595,4.04,596,4.04,597,4.04,598,4.04,599,3.132,600,4.04,601,3.132,602,3.492,603,4.04,604,6.138,605,5.433,606,4.04,607,2.315,608,4.04,609,3.492,610,4.696,611,4.04,612,3.492,613,4.04,614,4.04,615,4.04,616,4.04,617,4.04,618,4.04,619,4.04,620,2.315,621,4.04,622,1.857,623,3.492,624,4.04,625,4.04,626,1.857,627,4.04,628,4.04,629,1.954,630,4.04,631,4.04,632,3.492,633,2.061,634,4.04,635,2.862,636,4.04,637,4.04,638,4.04,639,3.132]],["title/modules/AppModule.html",[640,1.473,641,2.744]],["body/modules/AppModule.html",[2,1.811,3,0.321,4,0.179,9,0.265,12,4.018,13,2.345,27,0.017,31,0.76,36,0.37,37,1.875,38,0.27,39,0.007,50,2.122,62,1.991,86,1.597,125,0.938,172,1.383,190,4.233,250,1.977,252,2.588,254,2.345,257,2.246,259,2.151,260,0.899,262,2.345,264,2.345,270,2.345,272,2.246,274,2.409,275,2.409,277,2.345,279,2.345,281,2.409,283,2.246,285,1.949,287,0.01,288,0.01,325,2.693,339,1.264,340,2.276,341,2.122,346,2.693,347,2.693,365,1.449,387,1.158,390,3.762,546,1.991,559,2.693,560,2.693,574,1.449,584,1.991,593,2.122,626,2.25,640,2.157,641,5.733,642,3.312,643,3.528,644,3.003,645,3.003,646,3.003,647,3.003,648,3.003,649,4.413,650,4.115,651,4.413,652,3.635,653,4.413,654,4.115,655,3.095,656,4.413,657,3.095,658,3.469,659,2.122,660,3.474,661,4.233,662,3.209,663,4.233,664,2.693,665,1.991,666,2.276,667,2.122,668,2.461,669,2.276,670,3.003,671,2.276,672,2.276,673,4.233,674,4.233,675,2.693,676,2.122,677,3.474,678,2.122,679,2.257,680,3.474,681,4.897,682,4.897,683,3.474,684,3.474,685,3.474,686,2.122,687,3.474,688,3.003,689,4.233,690,3.796,691,3.003,692,4.233,693,4.233,694,3.003,695,2.276,696,3.003,697,4.897,698,2.693,699,2.693,700,3.474,701,3.003,702,4.897,703,1.875,704,4.897,705,1.597,706,3.003,707,2.693,708,3.003,709,3.796,710,3.003,711,3.796,712,3.003,713,4.233,714,4.233,715,4.233,716,2.806,717,2.693,718,3.469,719,4.897,720,4.897,721,4.897,722,2.693,723,4.897,724,3.474,725,3.474,726,2.806,727,3.003,728,3.003,729,3.003,730,3.474,731,2.693,732,3.474,733,4.233,734,3.474,735,3.474,736,4.897,737,3.474,738,3.003,739,5.67,740,4.897,741,4.233,742,3.474,743,3.474,744,2.276,745,3.796,746,2.693,747,2.461,748,2.693,749,2.693,750,2.693,751,3.474,752,3.474,753,2.276,754,3.474,755,3.474,756,3.474,757,3.474,758,3.003,759,3.474,760,3.474,761,3.474,762,2.461,763,3.474,764,3.003,765,2.276,766,3.474,767,3.474,768,1.264,769,3.474,770,3.474,771,3.474,772,3.796,773,4.233,774,3.474,775,1.773,776,3.474,777,2.122,778,3.474,779,3.003,780,2.693,781,2.042,782,1.991,783,0.639,784,2.461,785,3.474,786,2.461,787,1.991,788,3.474,789,4.897,790,3.474,791,3.474,792,1.773,793,2.276,794,3.474,795,3.474,796,2.122,797,2.122]],["title/modules/AppRoutingModule.html",[640,1.473,649,2.538]],["body/modules/AppRoutingModule.html",[0,1.13,1,1.546,3,0.274,4,0.25,9,0.226,27,0.017,31,0.749,36,0.516,38,0.376,39,0.01,56,2.469,62,2.773,191,1.926,257,2.346,259,1.952,260,1.253,264,2.128,270,2.128,272,2.038,279,2.128,281,2.65,283,2.038,287,0.013,288,0.013,343,2.341,374,1.306,386,2.612,422,1.761,437,2.612,548,1.685,586,1.482,587,3.429,588,2.469,626,2.224,640,2.548,642,2.469,649,4.005,650,3.734,662,3.171,663,4.184,694,4.184,695,3.171,696,4.184,701,4.184,706,4.184,707,3.752,708,4.184,726,3.502,727,4.184,728,4.184,729,4.184,797,2.957,798,4.84,799,4.184,800,6.112,801,4.738,802,5.141,803,4.986,804,6.112,805,4.84,806,4.84,807,4.184,808,5.545,809,4.84,810,5.193,811,6.112,812,4.33,813,6.112,814,6.112,815,4.005,816,3.752,817,6.112,818,4.84,819,4.184,820,4.84,821,2.612,822,4.184,823,4.84,824,3.752,825,4.33,826,4.84,827,4.184,828,4.84,829,4.84,830,4.184,831,4.84,832,4.84,833,4.84,834,4.84]],["title/classes/CodeArea.html",[39,0.008,835,2.538]],["body/classes/CodeArea.html",[3,0.133,4,0.121,9,0.109,20,0.157,21,0.559,23,0.507,24,0.787,26,0.523,27,0.017,28,0.814,29,0.393,30,1.009,38,0.283,39,0.007,41,1.688,49,3.984,76,1.521,78,1.596,98,1.023,125,1.368,166,1.262,172,1.452,185,1.131,187,2.289,188,1.429,191,1.785,217,2.021,219,2.229,248,0.221,287,0.007,288,0.009,296,0.613,307,0.393,308,0.375,316,0.704,319,1.843,326,1.496,329,1.745,350,0.944,372,2.229,374,1.698,375,1.024,387,2.097,413,1.926,417,1.075,421,0.469,425,2.421,443,2.57,448,1.34,474,3.154,493,1.657,495,2.74,498,0.78,534,1.813,535,2.74,546,1.34,629,1.131,744,1.532,768,1.843,772,1.813,775,2.289,777,2.229,780,1.813,787,1.34,796,3.095,812,3.59,835,3.984,836,5.22,837,3.304,838,1.532,839,2.338,840,3.484,841,3.648,842,2.985,843,3.692,844,3.224,845,4.485,846,5.067,847,3.648,848,3.042,849,2.939,850,2.74,851,3.357,852,3.648,853,3.064,854,5.821,855,4.485,856,5.494,857,5.067,858,4.485,859,5.494,860,5.494,861,5.067,862,5.067,863,2.338,864,3.648,865,5.494,866,2.338,867,4.038,868,2.338,869,2.338,870,3.477,871,2.585,872,3.477,873,2.57,874,2.229,875,2.338,876,2.338,877,2.338,878,2.338,879,2.338,880,2.338,881,2.338,882,2.338,883,2.338,884,1.152,885,2.338,886,2.338,887,2.338,888,2.338,889,2.338,890,1.657,891,2.585,892,2.338,893,2.338,894,1.429,895,3.648,896,2.338,897,3.154,898,3.648,899,4.235,900,3.984,901,2.338,902,2.338,903,2.413,904,6.424,905,2.338,906,2.338,907,2.338,908,5.713,909,1.813,910,1.193,911,1.532,912,2.338,913,2.338,914,2.338,915,5.22,916,3.949,917,2.338,918,3.815,919,3.648,920,2.57,921,2.338,922,1.327,923,1.813,924,2.428,925,2.338,926,2.021,927,1.532,928,3.154,929,2.338,930,2.338,931,2.338,932,4.485,933,2.338,934,2.338,935,2.585,936,3.648,937,5.032,938,3.648,939,1.532,940,2.338,941,2.338,942,2.338,943,2.021,944,1.657,945,2.338,946,2.338,947,2.338,948,2.338,949,2.338,950,5.494,951,4.125,952,2.338,953,2.338,954,2.338,955,2.338,956,2.338,957,2.338,958,2.021,959,2.338,960,2.338,961,2.338,962,2.338,963,2.421,964,1.533,965,2.338,966,3.648,967,6.29,968,2.338,969,5.494,970,2.74,971,2.338,972,0.889,973,2.338,974,2.338,975,5.067,976,2.39,977,3.648,978,2.289,979,2.338,980,3.154,981,2.338,982,1.023,983,2.338,984,3.648,985,3.648,986,2.338,987,3.648,988,3.648,989,4.485,990,3.648,991,2.338,992,5.067,993,2.338,994,2.338,995,3.648,996,2.338,997,1.429,998,2.338,999,1.962,1000,2.338,1001,2.338,1002,2.021,1003,3.815,1004,2.17,1005,2.338,1006,2.111,1007,6.08,1008,2.338,1009,4.485,1010,2.338,1011,4.485,1012,3.154,1013,3.648,1014,1.813,1015,3.648,1016,1.532,1017,3.648,1018,1.969,1019,3.648,1020,2.338,1021,5.067,1022,2.338,1023,2.338,1024,3.648,1025,2.338,1026,2.338,1027,2.338,1028,3.648,1029,3.648,1030,1.813,1031,2.338,1032,4.485,1033,4.38,1034,1.969,1035,2.338,1036,3.648,1037,2.338,1038,2.338,1039,3.648,1040,2.338,1041,2.338,1042,2.338,1043,3.648,1044,4.485,1045,2.338,1046,2.338,1047,2.338,1048,1.27,1049,2.338,1050,3.648,1051,3.648,1052,2.338,1053,2.338,1054,2.338,1055,2.338,1056,2.338,1057,2.338,1058,2.338,1059,2.338,1060,0.851,1061,2.338,1062,3.648,1063,2.289,1064,2.338,1065,2.939,1066,2.338,1067,2.338,1068,2.338,1069,3.648,1070,2.338,1071,2.338,1072,2.338,1073,2.338,1074,2.338,1075,2.338,1076,4.485,1077,3.154,1078,3.648,1079,2.338,1080,2.338,1081,2.338,1082,2.338,1083,2.338,1084,2.338,1085,2.338,1086,2.338,1087,2.338,1088,2.021,1089,2.09,1090,1.429,1091,4.308,1092,2.021,1093,2.338,1094,2.021,1095,2.338,1096,1.429,1097,4.485,1098,2.338,1099,2.338,1100,4.485,1101,2.338,1102,3.648,1103,1.532,1104,3.154,1105,1.813,1106,1.813,1107,2.338,1108,3.154,1109,2.338,1110,1.532,1111,4.38,1112,1.429,1113,1.657,1114,2.338,1115,2.338,1116,3.648,1117,2.338,1118,2.338,1119,2.338,1120,2.021,1121,2.585,1122,2.338,1123,1.532,1124,2.338,1125,2.338,1126,2.338,1127,2.021,1128,2.338,1129,1.813,1130,2.021,1131,2.338,1132,2.338,1133,4.485,1134,2.338]],["title/components/ColorEditor.html",[0,0.565,254,1.348]],["body/components/ColorEditor.html",[0,0.815,1,0.774,2,1.198,3,0.137,4,0.125,5,1.011,6,1.172,7,1.564,8,0.965,9,0.113,11,0.965,14,2.944,15,2.543,16,1.564,18,1.564,20,0.162,21,0.574,23,0.638,24,0.885,26,0.582,27,0.017,28,0.758,29,1.16,30,1.049,31,0.559,32,1.641,34,1.308,36,0.258,38,0.291,39,0.009,40,1.306,41,1.047,66,0.844,78,2.007,80,2.458,125,1.239,159,2.858,184,2.658,185,1.814,187,2.341,188,1.481,191,2.056,200,1.914,201,1.879,202,2.458,203,4.152,204,1.717,206,4.465,207,2.629,210,2.974,212,2.095,214,2.803,216,2.095,221,1.114,227,1.879,239,1.481,241,1.011,242,1.306,243,1.564,244,1.564,245,1.337,246,1.011,248,0.618,249,1.011,250,0.712,251,1.011,252,0.844,253,1.011,254,1.945,255,2.834,256,1.914,257,0.808,258,1.011,259,0.774,260,1.188,261,1.011,262,0.844,263,1.011,264,0.844,265,1.011,266,0.922,267,1.011,268,0.844,269,1.011,270,0.844,271,1.011,272,0.808,273,1.011,274,0.844,275,0.844,276,1.011,277,0.844,278,1.011,279,0.844,280,1.011,281,0.844,282,1.011,283,0.808,284,1.011,285,0.965,286,1.011,287,0.008,288,0.008,296,0.63,307,0.939,308,0.897,316,0.928,317,1.446,319,1.669,326,1.184,329,1.802,350,1.728,362,2.025,366,2.109,369,2.149,374,1.013,375,1.348,382,1.879,387,1.251,388,1.641,404,1.06,413,1.149,419,3.007,421,1.122,445,1.172,453,1.724,456,1.389,459,3.189,460,2.908,467,2.292,486,4.27,487,2.458,488,3.248,489,2.025,491,2.458,495,3.156,504,1.06,511,3.016,528,0.882,535,2.803,577,1.481,585,2.477,591,4.004,623,2.095,629,2.22,635,3.251,670,2.095,671,1.588,672,2.458,675,1.879,676,1.481,678,2.292,679,1.493,716,1.389,718,3.251,722,1.879,764,2.095,768,0.882,784,1.717,786,2.658,816,1.879,848,1.814,850,2.292,853,2.452,884,0.574,922,2.032,944,1.717,951,3.251,963,1.308,964,0.962,972,1.427,978,1.237,999,1.06,1006,1.968,1048,0.844,1065,1.588,1089,2.629,1106,1.879,1135,6.457,1136,1.879,1137,3.967,1138,3.967,1139,3.967,1140,3.243,1141,2.803,1142,4.589,1143,5.587,1144,4.589,1145,3.967,1146,3.201,1147,4.465,1148,3.967,1149,3.557,1150,4.004,1151,4.465,1152,4.83,1153,4.465,1154,3.967,1155,5.587,1156,3.243,1157,3.751,1158,3.751,1159,3.243,1160,4.589,1161,3.243,1162,2.095,1163,2.908,1164,2.424,1165,2.424,1166,2.424,1167,3.243,1168,2.424,1169,3.751,1170,2.424,1171,2.424,1172,3.243,1173,2.424,1174,3.751,1175,2.424,1176,3.751,1177,2.424,1178,2.424,1179,2.424,1180,3.967,1181,2.424,1182,3.967,1183,2.095,1184,2.424,1185,2.424,1186,2.424,1187,2.424,1188,2.477,1189,3.967,1190,1.879,1191,3.751,1192,2.424,1193,1.389,1194,1.481,1195,2.424,1196,1.308,1197,2.025,1198,1.06,1199,1.879,1200,2.095,1201,2.424,1202,2.424,1203,2.424,1204,3.751,1205,2.424,1206,1.588,1207,3.251,1208,4.83,1209,2.424,1210,2.424,1211,1.06,1212,2.424,1213,2.424,1214,1.564,1215,2.095,1216,1.879,1217,2.424,1218,2.424,1219,0.965,1220,2.095,1221,1.879,1222,3.967,1223,3.751,1224,2.424,1225,4.83,1226,2.095,1227,2.908,1228,2.908,1229,1.879,1230,1.717,1231,1.879,1232,1.879,1233,2.424,1234,2.424,1235,2.424,1236,1.879,1237,2.424,1238,2.424,1239,2.424,1240,3.751,1241,3.751,1242,3.751,1243,2.424,1244,2.095,1245,6.365,1246,6.99,1247,2.095,1248,2.095,1249,1.717,1250,2.095,1251,4.465,1252,2.095,1253,2.095,1254,2.095,1255,3.751,1256,2.424,1257,2.424,1258,2.424,1259,5.166,1260,3.243,1261,3.751,1262,3.967,1263,2.424,1264,2.095,1265,2.095,1266,3.243,1267,2.095,1268,2.96,1269,4.465,1270,1.717,1271,1.389,1272,2.095,1273,1.879,1274,1.879,1275,1.717,1276,1.879,1277,2.095,1278,2.095,1279,2.095,1280,2.424,1281,2.424,1282,2.424,1283,1.879,1284,2.424,1285,2.424,1286,2.424,1287,2.095,1288,2.095,1289,2.424,1290,4.589,1291,1.588,1292,2.424,1293,2.095,1294,2.095,1295,2.424,1296,1.237,1297,2.424,1298,2.424,1299,2.424,1300,3.751,1301,2.424,1302,2.095,1303,2.424,1304,2.424,1305,2.424,1306,2.458,1307,2.025,1308,2.424,1309,2.458,1310,2.424,1311,2.095,1312,2.424,1313,2.424,1314,2.424,1315,2.424,1316,2.424,1317,3.967,1318,2.095,1319,1.237,1320,2.424,1321,2.424,1322,2.424,1323,2.424,1324,2.424,1325,2.424,1326,3.751,1327,3.243,1328,2.424,1329,3.243,1330,2.424,1331,2.095,1332,2.095,1333,2.095,1334,5.908,1335,5.908,1336,5.166,1337,5.908,1338,2.908,1339,3.751,1340,3.243,1341,5.166,1342,3.751,1343,3.243,1344,3.243,1345,3.751,1346,3.751,1347,3.751,1348,3.751,1349,2.908,1350,5.107,1351,2.424,1352,2.095,1353,3.751,1354,2.424,1355,2.424,1356,2.424,1357,2.424,1358,3.243,1359,3.751,1360,1.237,1361,4.004,1362,2.095,1363,2.424,1364,6.365,1365,4.589,1366,1.481,1367,2.424,1368,2.424,1369,4.589,1370,5.908,1371,2.424,1372,2.424,1373,2.424,1374,2.424,1375,2.424,1376,2.424,1377,3.251,1378,2.424,1379,2.424,1380,2.424,1381,2.424,1382,2.424,1383,2.424,1384,4.83,1385,2.424,1386,2.424,1387,2.424,1388,2.658,1389,2.424,1390,2.424,1391,2.424,1392,2.424,1393,2.424,1394,2.292,1395,2.424,1396,3.751,1397,2.095,1398,2.025,1399,2.424,1400,3.751,1401,1.481,1402,2.095,1403,1.717,1404,2.424,1405,2.424,1406,1.879,1407,1.717,1408,2.424,1409,2.424,1410,2.424,1411,2.424,1412,1.717,1413,2.424]],["title/classes/Coord.html",[39,0.008,1414,2.091]],["body/classes/Coord.html",[3,0.251,4,0.229,9,0.207,20,0.297,21,0.884,23,0.616,24,0.688,26,0.535,27,0.017,28,0.89,38,0.529,39,0.014,41,1.466,74,1.612,78,1.938,106,3.784,248,0.547,287,0.012,288,0.012,307,0.745,308,0.711,316,0.803,319,1.612,326,1.453,329,1.196,350,1.147,365,1.848,374,1.196,375,1.652,413,1.768,421,0.89,471,2.903,498,1.477,506,2.299,508,2.953,561,1.415,581,1.938,768,1.612,844,2.036,853,2.935,867,4.16,873,4.284,874,2.707,884,1.109,900,2.903,910,2.261,911,2.903,922,2.101,924,1.848,963,2.392,964,0.929,999,1.938,1004,2.143,1006,1.415,1016,3.784,1034,2.392,1048,1.543,1060,2.101,1063,3.694,1065,2.903,1090,2.707,1096,2.707,1110,2.903,1121,3.139,1414,4.147,1415,2.539,1416,4.431,1417,4.431,1418,4.431,1419,2.392,1420,3.139,1421,3.108,1422,2.903,1423,3.682,1424,2.903,1425,3.926,1426,3.682,1427,3.139,1428,3.435,1429,3.435,1430,3.435,1431,3.784,1432,4.477,1433,3.435,1434,4.477,1435,2.903,1436,3.435,1437,2.392,1438,3.435,1439,4.477,1440,4.477,1441,3.435,1442,3.435,1443,3.435,1444,3.435,1445,2.036,1446,3.435,1447,3.139,1448,3.129,1449,4.477,1450,4.477,1451,3.435,1452,3.435,1453,3.139,1454,2.444,1455,3.435,1456,2.392,1457,4.477,1458,4.477,1459,3.435,1460,3.435,1461,2.261,1462,2.903,1463,2.707,1464,2.903,1465,3.139,1466,2.539,1467,2.903,1468,3.139,1469,3.139,1470,3.139,1471,3.139,1472,2.337,1473,3.139,1474,3.435,1475,3.435,1476,3.435,1477,3.435,1478,3.435,1479,2.143,1480,2.707,1481,2.707,1482,3.435,1483,3.435,1484,3.139,1485,4.092,1486,4.552,1487,3.435,1488,2.707,1489,3.435,1490,3.435,1491,3.435,1492,3.435,1493,3.435,1494,3.435,1495,4.477,1496,3.435]],["title/classes/Coordinate.html",[39,0.008,1448,1.78]],["body/classes/Coordinate.html",[3,0.242,4,0.221,9,0.2,20,0.286,23,0.594,24,0.831,26,0.559,27,0.017,28,0.921,38,0.522,39,0.014,41,1.441,74,1.554,78,1.869,106,3.695,248,0.678,287,0.012,288,0.012,296,0.948,307,1.061,308,1.013,316,0.97,317,1.182,319,1.554,326,1.457,329,1.153,350,1.106,365,1.782,374,1.153,375,1.636,413,1.727,421,0.858,471,2.8,498,1.425,506,2.245,508,2.901,561,1.365,581,1.869,768,1.554,844,1.964,853,2.778,867,4.101,873,4.251,874,2.61,884,1.098,900,2.8,910,2.18,911,2.8,922,2.052,924,1.782,963,2.306,964,0.896,999,1.869,1004,2.067,1006,1.365,1016,3.695,1034,2.306,1048,1.488,1060,2.442,1063,3.657,1065,2.8,1090,2.61,1096,2.61,1110,2.8,1121,3.027,1414,3.945,1415,2.448,1419,2.306,1420,3.027,1421,3.053,1422,2.8,1423,3.617,1424,2.8,1425,3.857,1426,3.617,1427,3.027,1428,3.312,1429,3.312,1430,3.312,1431,3.695,1432,4.372,1433,3.312,1434,4.372,1435,2.8,1436,3.312,1437,2.306,1438,3.312,1439,4.372,1440,4.372,1441,3.312,1442,3.312,1443,3.312,1444,3.312,1445,1.964,1446,3.312,1447,3.027,1448,3.207,1449,4.893,1450,5.204,1451,3.312,1452,3.312,1453,3.027,1454,2.401,1455,3.312,1456,3.624,1457,4.372,1458,4.372,1459,3.312,1460,3.312,1461,2.18,1462,2.8,1463,3.445,1464,3.695,1465,3.027,1466,2.448,1467,2.8,1468,3.027,1469,3.027,1470,3.027,1471,3.027,1472,2.296,1473,3.027,1474,3.312,1475,3.312,1476,3.312,1477,3.312,1478,3.312,1479,2.067,1480,2.61,1481,2.61,1482,3.312,1483,3.312,1484,3.027,1485,3.996,1486,4.473,1487,3.312,1488,2.61,1489,3.312,1490,3.312,1491,3.312,1492,3.312,1493,3.312,1494,3.312,1495,4.372,1496,3.312,1497,3.445,1498,3.996,1499,4.875,1500,4.273,1501,4.273,1502,4.273,1503,4.273,1504,4.273,1505,4.273,1506,4.273]],["title/injectables/DataService.html",[783,0.712,1507,2.744]],["body/injectables/DataService.html",[3,0.326,4,0.297,9,0.269,20,0.385,21,1.039,23,0.798,24,0.808,26,0.601,27,0.017,28,0.684,31,0.684,36,0.612,38,0.446,39,0.012,66,2.515,248,0.544,287,0.014,288,0.014,307,0.966,308,0.922,501,3.735,503,2.185,504,2.513,505,2.64,506,2.287,527,3.101,528,2.09,548,2,561,1.835,589,2.779,622,3.119,781,2.396,783,1.248,1507,4.809,1508,4.966,1509,5.745,1510,6.787,1511,4.966,1512,3.765,1513,2.513,1514,5.867,1515,6.787,1516,4.966,1517,5.745]],["title/injectables/FieldReportService.html",[652,2.091,783,0.712]],["body/injectables/FieldReportService.html",[3,0.129,4,0.117,9,0.106,13,1.735,20,0.385,21,0.545,23,0.495,24,0.907,26,0.605,27,0.017,28,0.795,29,1.122,30,1.072,31,0.544,33,0.587,36,0.242,38,0.342,39,0.005,41,1.728,49,1.486,55,1.299,56,1.817,62,2.855,74,1.296,85,1.355,100,3.803,101,1.607,172,1.751,185,1.097,186,1.758,210,1.673,219,3.044,229,2.41,245,1.841,248,0.632,260,1.139,287,0.007,288,0.007,296,0.599,298,3.802,307,1.122,308,1.072,316,1.023,317,1.26,326,1.398,329,1.768,335,2.29,350,0.587,365,2.078,369,1.299,374,1.623,375,1.571,388,1.558,408,2.478,411,1.922,417,1.042,421,1,422,0.825,424,1.758,433,1.723,439,1.758,441,1.224,445,1.723,448,1.299,453,1.042,493,2.523,501,1.097,503,0.863,504,0.992,505,1.042,508,1.042,515,0.863,528,0.825,538,1.922,539,1.485,548,0.79,561,0.724,585,1.224,586,1.09,652,2.374,655,2.641,657,2.762,659,1.385,664,1.758,665,2.52,666,4.376,679,1.418,705,1.042,716,1.299,781,0.946,783,0.655,787,1.299,792,2.763,819,1.96,821,2.923,842,1.355,853,2.288,871,4.072,873,3.567,884,1.039,909,1.758,928,1.96,935,1.607,964,1.4,1006,0.724,1018,1.922,1048,0.79,1060,0.825,1077,1.96,1090,3.308,1096,2.687,1130,1.96,1196,1.224,1198,0.992,1206,1.486,1211,1.924,1214,2.258,1249,1.607,1296,2.244,1344,1.96,1419,1.224,1422,3.766,1424,3.766,1454,1.355,1472,1.296,1481,1.385,1513,0.992,1518,5.411,1519,1.607,1520,4.398,1521,4.659,1522,4.398,1523,3.837,1524,4.398,1525,2.882,1526,2.127,1527,3.802,1528,4.398,1529,3.562,1530,4.983,1531,4.983,1532,3.562,1533,3.562,1534,3.079,1535,3.562,1536,3.562,1537,3.562,1538,4.398,1539,4.398,1540,4.983,1541,4.398,1542,4.398,1543,4.983,1544,4.398,1545,3.562,1546,3.562,1547,4.983,1548,2.268,1549,4.398,1550,2.942,1551,3.562,1552,3.562,1553,2.268,1554,2.761,1555,2.268,1556,2.268,1557,3.562,1558,2.268,1559,2.268,1560,2.268,1561,3.562,1562,3.079,1563,2.268,1564,3.562,1565,2.268,1566,1.758,1567,2.268,1568,3.562,1569,2.268,1570,5.747,1571,3.562,1572,2.268,1573,2.268,1574,2.268,1575,2.268,1576,2.268,1577,2.268,1578,2.268,1579,2.268,1580,2.523,1581,3.837,1582,2.268,1583,3.562,1584,2.268,1585,2.268,1586,2.268,1587,2.268,1588,2.268,1589,2.268,1590,3.562,1591,3.562,1592,3.079,1593,2.268,1594,3.562,1595,2.268,1596,3.116,1597,2.268,1598,2.268,1599,2.268,1600,2.268,1601,3.562,1602,2.268,1603,1.224,1604,2.29,1605,1.758,1606,1.299,1607,1.385,1608,1.96,1609,1.96,1610,1.96,1611,1.607,1612,1.758,1613,2.855,1614,1.758,1615,2.268,1616,1.96,1617,2.268,1618,2.268,1619,1.96,1620,1.758,1621,2.268,1622,4.398,1623,2.268,1624,1.758,1625,4.398,1626,2.268,1627,4.659,1628,2.268,1629,2.268,1630,1.607,1631,2.268,1632,2.268,1633,3.409,1634,4.398,1635,4.681,1636,4.983,1637,2.268,1638,2.268,1639,3.562,1640,3.53,1641,4.307,1642,3.562,1643,2.334,1644,3.562,1645,3.562,1646,3.562,1647,1.758,1648,1.817,1649,2.268,1650,3.562,1651,2.268,1652,3.562,1653,3.562,1654,1.157,1655,2.268,1656,2.268,1657,2.268,1658,2.268,1659,2.268,1660,3.079,1661,2.268,1662,1.96,1663,2.268,1664,2.268,1665,1.96,1666,3.562,1667,2.268,1668,2.268,1669,3.562,1670,2.268,1671,2.268,1672,1.758,1673,1.299,1674,2.268,1675,2.268,1676,1.097,1677,3.079,1678,3.562,1679,2.268,1680,2.268,1681,3.562,1682,2.268,1683,2.268,1684,2.268,1685,2.268,1686,2.268,1687,2.268,1688,2.268,1689,2.268,1690,2.268,1691,2.268,1692,2.268,1693,2.268,1694,2.268,1695,2.761,1696,1.758,1697,1.758,1698,1.758,1699,2.268,1700,1.758,1701,2.268,1702,2.268,1703,3.562,1704,2.268,1705,2.268,1706,5.747,1707,2.268,1708,3.562,1709,2.268,1710,2.268,1711,2.268,1712,2.268,1713,1.607,1714,2.041,1715,3.079,1716,2.268,1717,2.268,1718,2.268,1719,2.268,1720,2.268,1721,2.761,1722,1.758,1723,3.562,1724,2.268,1725,2.268,1726,2.268,1727,2.268,1728,3.562,1729,2.268,1730,2.268,1731,2.268,1732,2.268,1733,2.268,1734,2.268,1735,1.758,1736,1.758,1737,2.268,1738,2.268,1739,1.758,1740,1.96,1741,2.268,1742,1.486,1743,3.802,1744,2.268,1745,2.268,1746,2.268,1747,1.96,1748,2.855,1749,2.268,1750,2.268,1751,2.268,1752,2.268,1753,3.562,1754,3.562,1755,3.562,1756,3.562,1757,1.96,1758,1.758,1759,2.268,1760,2.268,1761,2.268,1762,2.268,1763,2.268,1764,1.96,1765,4.983,1766,2.268,1767,2.268,1768,2.268,1769,2.268,1770,1.486,1771,1.758,1772,1.607,1773,2.268,1774,2.268,1775,2.268,1776,1.96,1777,2.268,1778,2.268,1779,2.268,1780,2.268,1781,2.268,1782,1.96,1783,2.268,1784,2.268,1785,2.268,1786,2.268,1787,4.398,1788,2.268,1789,2.268,1790,2.268,1791,3.562,1792,2.268,1793,3.562,1794,2.268,1795,2.268,1796,2.268,1797,2.268,1798,2.268,1799,2.268,1800,2.268,1801,2.268,1802,2.268,1803,2.268,1804,2.268,1805,2.268,1806,2.268,1807,2.268,1808,2.268,1809,2.268,1810,2.268,1811,2.268,1812,2.268,1813,2.268,1814,2.268,1815,1.96,1816,3.562,1817,2.268,1818,2.268,1819,2.268,1820,2.268,1821,1.486,1822,2.268,1823,3.409,1824,2.268,1825,4.398,1826,2.268,1827,2.268,1828,2.268,1829,3.562,1830,2.268,1831,2.268,1832,2.268,1833,2.268,1834,3.562,1835,3.562,1836,3.562,1837,3.562,1838,2.268,1839,2.268,1840,2.268,1841,1.042,1842,2.268,1843,2.268,1844,2.268,1845,2.268,1846,4.398,1847,2.268,1848,2.268,1849,2.268,1850,4.398,1851,3.562,1852,2.268,1853,2.268,1854,1.758,1855,2.268,1856,2.268,1857,1.224,1858,2.268,1859,1.96,1860,2.268,1861,2.268,1862,2.268,1863,2.268,1864,2.268,1865,1.758]],["title/components/FieldReportsComponent.html",[0,0.565,259,1.237]],["body/components/FieldReportsComponent.html",[0,0.56,1,0.59,2,0.966,3,0.105,4,0.095,5,0.771,6,0.894,7,0.771,8,0.736,9,0.259,11,0.736,13,2.011,14,2.849,15,2.447,16,1.261,18,1.261,20,0.257,21,0.678,23,0.42,24,0.89,26,0.573,27,0.017,28,0.778,29,1.116,30,1.093,31,0.547,32,0.809,33,0.993,36,0.197,37,0.998,38,0.38,39,0.006,40,1.335,41,1.536,47,1.945,65,1.31,66,2.439,76,1.261,80,1.211,85,1.995,87,1.762,89,2.142,99,1.632,100,3.651,125,1.196,131,1.211,138,0.809,140,1.847,159,2.143,183,0.998,185,1.462,191,2.203,200,1.542,202,1.211,203,2.707,207,1.732,210,1.685,221,1.389,222,1.847,229,2.143,238,3.434,239,3.382,241,0.771,242,1.052,243,1.261,244,0.771,245,1.547,246,0.771,248,0.582,249,0.771,250,0.543,251,0.771,252,0.644,253,0.771,254,0.644,255,1.261,256,1.599,257,0.616,258,0.771,259,1.415,260,1.989,261,0.771,262,0.644,263,0.771,264,0.644,265,0.771,266,0.703,267,0.771,268,0.644,269,0.771,270,0.644,271,0.771,272,0.616,273,0.771,274,0.644,275,0.644,276,0.771,277,0.644,278,0.771,279,0.644,280,0.771,281,0.644,282,0.771,283,0.616,284,0.771,285,0.736,286,0.771,287,0.006,288,0.006,296,0.508,305,2.677,307,0.881,308,0.842,315,1.129,316,0.922,317,1.347,319,0.672,326,1.008,329,1.416,339,0.672,341,1.847,348,0.894,350,1.781,365,0.771,366,0.849,374,0.499,375,1.115,387,1.629,388,1.678,389,2.07,393,2.903,396,2.973,404,1.322,407,4.092,408,2.678,411,2.637,421,1.2,422,1.612,427,1.261,437,2.988,443,2.197,454,1.211,467,2.343,468,1.31,472,1.598,486,1.847,487,1.211,489,1.632,491,2.903,503,2.105,508,1.389,515,1.15,524,2.343,535,1.847,538,0.998,577,1.129,580,3.139,581,0.809,586,0.926,599,1.433,601,2.343,629,1.462,632,2.613,635,1.31,652,2.988,655,2.544,657,2.544,665,2.197,666,3.201,671,3.437,672,2.513,676,1.129,679,0.736,695,4.914,765,1.211,777,1.847,787,1.732,792,2.676,821,3.714,848,2.143,884,1.03,899,1.211,908,2.613,964,1.099,970,1.847,972,1.15,976,2.903,1004,0.894,1006,0.966,1034,0.998,1048,1.335,1089,3.309,1094,2.613,1146,3.309,1150,2.343,1193,1.732,1194,2.707,1196,0.998,1197,1.632,1199,2.343,1207,2.717,1214,2.308,1226,1.598,1236,1.433,1262,1.598,1268,1.732,1270,1.31,1296,2.261,1302,2.613,1307,0.998,1343,4.992,1394,1.129,1398,0.998,1401,3.651,1403,3.139,1407,1.31,1435,1.981,1437,1.632,1445,0.849,1454,1.995,1461,2.676,1472,1.612,1479,0.894,1481,1.129,1488,1.847,1523,2.717,1525,2.513,1566,1.433,1613,3.005,1620,2.343,1624,1.433,1627,1.433,1630,1.31,1648,2.261,1713,2.142,1742,1.981,1758,3.434,1772,2.142,1854,3.434,1857,0.998,1866,5.813,1867,1.433,1868,3.315,1869,2.613,1870,2.717,1871,2.717,1872,2.513,1873,2.513,1874,2.973,1875,2.343,1876,3.315,1877,3.315,1878,3.315,1879,4.223,1880,3.315,1881,3.315,1882,3.139,1883,3.023,1884,3.023,1885,3.023,1886,3.83,1887,3.023,1888,3.835,1889,3.835,1890,3.835,1891,3.835,1892,3.83,1893,4.223,1894,3.83,1895,1.848,1896,1.848,1897,1.598,1898,1.848,1899,3.023,1900,1.598,1901,1.848,1902,1.848,1903,1.848,1904,1.848,1905,1.848,1906,2.613,1907,2.142,1908,2.613,1909,1.848,1910,1.848,1911,2.613,1912,1.848,1913,2.513,1914,1.848,1915,1.848,1916,1.848,1917,1.848,1918,1.848,1919,1.848,1920,1.848,1921,1.848,1922,6.005,1923,4.534,1924,1.981,1925,2.613,1926,3.83,1927,2.707,1928,2.613,1929,2.613,1930,3.83,1931,2.613,1932,3.315,1933,2.613,1934,2.613,1935,2.613,1936,2.613,1937,2.343,1938,2.613,1939,2.613,1940,2.613,1941,2.613,1942,1.848,1943,2.903,1944,2.973,1945,2.613,1946,2.142,1947,3.83,1948,2.142,1949,2.613,1950,2.613,1951,1.848,1952,1.848,1953,1.848,1954,1.848,1955,1.848,1956,2.613,1957,2.613,1958,2.343,1959,2.613,1960,2.613,1961,2.513,1962,2.613,1963,2.613,1964,2.613,1965,1.848,1966,1.848,1967,1.848,1968,1.848,1969,1.848,1970,1.848,1971,1.848,1972,1.848,1973,1.848,1974,1.848,1975,1.848,1976,2.343,1977,2.613,1978,1.31,1979,2.142,1980,1.598,1981,1.598,1982,1.598,1983,1.598,1984,1.598,1985,1.433,1986,1.433,1987,1.598,1988,1.981,1989,1.598,1990,1.31,1991,3.627,1992,1.981,1993,2.513,1994,1.981,1995,1.598,1996,1.598,1997,1.598,1998,1.598,1999,1.598,2000,1.598,2001,1.598,2002,1.433,2003,1.598,2004,1.598,2005,1.598,2006,1.598,2007,1.598,2008,1.433,2009,1.433,2010,1.598,2011,1.31,2012,1.598,2013,1.598,2014,1.598,2015,1.31,2016,1.598,2017,1.598,2018,1.598,2019,1.598,2020,1.598,2021,1.598,2022,1.598,2023,3.83,2024,1.598,2025,1.598,2026,1.598,2027,2.613,2028,2.613,2029,1.433,2030,2.613,2031,2.613,2032,1.847,2033,3.315,2034,1.129,2035,1.433,2036,0.894,2037,1.598,2038,1.598,2039,1.598,2040,1.598,2041,1.598,2042,1.211,2043,1.598,2044,1.598,2045,1.598,2046,1.598,2047,2.343,2048,1.598,2049,2.613,2050,1.31,2051,2.613,2052,3.315,2053,1.433,2054,1.598,2055,2.613,2056,1.433,2057,2.613,2058,2.613,2059,1.598,2060,1.598,2061,1.598,2062,1.598,2063,1.598,2064,1.598,2065,1.598,2066,2.988,2067,3.315,2068,1.433,2069,1.598,2070,1.433,2071,1.433,2072,2.613,2073,3.315,2074,2.973,2075,1.598,2076,1.598,2077,2.613,2078,2.343,2079,1.598,2080,1.598,2081,1.598,2082,2.613,2083,1.598,2084,1.598,2085,1.598,2086,1.598,2087,1.598,2088,1.598,2089,1.598,2090,3.382,2091,1.433,2092,1.433,2093,1.433,2094,1.211,2095,1.31,2096,1.598,2097,1.598,2098,1.598,2099,1.598,2100,2.613,2101,1.598,2102,1.598,2103,1.598,2104,1.598,2105,1.598,2106,3.315,2107,1.598,2108,1.598,2109,1.598,2110,1.129,2111,4.461,2112,1.598,2113,1.598,2114,1.598,2115,2.717,2116,3.315,2117,1.598,2118,1.598,2119,1.598,2120,1.598,2121,1.598,2122,1.598,2123,1.598,2124,1.598,2125,1.598,2126,1.598,2127,3.023,2128,3.023,2129,3.434,2130,2.613,2131,3.023,2132,4.43,2133,2.142,2134,3.023,2135,2.343,2136,3.023,2137,3.434,2138,3.023,2139,3.023,2140,5.244,2141,3.023,2142,3.023,2143,3.023,2144,3.83,2145,3.83,2146,3.023,2147,3.023,2148,3.023,2149,3.023,2150,3.023,2151,3.023,2152,3.023,2153,4.43,2154,3.023,2155,3.023,2156,2.343,2157,2.343,2158,3.434,2159,1.732,2160,3.023,2161,4.43,2162,1.981,2163,2.343,2164,3.023,2165,3.434,2166,4.43,2167,1.848,2168,1.848,2169,1.848,2170,1.433,2171,1.848,2172,1.848,2173,1.848,2174,1.848,2175,2.613,2176,1.848,2177,1.848,2178,1.848,2179,1.848,2180,1.848,2181,1.31,2182,1.31,2183,1.848,2184,1.848,2185,1.848,2186,1.848,2187,1.848,2188,1.848,2189,1.848]],["title/components/FooterComponent.html",[0,0.565,262,1.348]],["body/components/FooterComponent.html",[0,0.972,1,1.525,2,1.936,3,0.271,4,0.247,5,1.991,6,2.31,7,1.991,8,1.901,9,0.223,11,1.901,13,2.571,14,3.183,15,2.891,16,2.527,18,2.527,20,0.32,21,0.928,22,3.629,23,0.842,24,0.834,26,0.397,27,0.017,29,0.803,30,0.766,31,0.574,33,1.724,36,0.509,37,2.578,38,0.371,39,0.01,40,2.11,41,1.09,45,3.702,46,3.702,47,2.787,78,2.089,92,3.971,93,4.698,187,2.437,191,1.901,221,2.195,239,3.703,241,1.991,242,2.11,243,2.527,244,1.991,245,1.813,246,1.991,248,0.63,249,1.991,250,1.402,251,1.991,252,1.663,253,1.991,254,1.663,255,2.527,256,2.776,257,1.592,258,1.991,259,1.525,260,1.236,261,1.991,262,2.438,263,1.991,264,1.663,265,1.991,266,1.816,267,1.991,268,1.663,269,1.991,270,1.663,271,1.991,272,1.592,273,1.991,274,1.663,275,1.663,276,1.991,277,1.663,278,1.991,279,1.663,280,1.991,281,1.663,282,1.991,283,1.592,284,1.991,285,1.901,286,1.991,287,0.012,288,0.012,296,1.019,307,0.803,308,0.766,316,0.664,317,1.27,375,1.383,408,2.787,422,1.737,427,1.991,467,3.703,589,2.31,668,3.383,903,1.525,1340,4.128,1764,5.239,2009,3.702,2181,3.383,2182,3.383,2190,4.128,2191,6.06,2192,6.658,2193,6.06,2194,7.227,2195,4.775,2196,6.06,2197,4.775,2198,4.775,2199,4.128,2200,4.775,2201,5.239,2202,6.06,2203,4.775,2204,4.128,2205,4.775,2206,4.775,2207,4.128,2208,4.775,2209,4.775,2210,4.775,2211,4.128,2212,4.775]],["title/classes/GoogleGeocode.html",[39,0.008,2213,2.538]],["body/classes/GoogleGeocode.html",[3,0.211,4,0.192,9,0.174,20,0.25,21,0.787,23,0.818,24,0.793,26,0.49,27,0.017,28,0.937,29,0.626,30,0.825,31,0.353,38,0.289,39,0.008,76,1.554,84,3.643,85,2.9,86,1.712,138,2.249,202,2.441,233,3.986,248,0.63,287,0.014,288,0.011,296,0.864,307,0.989,308,0.945,312,1.901,316,0.818,328,2.775,335,3.164,365,1.554,375,1.173,386,2.011,421,1.032,433,1.802,498,1.242,581,2.575,584,2.135,586,1.943,703,2.011,741,3.221,837,2.249,842,1.956,884,1.131,897,3.221,903,1.881,920,2.135,951,5.233,1048,1.297,1129,4.564,1274,2.888,1296,1.901,1421,3.221,1479,1.802,1480,4.207,1521,2.888,1592,5.089,1605,4.564,1616,5.089,2066,2.011,2133,2.64,2213,3.369,2214,5.952,2215,3.221,2216,6.1,2217,5.142,2218,5.887,2219,6.347,2220,5.142,2221,5.142,2222,5.142,2223,3.726,2224,5.142,2225,3.726,2226,6.591,2227,5.142,2228,3.726,2229,3.221,2230,5.757,2231,5.757,2232,3.221,2233,3.221,2234,2.276,2235,3.726,2236,3.726,2237,3.726,2238,3.726,2239,3.726,2240,3.726,2241,3.726,2242,6.347,2243,4.564,2244,3.726,2245,3.726,2246,3.726,2247,5.887,2248,5.887,2249,3.726,2250,3.726,2251,2.441,2252,2.441,2253,3.726,2254,3.726,2255,3.726,2256,2.135,2257,4.445,2258,3.726,2259,2.888,2260,2.946,2261,6.66,2262,3.726,2263,5.142,2264,3.726,2265,3.816,2266,3.726,2267,5.142,2268,2.441,2269,3.221,2270,3.726,2271,3.726,2272,3.726,2273,3.004,2274,3.726,2275,3.726,2276,5.142,2277,3.726,2278,3.986,2279,3.726,2280,5.142,2281,5.142,2282,3.726,2283,5.142,2284,3.726,2285,2.64,2286,5.142,2287,5.142,2288,3.986,2289,3.637,2290,4.171,2291,4.171,2292,2.363,2293,3.726,2294,3.726,2295,3.726,2296,3.726,2297,3.726,2298,3.221,2299,3.726,2300,3.726,2301,3.726,2302,3.726,2303,3.726,2304,3.726,2305,3.726,2306,3.726,2307,3.726,2308,5.142,2309,3.726,2310,3.726,2311,3.726,2312,3.726,2313,3.726,2314,3.726,2315,3.726,2316,3.726,2317,3.726,2318,3.726,2319,3.726,2320,3.726,2321,3.726,2322,2.888,2323,3.726,2324,3.726,2325,3.726,2326,3.726,2327,3.726,2328,3.726,2329,3.726,2330,3.726,2331,3.726,2332,3.726,2333,3.726,2334,3.726,2335,3.726,2336,3.726,2337,3.726,2338,3.726,2339,5.142,2340,6.885,2341,6.885,2342,5.142,2343,3.369,2344,5.142,2345,5.142,2346,4.445,2347,5.142,2348,5.142,2349,5.142,2350,5.142,2351,3.726,2352,2.888]],["title/components/IconComponent.html",[0,0.565,266,1.473]],["body/components/IconComponent.html",[0,0.782,1,0.41,2,1.119,3,0.126,4,0.066,5,1.225,7,0.926,8,0.51,9,0.06,11,0.51,12,0.908,13,1.22,14,2.619,15,2.169,16,0.535,18,0.535,20,0.149,21,0.196,22,0.62,23,0.408,24,0.153,26,0.41,27,0.017,28,0.798,29,0.589,30,0.914,31,0.657,32,0.971,33,0.575,34,1.199,35,1.357,36,0.137,37,0.692,38,0.173,39,0.009,40,0.446,41,1.387,43,0.735,47,1.395,56,0.654,59,0.994,66,1.023,76,0.926,78,1.898,79,0.994,83,0.994,84,0.908,85,2.311,86,1.021,87,1.82,91,0.692,123,0.994,125,1.447,131,0.84,138,1.533,140,1.357,149,0.994,159,1.421,172,0.51,178,1.92,182,0.735,183,0.692,185,1.421,186,0.994,187,1.499,191,1.395,194,0.994,200,2.021,210,0.845,214,2.14,219,0.783,227,2.277,241,0.535,242,0.773,243,1.652,244,0.926,245,0.907,246,0.535,248,0.466,249,0.535,250,0.652,251,0.535,252,0.446,253,0.535,254,0.446,255,0.926,256,1.225,257,0.98,258,0.535,259,0.41,260,1.123,261,0.535,262,0.446,263,0.535,264,0.446,265,0.535,266,1.333,267,0.535,268,0.446,269,0.535,270,0.446,271,0.535,272,0.427,273,0.535,274,0.446,275,0.446,276,0.535,277,0.446,278,0.535,279,0.446,280,0.535,281,0.773,282,0.535,283,0.427,284,0.535,285,0.51,286,0.535,287,0.006,288,0.005,296,0.215,304,1.722,305,1.421,308,0.206,309,1.108,312,1.788,316,0.309,317,0.83,326,0.427,328,1.199,329,0.6,334,3.751,335,2.74,339,0.466,340,0.84,341,0.783,348,0.62,350,1.511,356,0.654,357,1.92,362,0.692,365,1.652,366,1.021,372,0.783,374,1.392,375,1.616,384,1.108,386,0.692,387,0.427,388,1.533,389,1.199,390,1.357,398,0.908,399,1.108,404,1.898,408,2.205,411,1.891,413,0.393,417,1.021,419,1.455,421,1.393,422,1.274,427,1.225,433,1.074,441,2.342,443,0.735,445,1.421,448,1.273,452,2.007,453,1.61,458,0.994,460,0.994,475,1.108,489,0.692,498,0.427,506,0.51,518,2.138,528,0.466,531,1.108,538,1.199,539,1.652,546,0.735,551,2.844,554,1.108,561,1.573,562,1.108,574,0.926,577,1.357,581,0.971,584,2.007,585,0.692,586,0.9,589,1.695,591,3.07,593,0.783,610,1.108,620,0.735,622,1.35,629,1.074,652,1.891,655,1.61,657,1.61,658,1.574,659,1.795,662,0.84,665,1.273,667,1.795,671,2.296,672,2.595,673,1.108,674,1.108,675,0.994,676,0.783,679,2.053,686,0.783,689,1.108,690,1.722,691,1.108,703,0.692,705,0.589,707,0.994,709,1.722,710,1.108,711,0.994,712,1.108,713,1.108,714,1.108,715,1.108,716,2.007,717,0.994,718,2.806,726,0.735,758,2.54,765,0.84,768,1.274,775,0.654,782,1.273,784,0.908,786,2.082,787,1.683,792,1.133,793,2.595,808,1.574,810,3.07,812,1.574,816,0.994,822,1.108,835,0.84,837,0.561,840,1.683,842,2.167,843,0.692,844,0.589,848,0.62,853,2.323,867,1.357,871,0.908,884,0.79,891,0.908,903,0.41,904,1.92,909,2.277,915,0.994,916,0.783,920,0.735,922,1.578,923,0.994,924,1.225,944,0.908,951,2.482,963,0.692,964,0.909,972,1.874,978,1.499,997,0.783,999,0.561,1004,1.074,1006,1.713,1014,0.994,1018,2.342,1048,1.023,1060,0.466,1063,0.654,1091,0.908,1103,2.595,1113,0.908,1123,1.925,1129,0.994,1148,1.108,1153,1.108,1159,1.92,1180,2.54,1182,1.92,1188,2.894,1190,0.994,1197,1.586,1198,0.561,1206,0.84,1208,1.108,1211,0.561,1214,1.941,1215,1.108,1222,1.108,1225,4.258,1228,2.277,1229,0.994,1230,0.908,1231,0.994,1232,0.994,1244,1.108,1249,1.574,1260,1.92,1264,1.108,1265,1.108,1266,1.92,1267,1.108,1268,2.956,1269,2.54,1270,0.908,1271,0.735,1272,1.108,1273,1.722,1274,3.363,1275,0.908,1276,0.994,1277,1.108,1278,1.108,1279,1.108,1287,1.92,1288,1.108,1293,1.92,1296,1.133,1307,2.513,1309,1.455,1311,1.108,1350,1.92,1358,1.108,1366,0.783,1394,0.783,1398,0.692,1406,1.722,1414,0.692,1421,1.695,1423,0.735,1426,0.735,1437,1.586,1445,1.021,1454,2.386,1465,0.908,1472,2.248,1473,0.908,1497,0.783,1512,1.455,1521,0.994,1525,0.84,1550,1.021,1554,2.716,1605,1.722,1606,1.273,1611,0.908,1613,2.822,1641,1.108,1654,1.133,1660,1.108,1662,3.029,1673,0.735,1676,1.074,1713,0.908,1714,2.486,1715,4.025,1739,2.277,1742,0.84,1747,1.108,1748,1.273,1758,2.277,1782,1.108,1815,2.54,1821,0.84,1841,0.589,1854,2.277,1857,0.692,1875,0.783,1897,1.108,1900,1.108,1924,0.84,1958,0.994,2036,0.62,2042,0.84,2047,2.277,2050,0.908,2053,2.716,2070,1.722,2071,0.994,2074,0.994,2078,0.994,2090,1.357,2094,0.84,2095,1.574,2110,0.783,2115,0.908,2129,0.994,2135,0.994,2137,1.722,2145,1.108,2163,0.994,2213,1.455,2216,1.108,2226,3.029,2229,4.025,2230,1.108,2231,1.108,2232,1.108,2233,1.108,2234,2.14,2243,0.994,2251,0.84,2256,1.273,2257,1.108,2260,2.269,2265,2.007,2273,0.654,2285,2.482,2289,2.269,2290,1.574,2291,1.574,2292,1.35,2298,1.108,2352,2.277,2353,0.908,2354,2.938,2355,1.282,2356,2.221,2357,1.108,2358,1.108,2359,1.108,2360,0.994,2361,1.108,2362,0.994,2363,0.994,2364,2.214,2365,1.282,2366,1.282,2367,3.751,2368,1.282,2369,1.282,2370,1.282,2371,2.54,2372,1.282,2373,1.282,2374,2.54,2375,2.938,2376,0.994,2377,1.574,2378,2.938,2379,2.938,2380,1.108,2381,1.282,2382,1.282,2383,1.282,2384,1.199,2385,1.282,2386,2.221,2387,2.221,2388,1.108,2389,1.282,2390,1.108,2391,1.455,2392,1.282,2393,1.282,2394,0.994,2395,2.221,2396,3.751,2397,1.925,2398,1.92,2399,1.108,2400,4.339,2401,1.282,2402,1.282,2403,2.221,2404,1.282,2405,1.282,2406,1.282,2407,1.282,2408,1.282,2409,1.282,2410,1.282,2411,2.938,2412,1.282,2413,3.961,2414,1.282,2415,1.282,2416,2.221,2417,1.282,2418,1.108,2419,1.108,2420,3.961,2421,1.282,2422,1.92,2423,1.108,2424,1.282,2425,1.282,2426,1.282,2427,1.282,2428,1.282,2429,1.282,2430,1.282,2431,1.282,2432,1.282,2433,0.84,2434,1.282,2435,1.282,2436,0.84,2437,1.282,2438,1.282,2439,1.282,2440,1.282,2441,1.455,2442,1.282,2443,1.282,2444,1.282,2445,2.221,2446,1.282,2447,1.282,2448,2.221,2449,1.282,2450,0.84,2451,1.282,2452,1.282,2453,3.961,2454,1.282,2455,1.282,2456,1.282,2457,1.282,2458,2.221,2459,2.296,2460,2.221,2461,1.282,2462,1.108,2463,1.282,2464,1.282,2465,1.282,2466,1.282,2467,1.282,2468,1.282,2469,1.282,2470,2.938,2471,1.282,2472,1.282,2473,1.282,2474,1.282,2475,1.282,2476,1.282,2477,1.282,2478,1.282,2479,1.282,2480,1.282,2481,1.282,2482,1.282,2483,1.282,2484,2.938,2485,1.282,2486,1.282,2487,1.282,2488,1.282,2489,2.938,2490,2.938,2491,1.282,2492,0.908,2493,0.84,2494,2.221,2495,1.282,2496,1.282,2497,1.282,2498,1.282,2499,1.282,2500,1.282,2501,1.282,2502,0.908,2503,2.221,2504,1.282,2505,1.282,2506,1.282,2507,1.282,2508,1.282,2509,1.282,2510,2.938,2511,1.282,2512,1.282,2513,1.282,2514,1.282,2515,1.282,2516,1.282,2517,1.722,2518,1.282,2519,1.282,2520,1.282,2521,1.282,2522,1.282,2523,1.108,2524,1.282,2525,1.108,2526,2.221,2527,2.221,2528,1.282,2529,2.221,2530,2.221,2531,1.282,2532,0.908,2533,2.221,2534,1.282,2535,2.221,2536,2.221,2537,2.938,2538,2.221,2539,1.282,2540,1.282,2541,1.282,2542,1.282,2543,2.938,2544,1.282,2545,1.282,2546,2.221,2547,1.282,2548,1.282,2549,1.282,2550,1.282,2551,1.282,2552,1.282,2553,1.282,2554,2.938,2555,1.282,2556,2.221,2557,2.221,2558,2.221,2559,1.282,2560,1.108,2561,1.282,2562,1.282,2563,1.282,2564,4.339,2565,0.654,2566,0.908,2567,1.282,2568,1.282,2569,1.282,2570,1.282,2571,1.282,2572,0.84,2573,1.282,2574,1.282,2575,1.282,2576,2.938,2577,0.994,2578,2.221,2579,3.503,2580,2.221,2581,1.282,2582,2.938,2583,1.282,2584,1.282,2585,1.282,2586,1.282,2587,1.282,2588,1.282,2589,2.277,2590,1.282,2591,1.282,2592,1.282,2593,2.938,2594,1.282,2595,3.503,2596,1.282,2597,2.221,2598,1.282,2599,2.221,2600,0.994,2601,1.282,2602,1.282,2603,1.282,2604,1.282,2605,1.282,2606,1.282,2607,1.282,2608,1.282,2609,1.282,2610,0.994,2611,0.62,2612,0.908,2613,1.282,2614,1.282,2615,1.282,2616,1.282,2617,1.282,2618,2.221,2619,2.221,2620,2.938,2621,2.221,2622,2.221,2623,3.503,2624,2.221,2625,2.221,2626,1.282,2627,1.282,2628,1.282,2629,1.722,2630,1.722,2631,1.722,2632,2.221,2633,1.282,2634,1.92,2635,0.84,2636,0.908,2637,6.274,2638,1.282,2639,2.007,2640,1.282,2641,1.282,2642,1.455,2643,2.221,2644,1.282,2645,1.282,2646,2.221,2647,1.282,2648,1.282,2649,1.282,2650,1.282,2651,1.282,2652,1.282,2653,0.84,2654,1.108,2655,1.282,2656,1.282,2657,1.282,2658,1.282,2659,2.221,2660,1.282,2661,1.282,2662,1.282,2663,1.282,2664,1.282,2665,1.282,2666,1.282,2667,1.282,2668,1.282,2669,1.282,2670,1.282,2671,1.282,2672,1.282,2673,1.108,2674,1.282,2675,1.282,2676,1.282,2677,1.282,2678,1.282,2679,1.282,2680,1.282,2681,1.282,2682,1.282,2683,1.282,2684,1.282,2685,1.282,2686,1.282,2687,1.282,2688,1.282,2689,1.282,2690,1.282,2691,2.938,2692,4.339,2693,1.282,2694,1.282,2695,2.221,2696,1.282,2697,1.282,2698,1.282,2699,1.282,2700,1.282,2701,1.282,2702,1.108,2703,1.108,2704,1.282,2705,1.282,2706,1.282,2707,1.282,2708,1.282,2709,1.108,2710,1.282,2711,1.282,2712,1.282,2713,1.282,2714,2.221,2715,1.282,2716,1.282,2717,1.282,2718,1.282,2719,1.282,2720,2.221,2721,1.92,2722,1.282,2723,1.282,2724,1.282,2725,1.282,2726,1.795,2727,1.455,2728,1.925,2729,1.282,2730,2.938,2731,2.221,2732,1.282,2733,1.282,2734,0.783,2735,1.282,2736,1.788,2737,1.282,2738,1.282,2739,1.282,2740,1.282,2741,1.282,2742,1.282,2743,1.108,2744,1.282,2745,1.282,2746,1.282,2747,1.282,2748,1.282,2749,2.221,2750,1.282,2751,1.282,2752,1.282,2753,1.282,2754,1.282,2755,1.282,2756,1.282,2757,1.282,2758,1.282,2759,1.282,2760,1.282,2761,1.282,2762,1.282,2763,1.574,2764,1.282,2765,1.282,2766,1.282,2767,1.282,2768,1.282,2769,1.282,2770,1.282,2771,1.282,2772,1.282,2773,1.282,2774,1.282,2775,1.282,2776,2.221,2777,1.282,2778,2.221,2779,3.503,2780,1.282,2781,1.282,2782,1.282,2783,1.282,2784,2.221,2785,1.282,2786,1.282,2787,1.282,2788,1.282,2789,1.282,2790,1.282,2791,1.282,2792,1.282,2793,1.282,2794,1.282,2795,2.221,2796,1.108,2797,1.282,2798,2.221,2799,1.282,2800,1.282,2801,1.282,2802,1.92,2803,2.221,2804,1.282,2805,2.221,2806,1.282,2807,1.282,2808,1.282,2809,2.221,2810,1.282,2811,1.282,2812,1.282,2813,1.282,2814,0.783,2815,1.282,2816,1.455,2817,0.84,2818,1.282,2819,2.221,2820,1.108,2821,2.221,2822,3.961,2823,2.221,2824,2.221,2825,1.282,2826,3.503,2827,1.282,2828,1.282,2829,1.282,2830,3.503,2831,1.282,2832,4.656,2833,2.938,2834,1.282,2835,2.221,2836,1.282,2837,1.282,2838,1.282,2839,1.282,2840,0.908,2841,1.108,2842,1.282,2843,1.108,2844,0.84,2845,1.282,2846,1.282,2847,1.282,2848,1.282,2849,1.282,2850,1.282,2851,1.282,2852,1.282,2853,2.938,2854,1.92,2855,1.282,2856,3.07,2857,2.221,2858,1.282,2859,3.961,2860,1.282,2861,1.282,2862,1.282,2863,2.938,2864,5.155,2865,1.282,2866,1.282,2867,1.282,2868,2.42,2869,1.282,2870,1.282,2871,2.221,2872,2.54,2873,1.282,2874,2.54,2875,2.221,2876,1.282,2877,1.282,2878,1.574,2879,1.108,2880,3.751,2881,3.503,2882,3.029,2883,1.282,2884,2.938,2885,2.938,2886,4.656,2887,1.282,2888,2.938,2889,1.282,2890,2.938,2891,2.221,2892,2.938,2893,2.221,2894,1.282,2895,1.282,2896,1.282,2897,1.282,2898,1.282,2899,1.108,2900,1.108,2901,1.282,2902,1.108,2903,1.282,2904,1.282,2905,1.282,2906,1.282,2907,1.282,2908,1.282,2909,0.994,2910,1.108,2911,1.282,2912,1.282,2913,1.282,2914,1.282,2915,1.282,2916,1.282,2917,1.282,2918,1.282,2919,1.282,2920,1.108,2921,1.108,2922,1.282,2923,1.574,2924,3.751,2925,1.92,2926,2.221,2927,2.221,2928,1.108,2929,2.221,2930,1.282,2931,1.108,2932,1.108,2933,1.282,2934,1.282,2935,1.108,2936,1.282,2937,1.92,2938,1.108,2939,1.282,2940,1.282,2941,1.282,2942,1.92,2943,1.282,2944,1.282,2945,0.994,2946,1.282,2947,1.282,2948,1.92,2949,1.282,2950,2.221,2951,1.282,2952,1.282,2953,1.108,2954,1.282,2955,1.282,2956,0.783,2957,1.282,2958,1.108,2959,1.92,2960,1.108,2961,1.108,2962,1.92,2963,1.282,2964,1.795,2965,0.84,2966,1.282,2967,0.84,2968,0.84,2969,0.84,2970,0.84,2971,1.455,2972,1.282,2973,0.84,2974,0.84,2975,0.84,2976,3.503,2977,0.84,2978,0.84,2979,2.296,2980,1.455,2981,1.282,2982,1.282,2983,0.84,2984,1.282,2985,0.84,2986,0.735,2987,0.84,2988,0.84,2989,0.84,2990,0.84,2991,0.84,2992,1.925,2993,0.84,2994,2.221,2995,0.84,2996,0.783,2997,1.282,2998,1.282,2999,1.282,3000,1.108,3001,1.282,3002,2.221,3003,1.282,3004,1.282,3005,2.221,3006,2.221,3007,1.92,3008,1.282,3009,4.656,3010,1.282,3011,1.282,3012,1.282,3013,1.282,3014,2.221,3015,2.221,3016,2.221,3017,2.221,3018,1.282,3019,1.282,3020,1.282,3021,1.282,3022,1.282,3023,1.282,3024,1.282,3025,1.282,3026,1.282,3027,1.282,3028,1.282,3029,2.221,3030,1.282,3031,1.282,3032,1.282,3033,1.282,3034,1.282,3035,1.282,3036,1.282,3037,2.938,3038,1.273,3039,1.282,3040,1.108,3041,1.282,3042,1.282,3043,1.282,3044,1.282,3045,1.282,3046,1.282,3047,1.282,3048,1.282,3049,2.221,3050,1.282,3051,2.221,3052,1.282,3053,1.282,3054,1.282,3055,1.282,3056,1.282,3057,1.282,3058,3.503,3059,1.282,3060,1.282,3061,1.282,3062,1.282,3063,1.282,3064,1.282,3065,2.221,3066,1.282,3067,2.221,3068,1.282,3069,1.282,3070,2.221,3071,1.282,3072,1.282,3073,1.282,3074,1.282,3075,1.282,3076,1.282]],["title/interfaces/LayerType.html",[1219,1.542,3077,2.744]],["body/interfaces/LayerType.html",[3,0.291,4,0.265,9,0.24,20,0.344,21,0.971,26,0.614,27,0.017,28,0.939,31,0.699,33,1.328,36,0.547,38,0.558,39,0.011,200,2.618,248,0.651,287,0.013,288,0.013,317,1.442,326,1.381,369,2.94,375,1.171,408,2.738,421,1.03,441,2.769,498,1.711,501,2.482,503,1.951,504,2.244,505,2.358,527,2.769,528,1.866,561,2.025,607,2.94,622,2.358,626,2.358,633,2.618,782,2.94,783,0.944,842,2.411,884,0.786,890,3.635,903,1.639,964,1.075,1214,3.078,1219,2.738,1419,2.769,1448,2.358,1456,2.769,1526,2.482,1603,2.769,1604,2.358,1648,2.618,1676,3.475,2292,2.358,2384,2.769,2493,3.362,2600,3.977,2734,3.134,2736,2.618,3077,4.874,3078,2.94,3079,3.635,3080,6.211,3081,6.211,3082,2.358,3083,3.134,3084,3.134,3085,4.914,3086,3.977,3087,4.435,3088,4.435,3089,6.211,3090,3.977,3091,4.435,3092,4.435,3093,4.435,3094,4.435,3095,4.435,3096,4.435,3097,4.435,3098,4.435,3099,3.635,3100,3.134,3101,4.435,3102,2.244,3103,3.635,3104,2.94,3105,4.491,3106,4.435,3107,4.435,3108,4.435]],["title/components/LazyComponent.html",[0,0.565,268,1.348]],["body/components/LazyComponent.html",[0,1.021,1,1.701,2,2.072,3,0.302,4,0.275,5,2.221,7,2.221,8,2.12,9,0.249,11,2.12,14,3.211,15,2.908,16,2.221,18,2.221,20,0.357,21,0.993,24,0.634,26,0.443,27,0.017,28,0.634,29,0.895,30,0.855,31,0.504,36,0.568,38,0.414,39,0.011,241,2.221,242,2.258,243,2.705,244,2.221,245,1.884,246,2.221,248,0.614,249,2.221,250,1.563,251,2.221,252,1.854,253,2.221,254,1.854,255,2.705,256,2.916,257,1.776,258,2.221,259,1.701,260,1.379,261,2.221,262,1.854,263,2.221,264,1.854,265,2.221,266,2.026,267,2.221,268,2.534,269,2.221,270,1.854,271,2.221,272,1.776,273,2.221,274,1.854,275,1.854,276,2.221,277,1.854,278,2.221,279,1.854,280,2.221,281,1.854,282,2.221,283,1.776,284,2.221,285,2.12,286,2.221,287,0.013,288,0.013,551,4.273,825,5.157,3109,4.604,3110,5.326,3111,5.326,3112,5.326]],["title/modules/LazyModule.html",[640,1.473,650,2.366]],["body/modules/LazyModule.html",[0,0.951,1,2.542,3,0.304,4,0.277,9,0.251,12,4.619,27,0.017,31,0.728,36,0.572,37,2.899,38,0.417,39,0.011,172,2.138,268,2.647,287,0.013,288,0.013,339,1.954,343,2.598,626,2.468,642,3.327,643,3.735,650,4.862,658,4.619,659,3.282,661,5.636,662,4.6,688,4.643,692,4.643,693,5.636,726,3.735,797,3.983,801,4.164,808,4.619,825,3.806,2384,2.899,3113,4.643,3114,4.643,3115,4.643,3116,4.643,3117,4.643,3118,4.982,3119,5.124,3120,5.371,3121,5.371,3122,5.371,3123,5.371,3124,5.371,3125,4.643,3126,5.371]],["title/modules/LazyRoutingModule.html",[640,1.473,3118,2.538]],["body/modules/LazyRoutingModule.html",[0,1.005,1,2.199,3,0.334,4,0.304,9,0.275,27,0.017,31,0.712,36,0.627,38,0.457,39,0.012,287,0.014,288,0.014,343,2.847,374,1.589,642,3.003,662,3.857,726,3.945,797,3.596,799,5.088,801,5.337,802,5.17,808,4.878,3118,4.511,3125,5.088,3127,5.886,3128,6.885,3129,6.885,3130,5.886,3131,5.886,3132,5.886,3133,5.886]],["title/injectables/LocalStorageService.html",[783,0.712,3134,3.002]],["body/injectables/LocalStorageService.html",[3,0.158,4,0.144,9,0.13,13,0.968,20,0.371,21,0.765,23,0.694,24,0.66,26,0.585,27,0.017,28,0.924,29,0.932,30,1,31,0.655,33,0.72,36,0.444,38,0.461,39,0.013,41,1.517,50,1.699,66,2.529,76,1.16,89,1.971,91,1.501,95,4.208,98,1.217,101,2.951,120,1.971,125,0.751,137,2.156,138,1.822,183,2.695,184,3.538,188,1.699,221,2.295,237,3.205,248,0.562,287,0.009,288,0.01,296,0.7,307,0.839,308,0.801,312,2.829,316,0.694,317,0.583,326,1.242,329,0.751,335,2.548,339,1.012,362,2.248,372,2.545,374,1.683,375,0.951,388,1.217,408,1.658,411,1.501,427,2.476,433,2.015,456,3.177,501,3.287,503,2.585,504,1.217,505,1.278,506,1.107,509,3.871,515,1.058,518,2.248,524,3.871,527,4.032,528,2.16,538,2.248,539,2.771,540,2.545,548,1.45,551,4.152,561,1.595,580,1.971,586,2.035,589,2.872,622,3.496,626,1.278,629,2.015,633,2.125,639,2.156,679,1.988,747,2.951,780,2.156,781,1.16,783,1.092,842,1.899,884,0.765,890,2.951,894,1.699,899,1.823,922,1.012,935,1.971,964,0.873,982,1.217,999,1.217,1034,1.501,1048,0.968,1092,3.601,1108,2.404,1112,1.699,1196,1.501,1198,1.822,1214,2.476,1273,2.156,1276,3.229,1294,3.601,1309,2.729,1437,1.501,1463,2.545,1479,1.345,1498,2.951,1507,4.579,1513,1.822,1514,4.317,1516,2.404,1526,1.345,1550,1.278,1562,2.404,1580,1.971,1581,2.951,1596,2.951,1603,2.993,1604,2.97,1635,4.317,1654,1.419,1677,4.317,1713,1.971,1742,4.085,1976,2.545,1985,3.229,1986,3.871,2066,3.735,2094,1.823,2144,3.601,2251,1.823,2565,3.181,2796,3.601,2802,2.404,2843,2.404,2844,2.729,2964,4.152,3083,3.628,3084,3.051,3090,2.156,3102,2.598,3134,3.229,3135,5.134,3136,3.601,3137,4.165,3138,2.781,3139,4.165,3140,4.165,3141,2.781,3142,5.545,3143,5.545,3144,2.781,3145,6.796,3146,2.781,3147,2.781,3148,2.781,3149,4.165,3150,2.781,3151,4.165,3152,2.781,3153,4.165,3154,4.165,3155,4.165,3156,4.165,3157,4.165,3158,2.781,3159,2.781,3160,3.871,3161,2.781,3162,2.781,3163,2.781,3164,2.781,3165,4.165,3166,2.781,3167,2.781,3168,4.165,3169,6.233,3170,2.781,3171,4.165,3172,2.781,3173,2.781,3174,2.781,3175,2.781,3176,2.781,3177,1.823,3178,2.781,3179,4.165,3180,2.781,3181,4.165,3182,2.781,3183,5.545,3184,2.781,3185,2.781,3186,2.781,3187,2.781,3188,4.165,3189,2.781,3190,2.781,3191,2.781,3192,2.781,3193,2.781,3194,2.781,3195,2.781,3196,2.781,3197,2.781,3198,2.781,3199,2.781,3200,2.781,3201,2.781,3202,4.165,3203,4.165,3204,4.994,3205,4.165,3206,5.545,3207,4.165,3208,4.165,3209,4.165,3210,3.601,3211,4.165,3212,2.781,3213,2.781,3214,2.781,3215,2.781,3216,2.781,3217,2.781,3218,4.165,3219,4.165,3220,2.781,3221,2.781,3222,4.165,3223,4.165,3224,4.165,3225,4.165,3226,4.165,3227,2.781,3228,2.781,3229,2.781,3230,3.229,3231,2.781,3232,4.165,3233,2.781,3234,2.781,3235,2.781,3236,2.781,3237,2.781,3238,2.781,3239,2.781,3240,1.823,3241,2.781,3242,4.165,3243,2.781,3244,2.781,3245,2.781,3246,2.781,3247,2.781,3248,2.781,3249,2.781,3250,5.545,3251,2.781,3252,2.781,3253,2.781,3254,2.781,3255,2.781,3256,2.781,3257,2.781,3258,2.781,3259,2.781,3260,2.781,3261,2.781,3262,2.781,3263,2.781,3264,2.781,3265,2.781,3266,2.781,3267,2.781,3268,2.781,3269,2.781,3270,2.781,3271,2.781,3272,2.781,3273,2.781,3274,2.781,3275,2.781,3276,2.781,3277,2.781,3278,1.823,3279,2.781,3280,2.781,3281,2.781,3282,2.781,3283,2.781,3284,2.781,3285,1.823,3286,2.781,3287,2.781,3288,1.823,3289,2.781,3290,2.781,3291,2.781,3292,2.781,3293,2.781,3294,2.781,3295,2.781,3296,2.781,3297,2.781,3298,2.781,3299,2.781,3300,2.781,3301,2.781,3302,2.781,3303,2.404,3304,2.781,3305,2.781,3306,2.781,3307,2.781,3308,2.781,3309,1.971,3310,2.781,3311,2.781,3312,2.781,3313,2.781,3314,2.781]],["title/components/LogComponent.html",[0,0.565,272,1.291]],["body/components/LogComponent.html",[0,0.884,1,1.256,2,1.704,3,0.223,4,0.203,5,1.64,6,1.902,7,1.64,8,1.565,9,0.317,11,1.565,13,1.369,14,3.127,15,2.809,16,2.225,18,2.225,20,0.263,21,0.817,23,0.741,24,0.808,26,0.504,27,0.017,28,0.833,29,0.897,30,0.856,31,0.662,32,2.334,33,1.381,36,0.419,37,2.123,38,0.414,39,0.011,40,1.369,41,0.898,47,2.584,66,1.857,78,1.72,99,2.88,159,2.929,191,1.565,203,3.259,207,2.253,210,2.469,221,2.782,222,2.403,239,4.276,241,1.64,242,2.108,243,2.225,244,1.64,245,1.757,246,1.64,248,0.642,249,1.64,250,1.154,251,1.64,252,1.369,253,1.64,254,1.369,255,2.225,256,2.525,257,1.311,258,1.64,259,1.256,260,1.018,261,1.64,262,1.369,263,1.64,264,1.369,265,1.64,266,1.496,267,1.64,268,1.369,269,1.64,270,1.369,271,1.64,272,2.263,273,1.64,274,1.369,275,1.369,276,1.64,277,1.369,278,1.64,279,1.369,280,1.64,281,1.369,282,1.64,283,1.311,284,1.64,285,1.565,286,1.64,287,0.011,288,0.011,290,5.613,296,0.897,305,3.385,307,1.018,308,0.972,315,4.146,316,0.841,317,1.361,329,1.44,335,1.807,339,1.431,348,1.902,350,1.018,356,2.007,375,1.218,389,2.123,407,3.78,408,2.124,409,5.613,411,3.663,413,2.143,417,2.452,419,3.967,421,0.79,422,1.431,425,2.123,426,3.4,427,1.64,467,3.259,486,3.259,487,2.577,489,2.123,490,2.786,495,2.403,586,1.204,733,3.4,738,3.4,786,3.78,824,5.723,874,2.403,944,2.786,1006,1.704,1063,2.007,1228,4.136,1229,3.048,1230,2.786,1231,3.048,1232,3.048,1360,2.007,1361,3.048,1397,3.4,1407,2.786,1425,2.403,1466,2.253,2159,2.253,2165,3.048,2170,3.048,2181,2.786,2182,2.786,2207,4.612,2363,3.048,2397,2.577,2878,2.786,3315,3.4,3316,6.055,3317,5.335,3318,5.335,3319,6.055,3320,3.4,3321,5.335,3322,5.335,3323,3.933,3324,5.335,3325,3.933,3326,3.933,3327,5.335,3328,3.4,3329,3.933,3330,3.933,3331,3.933,3332,3.933,3333,3.933,3334,3.933,3335,5.335,3336,5.335,3337,5.335,3338,5.335,3339,3.933,3340,6.055,3341,3.933,3342,3.933,3343,3.933,3344,3.933,3345,3.933,3346,3.933,3347,3.933,3348,3.933,3349,3.933,3350,3.933,3351,3.933,3352,3.933,3353,3.933,3354,3.933,3355,3.933,3356,3.4,3357,3.933,3358,3.933,3359,3.933,3360,3.933,3361,3.4,3362,3.933,3363,3.933,3364,3.933,3365,3.933,3366,3.933,3367,3.933,3368,3.933]],["title/classes/Map.html",[39,0.008,561,1.237]],["body/classes/Map.html",[3,0.275,4,0.251,9,0.227,20,0.325,21,0.938,23,0.674,24,0.915,26,0.617,27,0.017,28,0.922,29,0.816,30,0.779,31,0.687,33,1.257,36,0.517,38,0.547,39,0.01,200,3.594,248,0.713,287,0.013,288,0.013,296,1.029,307,0.816,308,0.779,316,0.979,317,1.554,326,1.354,369,2.781,375,1.108,408,2.952,421,0.974,441,2.62,498,2.042,501,2.348,503,1.846,504,2.123,505,2.231,527,2.62,528,1.766,561,2.143,607,2.781,622,2.231,626,2.231,633,2.477,782,2.781,783,0.893,842,2.329,884,0.743,890,3.439,903,2.143,964,1.283,1214,2.938,1219,2.67,1419,2.62,1448,2.231,1456,3.802,1526,3.245,1603,2.62,1604,2.231,1648,2.477,1676,2.348,2292,2.231,2384,2.62,2493,3.18,2600,3.762,2734,2.965,2736,2.477,3077,4.338,3079,3.439,3080,4.196,3081,4.196,3082,2.231,3083,2.965,3084,2.965,3085,4.746,3086,3.762,3087,4.196,3088,4.196,3089,6.585,3090,3.762,3091,4.196,3092,4.196,3093,4.196,3094,4.196,3095,4.196,3096,4.196,3097,4.196,3098,4.196,3099,4.338,3100,2.965,3101,4.196,3102,2.123,3103,3.439,3104,2.781,3105,4.338,3106,4.196,3107,6.089,3108,6.089,3369,6.123,3370,4.854,3371,4.854,3372,4.854,3373,4.854,3374,4.854,3375,4.854,3376,4.854]],["title/injectables/MarkerService.html",[653,2.538,783,0.712]],["body/injectables/MarkerService.html",[3,0.263,4,0.24,9,0.217,20,0.311,21,1.006,23,0.645,24,0.888,26,0.628,27,0.017,28,0.825,29,1.104,30,1.054,31,0.656,36,0.495,38,0.463,39,0.01,41,1.06,98,2.031,248,0.678,260,1.202,287,0.012,288,0.012,296,1,307,1.204,308,1.15,316,0.963,317,1.502,319,1.689,326,1.509,329,1.607,374,2.059,493,4.218,506,1.848,548,1.617,561,1.902,653,3.901,654,4.554,705,2.134,781,1.936,783,0.854,821,2.506,884,0.711,903,2.099,980,4.014,1360,2.369,1454,2.499,1472,1.689,1550,3.185,1566,5.372,1606,2.66,1743,4.014,1748,2.66,1841,2.134,1875,3.637,2162,3.043,2419,4.014,2763,3.29,3082,2.736,3377,3.599,3378,6.571,3379,6.571,3380,5.953,3381,5.953,3382,5.953,3383,5.953,3384,3.599,3385,5.953,3386,4.643,3387,5.68,3388,4.643,3389,5.953,3390,7.332,3391,4.643,3392,5.953,3393,4.643,3394,5.953,3395,6.93,3396,4.643,3397,5.146,3398,5.953,3399,4.643,3400,5.953,3401,3.599,3402,4.643,3403,3.599,3404,3.599,3405,5.953,3406,5.953,3407,5.953,3408,6.93,3409,5.953,3410,4.643,3411,4.643,3412,5.953,3413,4.643,3414,4.014,3415,4.643,3416,4.643,3417,4.643,3418,4.643,3419,4.643,3420,4.643,3421,4.643]],["title/modules/MaterialModule.html",[640,1.473,651,2.538]],["body/modules/MaterialModule.html",[3,0.258,4,0.236,9,0.213,27,0.017,31,0.771,36,0.486,38,0.354,39,0.009,260,1.18,287,0.012,288,0.012,340,2.987,341,3.594,344,5.086,345,3.941,346,4.561,642,2.326,651,3.855,709,4.561,711,4.561,726,3.371,797,2.785,1190,3.534,2357,3.941,2358,5.086,2359,3.941,2388,3.941,2611,2.205,3422,4.559,3423,5.883,3424,4.559,3425,5.883,3426,4.559,3427,5.883,3428,4.559,3429,5.883,3430,4.559,3431,5.883,3432,4.559,3433,5.883,3434,4.559,3435,5.883,3436,4.559,3437,4.559,3438,5.883,3439,4.559,3440,5.883,3441,4.559,3442,4.559,3443,5.883,3444,4.559,3445,3.23,3446,5.883,3447,5.883,3448,5.883,3449,5.883,3450,5.883,3451,4.559,3452,5.883,3453,4.559,3454,5.883,3455,4.559,3456,5.883,3457,4.559,3458,5.883,3459,4.559,3460,5.883,3461,4.559,3462,5.883,3463,4.559,3464,5.883,3465,5.883,3466,4.559,3467,5.883,3468,4.559,3469,5.883,3470,5.883,3471,4.559,3472,5.883,3473,5.883,3474,5.883,3475,4.559,3476,5.883,3477,4.559,3478,5.883,3479,4.559,3480,5.883,3481,4.559,3482,5.883,3483,4.559,3484,5.883,3485,4.559,3486,5.883,3487,5.883,3488,4.559,3489,5.883,3490,4.559,3491,5.883,3492,4.559,3493,5.883,3494,4.559,3495,5.883,3496,4.559,3497,5.883,3498,4.559,3499,5.883,3500,4.559,3501,5.883,3502,4.559,3503,5.883,3504,4.559,3505,5.883,3506,4.559]],["title/classes/Mission.html",[39,0.008,3104,2.219]],["body/classes/Mission.html",[3,0.281,4,0.256,9,0.232,20,0.332,21,0.95,23,0.862,24,0.918,26,0.636,27,0.017,28,0.925,29,0.833,30,0.795,31,0.672,33,1.282,36,0.528,38,0.385,39,0.01,248,0.739,287,0.013,288,0.013,296,1.042,307,1.193,308,1.139,316,0.986,317,1.487,326,1.301,335,2.277,375,1.131,408,2.909,498,1.652,501,2.396,503,1.884,504,2.167,505,2.277,548,1.725,698,3.84,699,3.84,783,1.141,853,2.695,884,0.759,903,2.163,922,1.802,963,2.674,964,1.3,1198,2.167,1211,2.167,1214,2.824,1461,2.528,1462,3.246,1463,3.789,1464,4.064,1497,3.789,1498,4.394,1513,2.167,1526,3.275,1603,2.674,1604,2.277,1654,2.528,2635,3.246,3099,3.51,3100,3.027,3104,3.554,3507,4.282,3508,5.853,3509,6.202,3510,7.096,3511,6.202,3512,4.954,3513,4.954,3514,4.954,3515,6.202,3516,5.418,3517,4.954,3518,4.954,3519,4.954,3520,4.954,3521,4.954,3522,4.954,3523,4.954,3524,4.282,3525,4.282,3526,4.954,3527,4.954,3528,4.282,3529,4.954,3530,4.282,3531,4.954]],["title/components/MoodEditor.html",[0,0.565,274,1.348]],["body/components/MoodEditor.html",[0,0.891,1,1.278,2,1.724,3,0.227,4,0.207,5,1.669,6,1.935,7,1.669,8,1.593,9,0.187,11,1.593,14,3.133,15,2.786,16,2.251,18,2.251,20,0.268,21,0.826,24,0.899,26,0.585,27,0.017,29,0.907,30,0.866,31,0.511,34,2.16,36,0.426,38,0.311,39,0.008,40,1.879,41,1.394,125,1.08,159,1.935,187,3.117,191,2.431,200,2.042,201,3.102,202,2.622,203,2.445,241,1.669,242,1.879,243,2.251,244,1.669,245,1.693,246,1.669,248,0.666,249,1.669,250,1.175,251,1.669,252,1.393,253,1.669,254,1.393,255,3.09,256,2.547,257,1.334,258,1.669,259,1.278,260,1.036,261,1.669,262,1.393,263,1.669,264,1.393,265,1.669,266,1.522,267,1.669,268,1.393,269,1.669,270,1.393,271,1.669,272,1.334,273,1.669,274,2.277,275,1.393,276,2.998,277,1.393,278,1.669,279,1.393,280,1.669,281,1.393,282,1.669,283,1.334,284,1.669,285,1.593,286,1.669,287,0.011,288,0.011,296,0.907,307,1.099,308,1.049,316,1.016,317,1.57,319,2.695,350,1.036,374,1.08,387,1.334,421,0.803,427,1.669,456,3.093,468,4.633,486,3.995,487,4.003,489,3.297,495,4.393,511,3.297,629,1.935,678,2.445,679,1.593,848,1.935,853,2.8,884,0.826,1006,1.724,1089,3.093,1136,3.102,1137,5.28,1138,5.28,1139,5.28,1140,4.666,1146,3.912,1149,4.184,1150,5.069,1151,5.653,1152,5.902,1154,4.666,1156,4.666,1161,3.459,1162,3.459,1163,4.184,1167,3.459,1172,4.666,1183,3.459,1189,5.902,1196,2.16,1197,2.914,1198,1.75,1199,3.102,1200,3.459,1220,4.666,1221,4.735,1247,3.459,1248,3.459,1249,2.835,1250,3.459,1251,3.459,1252,3.459,1253,3.459,1254,3.459,1283,3.102,1317,3.459,1327,3.459,1329,3.459,1331,3.459,1332,3.459,1333,3.459,1360,2.042,1361,4.184,1394,2.445,1403,2.835,3532,5.9,3533,6.321,3534,5.398,3535,6.539,3536,4.001,3537,4.001,3538,5.398,3539,4.001,3540,5.398,3541,4.001,3542,4.001,3543,4.001,3544,4.001,3545,4.001,3546,4.001,3547,5.398,3548,4.001,3549,4.001,3550,4.001,3551,5.398,3552,2.835,3553,4.001,3554,4.001,3555,4.001,3556,4.001,3557,4.001]],["title/components/MoodRenderer.html",[0,0.565,275,1.348]],["body/components/MoodRenderer.html",[0,0.963,1,1.497,2,1.913,3,0.266,4,0.242,5,2.497,7,1.954,8,1.865,9,0.219,11,1.865,14,3.178,15,2.848,20,0.314,21,0.917,24,0.875,26,0.612,27,0.017,28,0.828,31,0.625,36,0.499,38,0.364,39,0.01,40,2.085,41,1.743,241,1.954,242,2.085,243,2.497,244,1.954,245,1.8,246,1.954,248,0.68,249,1.954,250,1.376,251,1.954,252,1.632,253,1.954,254,1.632,255,2.497,256,2.752,257,1.563,258,1.954,259,1.497,260,1.213,261,1.954,262,1.632,263,1.954,264,1.632,265,1.954,266,1.783,267,1.954,268,1.632,269,1.954,270,1.632,271,1.954,272,1.563,273,1.954,274,1.632,275,2.421,276,3.065,277,1.632,278,1.954,279,1.632,280,1.954,281,1.632,282,1.954,283,1.563,284,1.954,285,1.865,286,1.954,287,0.012,288,0.012,296,1.006,307,1.109,308,1.059,316,0.917,317,1.383,319,2.178,350,1.213,387,1.997,580,4.243,678,3.659,679,1.865,853,2.627,884,0.718,1089,3.431,1146,4.334,1149,4.642,1163,4.642,1193,2.685,1283,4.642,1937,3.633,3532,5.791,3533,4.051,3558,4.051,3559,6.599,3560,6.599,3561,5.988,3562,7.639,3563,4.686,3564,5.988,3565,4.686,3566,5.988,3567,4.686,3568,4.686,3569,4.686,3570,4.686,3571,4.051,3572,5.988,3573,5.988,3574,4.686,3575,4.051,3576,4.686,3577,4.686,3578,4.686]],["title/components/NavbarComponent.html",[0,0.565,277,1.348]],["body/components/NavbarComponent.html",[0,0.901,1,1.306,2,1.75,3,0.232,4,0.211,5,1.705,6,1.978,7,1.705,8,1.628,9,0.191,11,1.628,14,3.139,15,2.823,16,2.284,18,2.284,20,0.274,21,0.839,23,0.858,24,0.785,26,0.34,27,0.017,29,0.687,30,0.656,31,0.518,33,1.599,36,0.436,38,0.318,39,0.008,40,1.907,47,2.626,56,2.795,187,2.086,191,2.878,200,3.366,203,4.202,207,3.78,210,2.693,214,3.346,219,2.498,221,1.879,232,4.735,238,3.17,239,4.202,241,1.705,242,1.907,243,2.284,244,1.705,245,1.708,246,1.705,248,0.518,249,1.705,250,1.2,251,1.705,252,1.424,253,1.705,254,1.424,255,2.284,256,2.575,257,1.363,258,1.705,259,1.306,260,1.059,261,1.705,262,1.424,263,1.705,264,1.424,265,1.705,266,1.555,267,1.705,268,1.424,269,1.705,270,1.424,271,1.705,272,1.363,273,1.705,274,1.424,275,1.424,276,1.705,277,2.297,278,1.705,279,1.424,280,1.705,281,1.424,282,1.705,283,1.363,284,1.705,285,1.628,286,1.705,287,0.011,288,0.011,296,0.921,316,0.761,317,1.295,329,1.857,366,1.879,389,2.207,404,1.789,421,0.821,422,1.992,427,1.705,436,4.246,467,4.489,468,2.897,486,3.773,489,2.207,490,4.376,491,2.679,495,4.03,635,3.881,821,2.956,824,4.246,964,1.148,1018,2.956,1188,2.207,1197,2.207,1268,2.343,1291,2.679,1360,2.795,1377,2.897,1384,4.735,1394,2.498,1401,4.633,1402,4.735,1403,3.881,1407,3.881,1412,3.881,1606,3.138,1742,2.679,1857,2.207,1961,2.679,2090,3.346,2111,3.881,2165,3.17,2170,3.17,2175,3.535,2181,2.897,2182,2.897,2204,3.535,2292,2.517,2346,3.535,2374,6.12,2376,3.17,2377,2.897,2589,3.17,2611,1.978,2709,3.535,3007,4.735,3356,3.535,3579,3.535,3580,5.477,3581,6.176,3582,5.477,3583,4.417,3584,5.477,3585,4.089,3586,4.089,3587,3.535,3588,4.735,3589,4.089,3590,5.339,3591,4.089,3592,4.089,3593,4.089,3594,4.089,3595,7.519,3596,7.519,3597,4.089,3598,4.089,3599,4.089,3600,4.089,3601,4.089,3602,4.089,3603,4.089,3604,4.089,3605,4.089,3606,4.089,3607,4.089,3608,5.477,3609,4.089,3610,4.089,3611,4.089,3612,5.477,3613,5.477,3614,4.089,3615,4.089,3616,4.089,3617,3.535,3618,4.089,3619,4.089,3620,4.089,3621,4.089,3622,4.089,3623,4.089,3624,4.089,3625,3.535,3626,4.089,3627,5.477,3628,4.089,3629,4.089]],["title/classes/OpPeriod.html",[39,0.008,3516,2.744]],["body/classes/OpPeriod.html",[3,0.277,4,0.253,9,0.229,20,0.328,21,0.942,23,0.855,24,0.916,26,0.628,27,0.017,28,0.923,29,0.822,30,0.785,31,0.689,33,1.266,36,0.521,38,0.38,39,0.01,97,2.803,248,0.734,287,0.013,288,0.013,296,1.034,307,1.131,308,1.08,316,0.982,317,1.481,326,1.294,375,1.116,408,2.898,441,2.64,498,1.631,501,2.366,503,1.86,504,2.14,505,2.248,527,2.64,528,1.779,548,1.703,622,2.248,633,2.496,783,1.132,793,4.629,853,2.68,903,2.15,922,1.779,963,2.64,964,1.29,1198,2.14,1214,2.807,1461,2.496,1462,3.205,1463,3.759,1464,4.032,1497,3.759,1498,4.359,1513,2.14,1523,3.466,1526,3.256,1603,2.64,1604,2.248,1633,5.218,1654,2.496,2635,3.205,3000,4.228,3083,2.988,3084,2.988,3099,3.466,3100,2.988,3508,5.819,3516,4.359,3524,4.228,3525,4.228,3528,4.228,3530,4.228,3630,6.702,3631,4.228,3632,7.064,3633,7.064,3634,6.153,3635,4.891,3636,4.891,3637,4.891,3638,4.891,3639,4.891,3640,4.891,3641,4.891,3642,4.891,3643,4.891,3644,4.891]],["title/classes/PlusCode.html",[39,0.008,2923,2.744]],["body/classes/PlusCode.html",[3,0.165,4,0.151,9,0.136,20,0.195,24,0.347,27,0.017,28,0.676,29,0.726,30,0.693,31,0.276,38,0.227,39,0.006,49,3.721,74,1.57,76,1.8,78,1.277,98,1.889,125,1.858,138,1.889,140,3.469,182,1.672,188,2.638,189,2.897,200,2.203,207,3.253,219,2.638,245,1.643,248,0.409,287,0.009,288,0.009,296,0.726,316,0.789,317,0.612,328,2.33,329,0.788,350,0.756,382,2.262,387,1.713,388,1.277,390,2.638,413,1.738,417,2.609,419,2.829,421,0.586,427,2.368,448,1.672,452,2.474,491,2.829,498,0.973,518,1.575,534,3.347,535,2.638,561,2.341,581,2.248,612,3.732,629,1.412,744,2.829,768,2.204,775,2.897,782,1.672,812,4.495,835,1.912,837,3.273,838,1.912,840,2.944,842,3.015,843,3.425,844,2.916,848,3.175,851,3.876,867,3.469,884,0.447,891,2.068,899,3.721,900,2.829,910,2.203,915,5.089,920,3.944,922,1.57,923,2.262,926,3.732,935,3.059,937,3.732,943,3.732,972,1.642,978,3.237,997,2.638,999,1.889,1002,5.827,1006,0.932,1014,2.262,1016,3.367,1018,2.33,1033,4.908,1060,2.066,1088,4.908,1091,3.059,1103,2.829,1104,3.732,1106,3.347,1111,3.732,1198,1.889,1207,4.023,1268,1.672,1271,2.474,1291,2.829,1318,3.732,1362,3.732,1414,2.33,1437,3.065,1454,2.16,1472,1.062,1714,1.672,1740,2.523,1757,3.732,1961,3.721,2066,3.425,2111,4.023,2129,4.918,2130,3.732,2163,2.262,2213,1.912,2256,2.474,2265,2.944,2289,2.944,2290,2.068,2292,1.341,2352,5.681,2363,2.262,2364,1.489,2391,1.912,2525,3.732,2654,3.732,2673,3.732,2721,3.732,2726,1.783,2814,3.702,2820,2.523,2854,2.523,2864,6.384,2868,2.638,2872,2.523,2874,2.523,2878,2.068,2879,2.523,2880,5.239,2882,3.732,2899,2.523,2900,2.523,2902,2.523,2909,2.262,2910,2.523,2920,2.523,2921,2.523,2923,4.023,2924,5.485,2925,3.732,2928,5.239,2931,2.523,2932,2.523,2935,3.732,2937,4.442,2938,3.732,2942,2.523,2945,2.262,2948,3.732,2953,2.523,2956,2.638,2958,3.732,2959,4.908,2960,2.523,2961,3.732,2962,2.523,2996,3.469,3102,3.063,3230,4.402,3404,5.428,3617,4.442,3645,3.347,3646,5.678,3647,2.918,3648,2.918,3649,2.918,3650,2.918,3651,2.523,3652,4.317,3653,5.138,3654,4.317,3655,4.317,3656,3.732,3657,4.317,3658,4.317,3659,4.317,3660,4.317,3661,3.721,3662,4.317,3663,4.317,3664,4.317,3665,4.317,3666,4.317,3667,4.317,3668,5.678,3669,5.678,3670,5.678,3671,5.678,3672,5.678,3673,4.317,3674,4.317,3675,4.317,3676,4.317,3677,4.317,3678,4.317,3679,4.317,3680,4.317,3681,4.317,3682,4.317,3683,4.317,3684,4.317,3685,4.317,3686,4.317,3687,4.317,3688,4.317,3689,5.678,3690,4.317,3691,4.317,3692,4.317,3693,2.638,3694,5.485,3695,4.317,3696,4.317,3697,4.317,3698,4.317,3699,4.317,3700,4.317,3701,4.317,3702,4.317,3703,2.918,3704,2.918,3705,2.918,3706,2.918,3707,2.918,3708,2.918,3709,2.918,3710,1.912,3711,5.138,3712,2.918,3713,4.317,3714,2.918,3715,6.06,3716,2.523,3717,6.06,3718,2.262,3719,6.06,3720,2.918,3721,2.918,3722,2.918,3723,2.918,3724,2.523,3725,2.523,3726,2.523,3727,2.523,3728,2.918,3729,4.317,3730,2.918,3731,4.317,3732,2.918,3733,2.918,3734,2.918,3735,2.918,3736,2.918,3737,2.918,3738,2.918,3739,2.918,3740,2.918,3741,2.918,3742,2.918,3743,2.918,3744,2.918,3745,2.918,3746,2.918,3747,2.918,3748,2.918,3749,2.918,3750,2.918,3751,2.918,3752,4.317,3753,4.317,3754,4.317,3755,2.918,3756,2.918,3757,2.918,3758,2.918,3759,5.138,3760,2.918,3761,2.918,3762,2.262,3763,2.918,3764,4.317,3765,2.918,3766,2.918]],["title/classes/Point.html",[39,0.008,1060,1.409]],["body/classes/Point.html",[3,0.243,4,0.221,9,0.2,20,0.287,23,0.595,24,0.832,26,0.559,27,0.017,28,0.925,38,0.522,39,0.014,41,1.443,74,1.558,78,1.874,106,3.702,248,0.661,287,0.012,288,0.012,307,1.062,308,1.014,316,0.934,317,1.184,319,1.558,326,1.457,329,1.156,350,1.109,365,1.786,374,1.156,375,1.637,413,1.73,421,0.86,471,2.807,498,1.428,506,2.249,508,2.905,561,1.368,581,1.874,768,1.558,844,1.969,853,2.78,867,4.105,873,4.253,874,2.617,884,1.098,900,2.807,910,2.186,911,2.807,922,2.055,924,1.786,963,2.312,964,0.898,999,1.874,1004,2.072,1006,1.368,1016,3.702,1034,2.312,1048,1.491,1060,2.299,1063,3.66,1065,2.807,1090,2.617,1096,2.617,1110,2.807,1121,3.035,1414,3.948,1415,2.455,1419,2.312,1420,3.035,1421,3.057,1422,2.807,1423,3.621,1424,2.807,1425,3.861,1426,3.621,1427,3.035,1428,4.379,1429,4.9,1430,4.9,1431,4.403,1432,4.379,1433,3.321,1434,4.9,1435,2.807,1436,3.321,1437,2.312,1438,5.414,1439,4.379,1440,4.379,1441,3.321,1442,3.321,1443,3.321,1444,3.321,1445,1.969,1446,3.321,1447,3.035,1448,3.088,1449,4.379,1450,4.379,1451,3.321,1452,3.321,1453,3.035,1454,2.404,1455,3.321,1456,2.312,1457,4.379,1458,4.379,1459,3.321,1460,3.321,1461,2.186,1462,2.807,1463,2.617,1464,2.807,1465,3.035,1466,2.455,1467,2.807,1468,3.035,1469,3.035,1470,3.035,1471,3.035,1472,2.299,1473,3.035,1474,3.321,1475,3.321,1476,3.321,1477,3.321,1478,3.321,1479,2.072,1480,2.617,1481,2.617,1482,3.321,1483,3.321,1484,3.035,1485,4.002,1486,4.478,1487,3.321,1488,2.617,1489,3.321,1490,3.321,1491,3.321,1492,3.321,1493,3.321,1494,3.321,1495,4.379,1496,3.321,1499,4.883,3767,4.284,3768,4.284,3769,4.284,3770,4.284,3771,4.284,3772,4.284,3773,4.284,3774,4.284,3775,4.284,3776,4.284]],["title/classes/Point-1.html",[39,0.007,964,0.679,1060,1.178]],["body/classes/Point-1.html",[3,0.224,4,0.204,9,0.185,20,0.265,21,0.93,23,0.744,24,0.81,26,0.566,27,0.017,28,0.775,29,0.9,30,0.859,38,0.416,39,0.012,74,2.209,248,0.374,287,0.011,288,0.011,296,0.665,307,0.665,308,0.635,326,1.421,329,1.639,335,2.461,375,1.784,413,1.211,417,1.817,421,0.794,471,2.591,498,1.318,765,3.509,772,3.065,787,3.728,853,2.79,874,3.271,884,1.154,903,2.361,911,3.978,958,6.303,964,0.829,972,1.504,1048,1.377,1060,2.689,1147,4.629,1414,4.15,1423,3.068,1426,3.728,1447,3.794,1453,4.61,1454,2.774,1456,2.89,1472,2.718,1484,2.802,1485,2.802,1486,3.794,1488,2.416,1913,3.509,2029,4.151,2050,4.302,2115,2.802,2289,3.479,2391,3.978,2462,6.06,2909,3.065,3694,4.629,3718,3.065,3777,3.065,3778,6.072,3779,5.355,3780,5.355,3781,5.355,3782,6.8,3783,6.507,3784,5.355,3785,3.954,3786,3.954,3787,3.954,3788,3.954,3789,3.954,3790,3.954,3791,3.954,3792,3.954,3793,3.954,3794,3.954,3795,3.954,3796,5.355,3797,6.507,3798,5.355,3799,3.954,3800,3.954,3801,3.954,3802,3.954,3803,3.954,3804,5.355,3805,3.954,3806,3.954,3807,3.954,3808,3.954,3809,3.954,3810,3.954,3811,3.954,3812,3.954,3813,3.954,3814,3.954,3815,3.954,3816,5.355,3817,5.355,3818,5.355,3819,3.418,3820,5.878,3821,6.072,3822,5.355,3823,3.954,3824,3.954,3825,5.355,3826,5.355,3827,6.8,3828,3.954,3829,3.954,3830,5.355,3831,3.954,3832,3.954,3833,3.954,3834,3.954,3835,3.954,3836,3.954,3837,3.954,3838,3.954,3839,3.954,3840,3.954,3841,3.954,3842,3.954,3843,6.507,3844,5.355,3845,5.355,3846,5.355,3847,5.355,3848,5.355]],["title/injectables/PopupService.html",[654,2.366,783,0.712]],["body/injectables/PopupService.html",[3,0.329,4,0.3,9,0.271,20,0.389,23,1.008,24,0.813,26,0.483,27,0.017,28,0.813,31,0.687,36,0.619,38,0.451,39,0.012,66,2.021,85,2.208,248,0.549,287,0.014,288,0.014,296,1.148,307,0.976,308,0.932,316,0.807,548,2.021,654,4.172,705,2.668,781,2.421,783,1.068,884,0.889,1550,2.668,1606,3.326,3401,4.5,3403,4.5,3414,5.018,3849,5.018,3850,6.829,3851,5.805,3852,6.829,3853,5.805,3854,5.805,3855,5.805,3856,5.805,3857,5.805]],["title/injectables/PostService.html",[783,0.712,2502,2.744]],["body/injectables/PostService.html",[3,0.32,4,0.292,9,0.264,20,0.378,21,1.029,23,0.785,24,0.854,26,0.559,27,0.017,29,0.949,30,0.906,31,0.679,36,0.602,38,0.439,39,0.012,66,1.967,92,3.701,237,3.049,248,0.535,287,0.014,288,0.014,296,1.129,307,0.949,308,0.906,316,0.785,506,2.248,528,2.055,548,1.967,561,1.804,705,2.596,781,2.355,783,1.236,884,0.865,1511,4.883,1512,3.701,1513,2.471,1550,3.411,1875,4.105,2162,3.701,2502,4.761,3384,4.379,3858,4.883,3859,4.7,3860,7.423,3861,5.648,3862,5.648,3863,5.648,3864,5.648,3865,4.883,3866,5.648,3867,5.648,3868,5.648,3869,5.648,3870,5.648,3871,5.648]],["title/injectables/RangerService.html",[655,1.78,783,0.712]],["body/injectables/RangerService.html",[3,0.223,4,0.133,9,0.317,20,0.173,21,0.731,23,0.359,24,0.904,26,0.624,27,0.017,28,0.934,29,1.191,30,1.068,31,0.689,33,0.668,36,0.275,38,0.447,39,0.005,41,1.576,43,3.294,47,1.028,53,1.829,55,1.479,56,3.921,62,1.479,66,2.001,74,1.432,85,1.815,87,1.186,98,1.129,118,1.692,125,1.288,128,1.829,138,2.088,172,1.028,185,1.905,189,1.317,204,3.382,248,0.643,287,0.008,288,0.008,296,0.662,307,1.141,308,1.09,315,1.577,316,1.02,317,1.447,326,1.026,329,1.441,335,2.784,339,0.939,350,0.668,362,2.882,365,1.642,374,1.635,375,1.383,388,1.722,389,1.394,393,3.97,398,5.021,404,1.129,413,1.206,417,1.809,421,1.336,422,0.939,443,1.479,445,1.249,453,2.454,454,1.692,456,2.256,503,2.187,506,1.028,515,1.815,528,0.939,538,2.125,539,1.642,543,1.829,548,0.899,561,0.825,574,1.077,581,1.129,585,2.125,586,1.76,587,1.829,588,1.317,589,1.249,607,2.256,622,2.454,633,1.317,640,0.982,643,2.256,655,2.193,667,4.148,705,1.809,716,1.479,744,1.692,745,3.052,746,2.001,747,1.829,748,2.001,749,2.001,750,2.001,762,1.829,768,0.939,777,1.577,781,1.077,783,0.724,792,2.724,793,2.58,821,1.394,884,0.928,920,1.479,964,1.395,972,1.498,982,1.722,997,2.406,1030,2.001,1063,1.317,1123,1.692,1198,1.722,1211,1.722,1216,4.139,1219,1.028,1227,3.052,1275,2.79,1296,2.435,1319,1.317,1338,2.001,1419,1.394,1421,1.249,1461,1.317,1479,1.249,1497,1.577,1512,1.692,1513,1.129,1526,2.309,1534,3.404,1550,2.896,1554,2.001,1580,2.79,1581,4.073,1596,3.382,1604,1.186,1611,1.829,1612,2.001,1613,3.61,1614,2.001,1640,1.829,1648,1.317,1695,3.052,1696,2.001,1697,2.001,1698,3.052,1700,2.001,1721,3.052,1722,2.001,1735,2.001,1736,2.001,1841,1.186,1865,2.001,1907,3.382,1924,1.692,1943,1.692,1978,1.829,1988,1.692,2011,1.829,2015,1.829,2036,1.249,2042,2.58,2066,3.103,2110,2.406,2133,1.829,2159,1.479,2162,1.692,2268,1.692,2273,2.009,2278,2.001,2288,2.001,2291,1.829,2360,2.001,2492,1.829,2517,5.263,2610,2.001,2611,1.249,2612,1.829,2629,2.001,2630,2.001,2631,2.001,2635,1.692,2636,1.829,2639,1.479,2763,2.79,2840,2.79,2844,2.58,2856,2.001,2986,1.479,3038,1.479,3082,1.186,3102,1.129,3177,1.692,3309,1.829,3445,1.829,3872,1.829,3873,4.126,3874,4.126,3875,4.126,3876,4.126,3877,3.937,3878,4.773,3879,3.937,3880,3.937,3881,3.937,3882,4.616,3883,4.616,3884,3.937,3885,4.773,3886,3.937,3887,4.616,3888,4.773,3889,4.773,3890,4.616,3891,3.937,3892,2.232,3893,3.937,3894,2.582,3895,2.582,3896,2.582,3897,2.582,3898,2.582,3899,3.404,3900,2.582,3901,2.582,3902,2.582,3903,2.582,3904,2.582,3905,2.582,3906,2.582,3907,3.404,3908,2.582,3909,3.404,3910,2.582,3911,3.404,3912,2.582,3913,4.126,3914,2.582,3915,2.582,3916,2.582,3917,2.582,3918,2.582,3919,2.582,3920,2.582,3921,2.582,3922,2.582,3923,2.582,3924,2.582,3925,2.582,3926,1.692,3927,2.232,3928,4.616,3929,4.616,3930,2.232,3931,2.232,3932,2.232,3933,2.232,3934,1.577,3935,2.001,3936,2.232,3937,3.382,3938,2.232,3939,2.232,3940,1.829,3941,2.232,3942,2.232,3943,2.232,3944,2.232,3945,2.232,3946,2.001,3947,2.232,3948,2.232,3949,2.232,3950,2.232,3951,2.232,3952,3.052,3953,2.232,3954,2.232,3955,2.232,3956,2.232,3957,2.232,3958,2.232,3959,3.404,3960,2.232,3961,4.97,3962,2.232,3963,2.232,3964,3.404,3965,2.232,3966,3.404,3967,2.232,3968,2.232,3969,2.001,3970,3.404,3971,2.232,3972,2.232,3973,2.232,3974,2.232,3975,2.232,3976,2.232,3977,2.232,3978,2.232,3979,2.232,3980,2.232,3981,2.232,3982,3.404,3983,3.404,3984,3.404,3985,2.232,3986,2.232,3987,2.232,3988,1.829,3989,2.232,3990,2.232,3991,2.232,3992,2.232,3993,2.232,3994,2.232,3995,2.232,3996,2.232,3997,2.79,3998,2.232,3999,3.404,4000,2.232,4001,2.232,4002,2.001,4003,2.001,4004,2.232,4005,2.232,4006,2.232,4007,2.232,4008,2.232,4009,2.232,4010,2.232,4011,2.232,4012,2.232,4013,2.232,4014,2.232,4015,2.232,4016,2.232,4017,2.232,4018,2.232,4019,2.232,4020,2.232,4021,2.232,4022,2.232,4023,2.232,4024,4.126,4025,2.232,4026,2.001,4027,2.232,4028,2.232,4029,2.232,4030,2.001,4031,2.001,4032,2.232,4033,2.232,4034,2.232,4035,2.232,4036,3.404,4037,2.232,4038,2.232,4039,2.232,4040,2.232,4041,2.232,4042,3.404,4043,3.404,4044,2.232,4045,2.001,4046,2.232,4047,2.001,4048,2.232,4049,2.232,4050,2.232,4051,2.232,4052,2.232,4053,2.232,4054,2.232,4055,2.232,4056,2.232,4057,3.404,4058,2.232,4059,2.232,4060,2.232,4061,4.126,4062,3.404,4063,2.232,4064,2.232,4065,2.232,4066,2.232,4067,2.232,4068,2.232,4069,2.232,4070,2.232,4071,2.232,4072,2.232,4073,2.232,4074,2.232,4075,2.232,4076,2.232,4077,2.232,4078,2.232,4079,2.232,4080,2.232,4081,2.232,4082,2.001,4083,2.232,4084,2.232,4085,2.232,4086,2.232,4087,2.232,4088,2.232,4089,2.232,4090,2.232,4091,2.232,4092,2.232,4093,2.232,4094,2.232,4095,2.232,4096,2.232,4097,1.479,4098,2.232,4099,2.232,4100,2.232,4101,2.232,4102,2.232,4103,2.232,4104,2.232,4105,2.232,4106,2.232]],["title/interfaces/RangerType.html",[667,2.366,1219,1.542]],["body/interfaces/RangerType.html",[3,0.246,4,0.152,9,0.328,20,0.197,21,0.79,26,0.615,27,0.017,28,0.948,29,1.022,30,0.472,31,0.705,33,0.762,36,0.314,38,0.472,39,0.006,41,1.178,43,3.484,47,1.171,53,2.085,55,1.686,56,3.944,62,1.686,66,2.117,74,1.58,85,2.42,87,1.352,98,1.287,118,1.928,125,1.394,128,2.085,138,2.258,172,1.171,185,2.101,189,1.501,204,4.509,287,0.009,288,0.009,317,0.617,326,0.835,329,1.394,335,2.62,339,1.07,350,0.762,362,3.077,365,1.811,374,1.718,375,1.388,388,1.9,389,1.588,393,4.17,398,5.154,404,1.287,413,0.901,417,1.352,421,1.385,422,1.07,443,1.686,445,1.423,453,3.025,454,1.928,456,2.489,503,2.313,506,1.171,515,1.964,528,1.07,539,2.536,543,2.085,548,1.024,561,0.94,574,1.227,581,1.287,585,2.344,586,1.862,587,2.085,588,1.501,589,1.423,607,2.489,622,2.373,633,1.501,640,1.119,643,2.489,655,1.996,667,4.021,705,1.996,716,1.686,744,1.928,745,3.367,746,2.281,747,2.085,748,2.281,749,2.281,750,2.281,762,2.085,768,1.07,777,1.798,783,0.799,792,3.358,793,1.928,821,1.588,884,0.974,920,1.686,964,1.416,972,1.119,982,1.287,997,1.798,1030,2.281,1063,1.501,1123,1.928,1198,1.9,1211,1.9,1216,5.102,1219,1.171,1227,3.367,1275,3.077,1296,3.247,1319,1.501,1338,2.281,1419,1.588,1421,1.423,1461,1.501,1479,1.423,1497,1.798,1512,1.928,1513,1.287,1526,1.423,1550,2.62,1580,2.085,1581,3.077,1596,3.077,1604,1.352,1611,2.085,1612,2.281,1613,3.771,1614,2.281,1640,2.085,1648,1.501,1695,3.367,1696,2.281,1697,2.281,1698,3.367,1700,2.281,1721,3.367,1722,2.281,1735,2.281,1736,2.281,1841,1.352,1865,2.281,1907,3.077,1924,1.928,1943,1.928,1978,2.085,1988,1.928,2011,2.085,2015,2.085,2036,1.423,2042,2.846,2066,3.282,2110,2.653,2133,2.085,2159,1.686,2162,1.928,2268,1.928,2273,2.216,2278,2.281,2288,2.281,2291,2.085,2360,2.281,2492,2.085,2517,5.439,2610,2.281,2611,1.423,2612,2.085,2629,2.281,2630,2.281,2631,2.281,2635,1.928,2636,2.085,2639,1.686,2763,3.077,2840,3.077,2844,2.846,2856,2.281,2986,1.686,3038,1.686,3078,1.686,3082,1.352,3102,1.287,3177,1.928,3309,2.085,3445,2.085,3872,2.085,3873,2.543,3874,2.543,3875,2.543,3876,2.543,3882,2.543,3883,2.543,3887,2.543,3890,2.543,3899,2.543,3907,2.543,3909,2.543,3911,2.543,3913,3.755,3926,1.928,3927,2.543,3928,5.69,3929,4.928,3930,2.543,3931,2.543,3932,2.543,3933,2.543,3934,1.798,3935,2.281,3936,2.543,3937,3.658,3938,2.543,3939,2.543,3940,2.085,3941,2.543,3942,2.543,3943,2.543,3944,2.543,3945,2.543,3946,2.281,3947,2.543,3948,2.543,3949,2.543,3950,2.543,3951,2.543,3952,3.367,3953,2.543,3954,2.543,3955,2.543,3956,2.543,3957,2.543,3958,2.543,3959,3.755,3960,2.543,3961,5.256,3962,2.543,3963,2.543,3964,3.755,3965,2.543,3966,3.755,3967,2.543,3968,2.543,3969,2.281,3970,3.755,3971,2.543,3972,2.543,3973,2.543,3974,2.543,3975,2.543,3976,2.543,3977,2.543,3978,2.543,3979,2.543,3980,2.543,3981,2.543,3982,3.755,3983,3.755,3984,3.755,3985,2.543,3986,2.543,3987,2.543,3988,2.085,3989,2.543,3990,2.543,3991,2.543,3992,2.543,3993,2.543,3994,2.543,3995,2.543,3996,2.543,3997,3.077,3998,2.543,3999,3.755,4000,2.543,4001,2.543,4002,2.281,4003,2.281,4004,2.543,4005,2.543,4006,2.543,4007,2.543,4008,2.543,4009,2.543,4010,2.543,4011,2.543,4012,2.543,4013,2.543,4014,2.543,4015,2.543,4016,2.543,4017,2.543,4018,2.543,4019,2.543,4020,2.543,4021,2.543,4022,2.543,4023,2.543,4024,4.463,4025,2.543,4026,2.281,4027,2.543,4028,2.543,4029,2.543,4030,2.281,4031,2.281,4032,2.543,4033,2.543,4034,2.543,4035,2.543,4036,3.755,4037,2.543,4038,2.543,4039,2.543,4040,2.543,4041,2.543,4042,3.755,4043,3.755,4044,2.543,4045,2.281,4046,2.543,4047,2.281,4048,2.543,4049,2.543,4050,2.543,4051,2.543,4052,2.543,4053,2.543,4054,2.543,4055,2.543,4056,2.543,4057,3.755,4058,2.543,4059,2.543,4060,2.543,4061,4.463,4062,3.755,4063,2.543,4064,2.543,4065,2.543,4066,2.543,4067,2.543,4068,2.543,4069,2.543,4070,2.543,4071,2.543,4072,2.543,4073,2.543,4074,2.543,4075,2.543,4076,2.543,4077,2.543,4078,2.543,4079,2.543,4080,2.543,4081,2.543,4082,2.281,4083,2.543,4084,2.543,4085,2.543,4086,2.543,4087,2.543,4088,2.543,4089,2.543,4090,2.543,4091,2.543,4092,2.543,4093,2.543,4094,2.543,4095,2.543,4096,2.543,4097,1.686,4098,2.543,4099,2.543,4100,2.543,4101,2.543,4102,2.543,4103,2.543,4104,2.543,4105,2.543,4106,2.543]],["title/injectables/SettingsService.html",[13,1.348,783,0.712]],["body/injectables/SettingsService.html",[0,0.464,3,0.18,4,0.164,9,0.215,13,1.878,15,1.155,20,0.213,21,0.703,22,3.402,23,0.821,24,0.885,26,0.614,27,0.017,28,0.902,29,1.099,30,0.949,31,0.559,36,0.338,38,0.508,39,0.007,45,2.462,46,2.462,50,3.296,86,1.46,87,1.46,100,1.94,102,2.25,125,1.456,133,2.462,138,1.389,140,2.806,172,1.264,185,1.536,191,1.264,210,2.564,233,2.462,237,2.479,245,0.822,248,0.638,260,0.822,287,0.009,288,0.009,296,0.772,307,0.772,308,0.737,312,2.753,315,2.806,316,0.908,317,1.239,319,2.15,326,1.327,329,1.82,335,2.717,350,1.397,365,2.615,388,2.586,421,1.386,422,2.705,437,1.714,453,3.098,488,1.621,509,2.462,511,2.912,515,1.208,535,1.94,539,2.25,548,1.106,561,1.467,574,1.324,577,1.94,581,2.009,584,1.82,585,1.714,586,1.92,626,2.882,629,2.222,640,1.208,659,3.296,665,3.745,668,4.631,762,2.25,781,1.324,783,0.845,810,2.462,837,1.389,842,1.208,884,0.703,903,2.488,922,1.155,924,2.615,964,0.666,982,1.389,1004,2.222,1006,1.467,1018,1.714,1110,2.081,1123,3.535,1127,3.97,1198,2.009,1206,2.081,1214,2.25,1268,2.632,1296,3.439,1319,2.344,1352,2.746,1388,2.25,1479,2.222,1488,2.806,1513,1.389,1525,4.283,1527,4.664,1604,2.479,1619,2.746,1630,4.776,1633,4.182,1676,1.536,1739,2.462,1857,2.479,2035,3.56,2036,2.222,2056,2.462,2090,1.94,2110,2.806,2135,2.462,2137,2.462,2159,1.82,2199,5.11,2268,3.535,2289,3.091,2290,2.25,2292,1.46,2391,2.081,2397,2.081,2422,3.97,2612,4.443,2636,2.25,2702,3.97,2703,3.97,2734,2.806,2844,2.081,2878,3.254,2945,2.462,3160,2.462,3230,2.462,3552,3.254,3625,2.746,3716,2.746,3718,2.462,3724,2.746,3725,2.746,3726,2.746,3727,2.746,3940,2.25,3952,4.182,3969,2.462,3997,2.25,4002,2.462,4003,2.462,4026,2.462,4107,2.462,4108,6.271,4109,5.395,4110,6.741,4111,5.911,4112,5.911,4113,5.911,4114,5.911,4115,4.593,4116,4.593,4117,3.176,4118,3.176,4119,3.176,4120,3.176,4121,4.593,4122,3.176,4123,3.176,4124,4.593,4125,3.176,4126,4.593,4127,3.176,4128,3.176,4129,3.176,4130,4.664,4131,3.176,4132,3.176,4133,4.593,4134,3.176,4135,3.176,4136,3.176,4137,3.176,4138,3.176,4139,5.395,4140,4.593,4141,4.593,4142,4.593,4143,4.593,4144,4.593,4145,4.593,4146,4.593,4147,4.593,4148,4.593,4149,3.176,4150,3.176,4151,3.176,4152,3.176,4153,3.176,4154,2.462,4155,3.176,4156,3.176,4157,3.176,4158,3.176,4159,3.176,4160,3.176,4161,3.176,4162,4.593,4163,3.176,4164,3.176,4165,3.176,4166,3.176,4167,3.56,4168,5.395,4169,3.176,4170,5.911,4171,3.176,4172,3.176,4173,3.176,4174,3.176,4175,3.176,4176,4.593,4177,3.176,4178,3.176,4179,3.176,4180,3.176,4181,2.746,4182,3.176,4183,4.593,4184,3.176,4185,4.593,4186,3.176,4187,5.911,4188,4.593,4189,3.176,4190,3.176,4191,3.176,4192,2.462,4193,5.395,4194,3.176,4195,5.911,4196,3.176,4197,3.176,4198,3.176,4199,3.176,4200,3.176,4201,3.176,4202,3.176,4203,3.176,4204,3.176,4205,3.176,4206,3.176,4207,3.176,4208,3.176,4209,3.176,4210,3.176,4211,3.56,4212,3.176,4213,3.176,4214,3.176,4215,3.176,4216,3.176,4217,3.176,4218,3.176,4219,3.176,4220,2.746,4221,3.176,4222,3.176,4223,3.176,4224,3.176,4225,3.176,4226,3.176,4227,3.176,4228,3.176,4229,3.176,4230,4.593,4231,3.176,4232,4.593,4233,3.176]],["title/injectables/ShapeService.html",[656,2.538,783,0.712]],["body/injectables/ShapeService.html",[3,0.329,4,0.3,9,0.319,20,0.388,23,0.806,24,0.812,26,0.568,27,0.017,28,0.812,31,0.686,36,0.618,38,0.45,39,0.012,248,0.646,287,0.014,288,0.014,296,1.147,307,1.147,308,1.095,316,0.806,506,2.308,548,2.019,589,2.804,656,4.472,679,2.308,705,2.665,781,2.418,783,1.066,884,0.888,1550,3.441,1606,3.91,1821,3.799,1875,4.169,3384,4.495,3401,4.495,3403,4.495,4234,5.012,4235,6.824,4236,5.798,4237,5.798,4238,5.798,4239,5.798,4240,5.798,4241,5.798]],["title/classes/StreetAddress.html",[39,0.008,4242,3.002]],["body/classes/StreetAddress.html",[3,0.349,4,0.318,9,0.288,23,1.033,24,0.733,27,0.016,38,0.479,39,0.013,85,2.343,287,0.014,288,0.014,498,2.054,1004,2.979,2285,4.364,4242,5.479,4243,6.11,4244,5.325,4245,6.16,4246,6.16]],["title/injectables/TeamService.html",[657,1.78,783,0.712]],["body/injectables/TeamService.html",[3,0.16,4,0.146,9,0.132,20,0.189,21,0.645,23,0.393,24,0.85,26,0.556,27,0.017,28,0.859,29,0.847,30,0.809,31,0.566,33,1.091,36,0.301,38,0.392,39,0.009,40,0.984,41,1.431,47,2.224,55,3.592,66,0.984,87,1.937,191,1.125,210,2.979,211,2.19,245,1.447,248,0.746,260,1.848,287,0.009,288,0.009,296,0.708,307,0.847,308,0.809,316,0.871,317,1.314,326,0.969,329,1.138,362,1.525,369,1.619,372,1.726,375,0.645,387,1.405,390,3.079,413,1.29,417,2.747,421,1.122,441,1.525,453,3.587,459,2.721,488,3.199,501,1.366,503,1.075,504,1.236,505,1.298,506,1.125,527,1.525,528,1.028,539,3.281,548,1.467,551,1.726,584,2.888,586,0.865,607,1.619,622,1.298,626,1.298,633,1.441,657,2.881,669,4.108,705,1.298,781,1.178,782,1.619,783,0.927,792,2.572,842,1.603,853,2.496,884,0.645,903,1.785,924,1.757,964,1.362,972,2.274,976,3.303,982,2.743,1105,4.332,1146,1.619,1193,1.619,1194,1.726,1197,3.016,1211,1.236,1214,1.757,1219,1.678,1349,3.267,1377,4.602,1388,4.236,1412,2.986,1456,1.525,1480,2.575,1513,1.843,1526,1.366,1550,2.881,1603,1.525,1604,1.298,1647,2.19,1648,1.441,1672,3.267,1748,2.415,1821,5.114,1823,6.072,1841,2.568,1857,1.525,1872,3.303,1873,3.303,1882,2.986,1990,2.986,1991,1.851,1992,1.851,1993,1.851,1994,1.851,2156,2.19,2157,2.19,2158,3.267,2159,1.619,2322,2.19,2493,1.851,2565,2.572,2577,3.267,2734,1.726,2736,1.441,3083,1.726,3084,1.726,3100,2.575,3102,1.236,3103,2.002,3104,1.619,3105,2.986,3177,2.761,3552,2.986,3892,2.442,4154,2.19,4167,2.19,4192,2.19,4211,3.267,4247,2.19,4248,4.357,4249,4.214,4250,5.168,4251,4.831,4252,4.831,4253,2.825,4254,3.643,4255,2.825,4256,2.825,4257,2.825,4258,2.825,4259,2.825,4260,2.825,4261,3.643,4262,3.643,4263,3.643,4264,3.643,4265,2.825,4266,2.825,4267,2.825,4268,3.643,4269,3.643,4270,3.643,4271,2.825,4272,2.825,4273,3.643,4274,2.442,4275,3.643,4276,3.643,4277,2.442,4278,3.643,4279,3.643,4280,4.079,4281,3.643,4282,4.357,4283,6.239,4284,2.442,4285,3.267,4286,3.643,4287,3.643,4288,3.643,4289,2.442,4290,2.442,4291,2.442,4292,2.442,4293,3.643,4294,2.442,4295,2.442,4296,2.442,4297,2.442,4298,2.442,4299,2.442,4300,2.442,4301,5.168,4302,2.442,4303,5.168,4304,2.442,4305,5.168,4306,5.168,4307,2.442,4308,5.168,4309,5.168,4310,2.442,4311,2.442,4312,2.442,4313,2.442,4314,2.442,4315,2.442,4316,2.442,4317,2.442,4318,2.442,4319,3.643,4320,2.442,4321,2.442,4322,2.442,4323,2.442,4324,2.442,4325,2.442,4326,2.442,4327,2.442,4328,2.442,4329,2.442,4330,2.442,4331,2.442,4332,2.442,4333,2.442,4334,2.002,4335,2.442,4336,2.442,4337,2.442,4338,3.643,4339,2.442,4340,2.19,4341,2.442,4342,2.442,4343,2.442,4344,2.442,4345,2.442,4346,2.442,4347,3.643,4348,2.442,4349,2.442,4350,2.442,4351,2.442,4352,2.442,4353,2.442,4354,2.442,4355,3.643,4356,3.643,4357,2.442,4358,2.442,4359,2.442,4360,1.726,4361,2.442,4362,2.442,4363,2.442,4364,2.442,4365,2.442,4366,2.002]],["title/interfaces/TeamType.html",[669,2.538,1219,1.542]],["body/interfaces/TeamType.html",[3,0.172,4,0.157,9,0.142,20,0.203,21,0.68,26,0.535,27,0.017,28,0.918,31,0.583,33,1.15,36,0.323,38,0.408,39,0.009,40,1.056,41,1.014,47,1.208,55,3.315,66,1.056,87,2.042,191,1.208,210,3.005,211,2.352,245,1.498,248,0.749,260,1.666,287,0.009,288,0.009,317,0.636,326,1.184,329,1.199,362,1.638,369,1.739,372,1.854,375,0.693,387,1.481,390,3.211,413,1.36,417,2.83,421,1.162,441,1.638,453,3.62,459,2.837,488,3.283,501,1.468,503,1.154,504,1.327,505,1.395,506,1.208,527,1.638,528,1.104,539,3.307,548,1.547,551,1.854,584,3.012,586,0.929,607,1.739,622,1.395,626,1.395,633,1.548,657,2.83,669,3.791,705,1.395,782,1.739,783,0.967,792,2.682,842,1.69,853,2.561,884,0.68,903,1.419,924,1.265,964,1.393,972,2.342,976,1.988,982,2.814,1105,4.485,1193,1.739,1194,1.854,1197,3.123,1214,1.853,1219,1.769,1349,2.352,1377,4.709,1388,4.363,1412,3.148,1456,1.638,1480,2.714,1513,1.943,1526,1.468,1550,2.416,1603,1.638,1604,1.395,1647,2.352,1648,1.548,1672,3.444,1748,2.546,1821,5.162,1823,6.124,1841,2.416,1857,1.638,1872,1.988,1873,1.988,1990,2.15,1991,1.988,1992,1.988,1993,1.988,1994,1.988,2156,2.352,2157,2.352,2158,3.444,2159,1.739,2322,2.352,2493,1.988,2565,2.682,2577,3.444,2734,1.854,2736,1.548,3078,1.739,3083,1.854,3084,1.854,3100,2.714,3102,1.327,3103,2.15,3104,1.739,3105,3.148,3177,2.911,3552,3.148,4154,2.352,4167,2.352,4192,2.352,4211,3.444,4247,2.352,4248,2.623,4250,3.841,4251,2.623,4252,2.623,4254,2.623,4261,2.623,4262,2.623,4263,2.623,4264,2.623,4268,2.623,4269,2.623,4270,2.623,4273,3.841,4274,2.623,4275,3.841,4276,3.841,4277,2.623,4278,3.841,4279,3.841,4280,4.164,4281,3.841,4282,4.544,4283,6.325,4284,2.623,4285,3.444,4286,3.841,4287,3.841,4288,3.841,4289,2.623,4290,2.623,4291,2.623,4292,2.623,4293,3.841,4294,2.623,4295,2.623,4296,2.623,4297,2.623,4298,2.623,4299,2.623,4300,2.623,4301,5.323,4302,2.623,4303,5.323,4304,2.623,4305,5.323,4306,5.323,4307,2.623,4308,5.323,4309,5.323,4310,2.623,4311,2.623,4312,2.623,4313,2.623,4314,2.623,4315,2.623,4316,2.623,4317,2.623,4318,2.623,4319,3.841,4320,2.623,4321,2.623,4322,2.623,4323,2.623,4324,2.623,4325,2.623,4326,2.623,4327,2.623,4328,2.623,4329,2.623,4330,2.623,4331,2.623,4332,2.623,4333,2.623,4334,2.15,4335,2.623,4336,2.623,4337,2.623,4338,3.841,4339,2.623,4340,2.352,4341,2.623,4342,2.623,4343,2.623,4344,2.623,4345,2.623,4346,2.623,4347,3.841,4348,2.623,4349,2.623,4350,2.623,4351,2.623,4352,2.623,4353,2.623,4354,2.623,4355,3.841,4356,3.841,4357,2.623,4358,2.623,4359,2.623,4360,1.854,4361,2.623,4362,2.623,4363,2.623,4364,2.623,4365,2.623,4366,2.15]],["title/injectables/ThreeWordsService.html",[783,0.712,3119,2.538]],["body/injectables/ThreeWordsService.html",[3,0.312,4,0.285,8,2.636,9,0.258,20,0.369,23,0.766,24,0.656,27,0.016,28,0.656,31,0.522,36,0.587,38,0.428,39,0.011,50,4.337,78,2.411,125,1.488,147,4.273,166,2.975,172,2.194,287,0.014,288,0.014,296,1.113,316,0.766,435,4.273,458,4.273,546,3.158,548,2.564,574,2.762,589,3.562,640,2.942,642,2.813,679,2.194,726,3.158,775,2.813,779,4.765,781,2.299,783,1.218,784,5.029,807,4.765,825,4.692,884,0.844,1012,4.765,1291,3.612,1319,2.813,1513,2.897,2423,6.137,2634,4.765,3119,4.339,3303,5.725,3693,3.368,3988,5.029,4367,5.725,4368,5.725,4369,4.765,4370,7.364,4371,5.512,4372,5.512,4373,5.512,4374,7.099,4375,5.512,4376,5.512,4377,5.512,4378,5.512,4379,5.512,4380,5.512,4381,5.512,4382,4.765,4383,5.512,4384,5.512,4385,5.512,4386,5.512]],["title/guards/UnsavedChangesGuard.html",[803,2.744,4387,3.002]],["body/guards/UnsavedChangesGuard.html",[0,0.999,3,0.33,4,0.301,9,0.273,20,0.391,24,0.694,26,0.485,27,0.017,31,0.688,36,0.621,38,0.453,39,0.012,40,2.03,248,0.552,257,2.501,287,0.014,288,0.014,296,1.151,307,0.98,308,0.936,316,0.81,343,2.821,350,1.51,546,3.341,783,1.259,803,4.851,884,1.048,1113,4.132,1309,3.821,4334,4.132,4388,5.832,4389,5.919,4390,7.501,4391,6.847,4392,5.832,4393,5.832,4394,5.832,4395,5.832,4396,5.832,4397,5.832]],["title/classes/Utility.html",[39,0.008,1466,2.219]],["body/classes/Utility.html",[3,0.317,4,0.289,9,0.262,20,0.375,24,0.851,26,0.595,27,0.017,28,0.851,38,0.435,39,0.011,245,1.449,248,0.676,287,0.014,288,0.014,296,1.123,302,5.778,307,1.201,308,1.147,316,0.993,326,1.513,330,5.778,331,6.177,333,4.839,374,1.511,375,1.525,413,1.714,430,4.839,431,4.839,432,4.839,498,1.867,884,1.023,903,2.514,1466,3.83,1467,4.38,1468,3.966,1469,3.966,1470,3.966,1471,3.966,4398,4.839,4399,6.684,4400,5.181,4401,6.684,4402,5.598,4403,6.684,4404,5.598,4405,4.839,4406,5.598,4407,5.598,4408,5.598]],["title/classes/What3Words.html",[39,0.008,2364,1.976]],["body/classes/What3Words.html",[0,0.49,2,0.672,3,0.119,4,0.109,9,0.098,13,0.732,20,0.141,21,0.514,22,1.017,23,0.582,24,0.793,26,0.554,27,0.017,28,0.918,29,0.981,30,0.937,31,0.606,32,0.92,33,0.544,34,1.135,35,1.285,36,0.224,41,1.27,74,0.765,76,0.877,85,2.488,86,0.966,91,2.259,97,1.205,98,1.468,99,1.135,117,1.205,122,2.05,125,0.568,166,1.135,180,1.378,182,3.473,189,1.073,196,1.378,210,0.8,221,1.542,229,1.017,237,3.272,242,0.732,245,0.869,248,0.552,250,0.617,287,0.015,288,0.007,296,0.564,305,2.025,307,0.877,308,0.838,312,2.136,316,0.94,317,0.877,319,1.738,326,1.359,328,2.259,339,0.765,343,1.017,348,1.017,350,1.511,356,1.073,366,0.966,374,1.636,386,1.135,387,1.396,404,0.92,413,0.644,421,0.674,422,1.523,425,1.135,427,1.399,433,1.017,445,1.017,452,1.205,459,1.135,488,1.073,498,0.701,508,1.542,511,1.135,515,1.276,518,1.135,520,1.378,539,0.877,540,1.285,544,2.743,574,0.877,586,1.913,588,3.188,620,1.205,640,0.8,686,1.285,703,1.135,753,3.42,768,1.22,775,1.073,796,2.05,815,1.378,837,0.92,840,3.874,842,1.817,843,3.151,844,2.683,848,2.311,849,3.972,850,4.235,851,1.285,884,1.02,894,1.285,903,1.667,910,1.073,916,1.285,918,1.378,922,0.765,924,1.399,927,1.378,939,1.378,964,1.001,970,2.557,972,2.572,978,2.136,982,1.468,999,0.92,1003,5.012,1006,1.337,1048,2.532,1060,0.765,1112,1.285,1141,1.285,1188,1.811,1211,0.92,1271,1.205,1306,1.378,1307,2.579,1319,1.073,1360,1.712,1366,1.285,1398,1.135,1445,1.542,1448,1.542,1454,2.572,1472,2.522,1607,2.05,1643,1.378,1654,1.712,1673,2.737,1676,1.623,1714,1.205,1770,2.743,1841,2.557,1927,1.285,2032,2.557,2034,1.285,2036,2.824,2234,1.285,2251,1.378,2252,1.378,2256,1.205,2260,3.188,2265,2.398,2273,2.663,2343,1.378,2364,2.979,2384,1.811,2433,1.378,2436,1.378,2441,3.645,2450,1.378,2459,1.378,2565,1.073,2572,1.378,2611,1.017,2639,2.398,2642,1.378,2653,1.378,2726,2.05,2727,1.378,2728,4.363,2736,1.073,2814,1.285,2816,4.198,2817,1.378,2868,4.279,2956,1.285,2964,2.919,2965,2.198,2967,2.198,2968,2.198,2969,2.198,2970,1.378,2971,4.705,2973,2.198,2974,1.378,2975,2.198,2977,2.198,2978,1.378,2979,3.13,2980,2.198,2983,2.198,2985,2.198,2986,1.205,2987,1.378,2988,1.378,2989,1.378,2990,2.198,2991,3.645,2992,2.198,2993,3.825,2995,1.378,2996,2.557,3038,1.922,3082,0.966,3102,0.92,3240,1.378,3278,2.198,3285,1.378,3288,1.378,3583,2.557,3661,1.378,3693,3.566,3710,1.378,3859,1.378,3934,1.285,4097,1.922,4280,1.285,4360,2.05,4409,1.378,4410,3.385,4411,4.136,4412,3.385,4413,3.385,4414,3.355,4415,3.355,4416,3.355,4417,3.355,4418,3.355,4419,3.355,4420,2.103,4421,2.103,4422,3.385,4423,2.377,4424,3.385,4425,2.377,4426,2.377,4427,2.103,4428,2.377,4429,2.966,4430,2.377,4431,2.103,4432,2.966,4433,3.698,4434,2.103,4435,2.377,4436,2.966,4437,2.966,4438,2.103,4439,2.377,4440,3.385,4441,2.103,4442,2.377,4443,4.718,4444,2.103,4445,4.539,4446,2.377,4447,2.103,4448,3.698,4449,2.377,4450,2.103,4451,2.103,4452,2.103,4453,2.377,4454,1.49,4455,2.966,4456,2.966,4457,1.49,4458,2.377,4459,3.385,4460,1.49,4461,1.49,4462,1.49,4463,1.49,4464,1.49,4465,1.49,4466,1.49,4467,2.198,4468,2.377,4469,1.49,4470,1.49,4471,1.49,4472,1.49,4473,1.49,4474,1.49,4475,1.49,4476,1.49,4477,1.49,4478,1.49,4479,1.49,4480,1.49,4481,1.49,4482,1.49,4483,1.49,4484,2.377,4485,1.378,4486,1.49,4487,1.49,4488,1.49,4489,1.49,4490,1.49,4491,1.49,4492,2.377,4493,1.49,4494,1.49,4495,1.285,4496,1.49,4497,1.49,4498,1.49,4499,1.49,4500,1.49,4501,2.377,4502,1.49,4503,1.49,4504,1.49,4505,1.49,4506,1.49,4507,2.377,4508,1.49,4509,2.377,4510,2.377,4511,2.377,4512,2.377,4513,2.377,4514,2.377,4515,2.377,4516,2.377,4517,3.698,4518,1.49,4519,2.377,4520,1.49,4521,2.377,4522,2.377,4523,2.966,4524,1.49,4525,1.49,4526,2.377,4527,1.49,4528,1.49,4529,2.377,4530,1.49,4531,1.49,4532,1.49,4533,1.49,4534,1.49,4535,1.49,4536,1.49,4537,1.49,4538,1.49,4539,2.377,4540,2.377,4541,1.49,4542,2.377,4543,1.49,4544,2.966,4545,1.49,4546,4.136,4547,1.49,4548,1.49,4549,3.698,4550,3.698,4551,1.49,4552,1.49,4553,1.49,4554,1.49,4555,1.49,4556,1.49,4557,1.49,4558,1.49,4559,1.49,4560,1.49,4561,2.377,4562,1.49,4563,2.377,4564,1.49,4565,1.49,4566,1.49,4567,4.427,4568,1.49,4569,1.49,4570,2.377,4571,2.377,4572,3.385,4573,1.49,4574,1.49,4575,1.49,4576,1.49,4577,1.49,4578,4.718,4579,1.49,4580,1.49,4581,1.49,4582,1.49,4583,1.49,4584,1.49,4585,1.49,4586,1.49,4587,1.49,4588,1.49,4589,1.49,4590,1.49,4591,1.49,4592,1.49,4593,1.49,4594,1.49,4595,2.377,4596,2.377,4597,1.49,4598,1.49,4599,2.377,4600,1.49,4601,1.49,4602,1.49,4603,1.49,4604,1.49,4605,1.49,4606,1.49,4607,1.49,4608,1.49,4609,1.49,4610,1.49,4611,1.49,4612,1.49,4613,1.378,4614,1.49,4615,1.49,4616,1.49,4617,1.49,4618,1.49,4619,1.49,4620,1.49,4621,1.49,4622,1.49,4623,4.427,4624,1.49,4625,1.49,4626,1.49,4627,1.49,4628,2.377,4629,1.49,4630,1.49,4631,1.49,4632,1.378,4633,1.49,4634,1.49,4635,1.49,4636,1.49,4637,1.49,4638,1.49,4639,1.49,4640,1.49,4641,1.49,4642,1.49,4643,1.49,4644,1.49,4645,1.49,4646,1.49,4647,1.49,4648,1.49,4649,1.49,4650,1.49,4651,1.49,4652,1.49,4653,1.49,4654,1.49,4655,1.49,4656,1.49,4657,1.49,4658,2.377,4659,1.49,4660,1.49,4661,1.49,4662,1.49,4663,1.49,4664,1.49,4665,1.49,4666,1.49,4667,2.377,4668,3.698,4669,1.49,4670,1.49,4671,2.377,4672,2.377,4673,1.49,4674,2.377,4675,2.966,4676,2.377,4677,2.377,4678,1.49,4679,1.49,4680,1.49,4681,1.49,4682,1.49]],["title/interfaces/What3wordsAddress33.html",[1219,1.542,4683,3.002]],["body/interfaces/What3wordsAddress33.html",[0,0.513,2,0.712,3,0.126,4,0.115,9,0.104,13,0.776,20,0.149,21,0.538,22,1.078,23,0.31,26,0.543,27,0.017,28,0.923,29,0.375,30,0.358,31,0.617,32,0.975,33,0.577,34,1.203,35,1.362,36,0.238,41,0.802,74,0.811,76,0.93,85,2.529,86,1.025,91,2.348,97,1.278,98,1.537,99,1.203,117,1.278,122,2.147,125,0.602,166,1.203,180,1.461,182,3.546,189,1.138,196,1.461,210,0.848,221,2.468,229,1.078,237,3.34,242,0.776,245,0.91,248,0.333,250,0.654,287,0.015,288,0.007,305,2.104,312,2.219,316,0.83,319,2.316,326,1.349,328,2.348,339,0.811,343,1.078,348,1.078,350,1.39,356,1.138,366,1.025,374,1.671,386,1.203,387,1.45,404,0.975,413,0.683,421,0.706,422,0.811,425,1.203,427,1.466,433,1.078,445,1.078,452,1.278,459,1.203,488,1.138,508,1.615,511,1.203,515,1.337,518,1.203,520,1.461,539,0.93,540,1.362,544,2.85,574,0.93,586,1.95,588,3.249,620,1.278,640,0.848,686,1.362,703,1.203,753,2.85,768,1.278,775,1.138,796,2.147,815,1.461,837,0.975,840,3.929,842,1.878,843,3.223,844,2.745,848,2.388,849,4.055,850,4.288,851,1.362,884,1.035,894,3.016,903,0.712,910,1.138,916,1.362,918,1.461,922,0.811,924,1.466,927,1.461,939,1.461,964,1.035,970,2.657,972,2.608,978,1.793,982,1.537,999,0.975,1003,5.042,1006,1.389,1048,2.541,1060,0.811,1112,1.362,1141,1.362,1188,1.897,1211,0.975,1271,1.278,1306,1.461,1307,2.664,1319,1.138,1360,1.793,1366,1.362,1398,1.203,1445,1.615,1448,1.615,1454,2.571,1472,2.495,1607,2.147,1643,1.461,1654,1.793,1673,2.492,1676,1.078,1714,1.278,1770,2.85,1841,2.622,1927,1.362,2032,2.147,2034,1.362,2036,2.889,2234,1.362,2252,1.461,2256,1.278,2260,2.014,2265,2.492,2273,2.741,2343,1.461,2364,2.912,2384,1.897,2433,1.461,2436,1.461,2441,3.739,2450,1.461,2459,3.235,2565,1.138,2572,1.461,2611,1.078,2639,2.492,2642,1.461,2653,1.461,2726,2.147,2727,1.461,2728,4.43,2736,1.138,2814,1.362,2816,4.272,2817,1.461,2868,4.432,2956,1.362,2964,2.657,2965,1.461,2967,1.461,2968,1.461,2969,1.461,2970,1.461,2971,4.753,2973,2.303,2974,1.461,2975,2.303,2977,2.303,2978,1.461,2979,3.235,2980,2.303,2983,2.303,2985,2.303,2986,1.278,2987,1.461,2988,1.461,2989,1.461,2990,2.303,2991,3.739,2992,2.303,2993,3.913,2995,1.461,2996,2.657,3038,3.077,3078,1.278,3082,1.025,3102,0.975,3240,1.461,3278,2.303,3285,1.461,3288,1.461,3583,2.657,3661,1.461,3693,3.649,3710,1.461,3859,1.461,3934,1.362,4097,2.014,4280,1.362,4360,2.147,4409,1.461,4410,2.49,4411,3.805,4412,2.49,4413,1.58,4422,3.082,4423,1.58,4424,3.082,4425,1.58,4426,1.58,4428,1.58,4429,2.49,4430,1.58,4432,2.49,4433,3.082,4435,1.58,4436,2.49,4437,2.49,4439,1.58,4440,2.49,4442,1.58,4443,4.619,4445,4.512,4446,1.58,4448,3.082,4449,1.58,4453,1.58,4454,1.58,4455,3.082,4456,3.082,4457,1.58,4458,2.49,4459,3.497,4460,1.58,4461,1.58,4462,1.58,4463,1.58,4464,1.58,4465,1.58,4466,1.58,4467,2.303,4468,2.49,4469,1.58,4470,1.58,4471,1.58,4472,1.58,4473,1.58,4474,1.58,4475,1.58,4476,1.58,4477,1.58,4478,1.58,4479,1.58,4480,1.58,4481,1.58,4482,1.58,4483,1.58,4484,2.49,4485,1.461,4486,1.58,4487,1.58,4488,1.58,4489,1.58,4490,1.58,4491,1.58,4492,2.49,4493,1.58,4494,1.58,4495,1.362,4496,1.58,4497,1.58,4498,1.58,4499,1.58,4500,1.58,4501,2.49,4502,1.58,4503,3.497,4504,3.497,4505,3.497,4506,3.497,4507,2.49,4508,1.58,4509,2.49,4510,2.49,4511,2.49,4512,2.49,4513,2.49,4514,2.49,4515,2.49,4516,2.49,4517,3.805,4518,1.58,4519,2.49,4520,1.58,4521,2.49,4522,2.49,4523,3.082,4524,1.58,4525,1.58,4526,2.49,4527,1.58,4528,1.58,4529,2.49,4530,1.58,4531,1.58,4532,1.58,4533,1.58,4534,1.58,4535,1.58,4536,1.58,4537,1.58,4538,1.58,4539,2.49,4540,2.49,4541,1.58,4542,2.49,4543,1.58,4544,3.082,4545,1.58,4546,4.231,4547,1.58,4548,1.58,4549,3.805,4550,3.805,4551,1.58,4552,1.58,4553,1.58,4554,1.58,4555,1.58,4556,1.58,4557,1.58,4558,1.58,4559,1.58,4560,1.58,4561,2.49,4562,1.58,4563,2.49,4564,1.58,4565,1.58,4566,1.58,4567,4.512,4568,1.58,4569,1.58,4570,2.49,4571,2.49,4572,3.497,4573,1.58,4574,1.58,4575,1.58,4576,1.58,4577,1.58,4578,4.79,4579,1.58,4580,1.58,4581,1.58,4582,1.58,4583,1.58,4584,1.58,4585,1.58,4586,1.58,4587,1.58,4588,1.58,4589,1.58,4590,1.58,4591,1.58,4592,1.58,4593,1.58,4594,1.58,4595,2.49,4596,2.49,4597,1.58,4598,1.58,4599,2.49,4600,1.58,4601,1.58,4602,1.58,4603,1.58,4604,1.58,4605,1.58,4606,1.58,4607,1.58,4608,1.58,4609,1.58,4610,1.58,4611,1.58,4612,1.58,4613,1.461,4614,1.58,4615,1.58,4616,1.58,4617,1.58,4618,1.58,4619,1.58,4620,1.58,4621,1.58,4622,1.58,4623,4.512,4624,1.58,4625,1.58,4626,1.58,4627,1.58,4628,2.49,4629,1.58,4630,1.58,4631,1.58,4632,1.461,4633,1.58,4634,1.58,4635,1.58,4636,1.58,4637,1.58,4638,1.58,4639,1.58,4640,1.58,4641,1.58,4642,1.58,4643,1.58,4644,1.58,4645,1.58,4646,1.58,4647,1.58,4648,1.58,4649,1.58,4650,1.58,4651,1.58,4652,1.58,4653,1.58,4654,1.58,4655,1.58,4656,1.58,4657,1.58,4658,2.49,4659,1.58,4660,1.58,4661,1.58,4662,1.58,4663,1.58,4664,1.58,4665,1.58,4666,1.58,4667,2.49,4668,3.805,4669,1.58,4670,1.58,4671,2.49,4672,2.49,4673,1.58,4674,2.49,4675,3.082,4676,2.49,4677,2.49,4678,1.58,4679,1.58,4680,1.58,4681,1.58,4682,1.58,4683,1.728]],["title/interfaces/What3wordsAutosuggest33.html",[1219,1.542,4684,3.002]],["body/interfaces/What3wordsAutosuggest33.html",[0,0.504,2,0.697,3,0.124,4,0.113,9,0.102,13,0.76,20,0.146,21,0.529,22,1.056,23,0.303,26,0.592,27,0.017,28,0.939,29,0.367,30,0.35,31,0.613,32,0.955,33,0.565,34,1.178,35,1.333,36,0.233,41,0.789,74,0.794,76,0.91,85,2.514,86,1.003,91,2.315,97,1.25,98,1.511,99,1.178,117,1.25,122,2.111,125,0.589,166,1.178,180,1.43,182,3.519,189,1.114,196,1.43,210,0.83,221,1.588,229,1.056,237,3.315,242,0.76,245,0.895,248,0.503,250,0.641,287,0.015,288,0.007,305,2.075,312,2.189,316,0.823,319,1.934,326,1.368,328,2.315,339,0.794,343,1.056,348,1.056,350,1.376,356,1.114,366,1.003,374,1.658,386,1.178,387,1.43,404,0.955,413,0.668,421,0.694,422,0.794,425,1.178,427,1.441,433,1.056,445,1.056,452,1.25,459,1.178,488,1.114,508,1.588,511,1.178,515,1.314,518,1.178,520,1.43,539,0.91,540,1.333,544,3.705,574,0.91,586,1.936,588,3.227,620,1.25,640,0.83,686,1.333,703,1.178,753,3.705,768,1.257,775,1.114,796,2.111,815,1.43,837,0.955,840,3.909,842,1.855,843,3.197,844,2.722,848,2.359,849,4.025,850,4.269,851,1.333,884,1.029,894,1.333,903,0.697,910,1.114,916,1.333,918,1.43,922,0.794,924,1.441,927,1.43,939,1.43,964,1.022,970,2.62,972,2.595,978,1.763,982,1.511,999,0.955,1003,5.031,1006,1.37,1048,2.532,1060,0.794,1112,1.333,1141,1.333,1188,1.865,1211,0.955,1271,1.25,1306,1.43,1307,2.633,1319,1.114,1360,1.763,1366,1.333,1398,1.178,1445,1.588,1448,1.588,1454,2.557,1472,2.482,1607,2.111,1643,1.43,1654,1.763,1673,3.239,1676,1.056,1714,1.25,1770,2.811,1841,2.598,1927,1.333,2032,2.111,2034,1.333,2036,2.865,2234,1.333,2252,1.43,2256,1.25,2260,1.98,2265,2.458,2273,2.712,2343,1.43,2364,2.885,2384,1.865,2433,1.43,2436,1.43,2441,3.705,2450,1.43,2459,1.43,2565,1.114,2572,1.43,2611,1.056,2639,2.458,2642,1.43,2653,1.43,2726,2.111,2727,1.43,2728,4.405,2736,1.114,2814,1.333,2816,4.245,2817,1.43,2868,4.311,2956,1.333,2964,2.62,2965,1.43,2967,1.43,2968,1.43,2969,1.43,2970,1.43,2971,4.735,2973,2.264,2974,1.43,2975,2.264,2977,2.264,2978,1.43,2979,3.196,2980,2.264,2983,2.264,2985,2.264,2986,1.25,2987,1.43,2988,1.43,2989,1.43,2990,2.264,2991,3.705,2992,2.264,2993,3.881,2995,1.43,2996,2.62,3038,1.98,3078,1.25,3082,1.003,3102,0.955,3240,1.43,3278,2.264,3285,1.43,3288,1.43,3583,2.62,3661,1.43,3693,3.619,3710,1.43,3859,1.43,3934,1.333,4097,1.98,4280,1.333,4360,2.111,4409,1.43,4410,2.448,4411,3.766,4412,2.448,4413,1.546,4422,3.039,4423,1.546,4424,3.039,4425,1.546,4426,1.546,4428,1.546,4429,2.448,4430,1.546,4432,2.448,4433,3.039,4435,1.546,4436,2.448,4437,2.448,4439,1.546,4440,2.448,4442,1.546,4443,4.59,4445,4.481,4446,1.546,4448,3.039,4449,1.546,4453,1.546,4454,1.546,4455,3.039,4456,3.039,4457,1.546,4458,2.448,4459,3.456,4460,1.546,4461,1.546,4462,1.546,4463,1.546,4464,1.546,4465,1.546,4466,1.546,4467,2.264,4468,2.448,4469,1.546,4470,1.546,4471,1.546,4472,1.546,4473,1.546,4474,1.546,4475,1.546,4476,1.546,4477,1.546,4478,1.546,4479,1.546,4480,1.546,4481,1.546,4482,1.546,4483,1.546,4484,2.448,4485,1.43,4486,1.546,4487,1.546,4488,1.546,4489,1.546,4490,1.546,4491,1.546,4492,2.448,4493,1.546,4494,1.546,4495,1.333,4496,1.546,4497,1.546,4498,1.546,4499,1.546,4500,1.546,4501,2.448,4502,1.546,4503,1.546,4504,1.546,4505,1.546,4506,1.546,4507,2.448,4508,1.546,4509,3.766,4510,3.766,4511,3.766,4512,3.766,4513,3.766,4514,3.766,4515,3.766,4516,3.766,4517,4.352,4518,1.546,4519,3.766,4520,1.546,4521,3.766,4522,3.766,4523,3.039,4524,1.546,4525,1.546,4526,2.448,4527,1.546,4528,1.546,4529,2.448,4530,1.546,4531,1.546,4532,1.546,4533,1.546,4534,1.546,4535,1.546,4536,1.546,4537,1.546,4538,1.546,4539,2.448,4540,2.448,4541,1.546,4542,2.448,4543,1.546,4544,3.039,4545,1.546,4546,4.196,4547,1.546,4548,1.546,4549,3.766,4550,3.766,4551,1.546,4552,1.546,4553,1.546,4554,1.546,4555,1.546,4556,1.546,4557,1.546,4558,1.546,4559,1.546,4560,1.546,4561,2.448,4562,1.546,4563,2.448,4564,1.546,4565,1.546,4566,1.546,4567,4.481,4568,1.546,4569,1.546,4570,2.448,4571,2.448,4572,3.456,4573,1.546,4574,1.546,4575,1.546,4576,1.546,4577,1.546,4578,4.763,4579,1.546,4580,1.546,4581,1.546,4582,1.546,4583,1.546,4584,1.546,4585,1.546,4586,1.546,4587,1.546,4588,1.546,4589,1.546,4590,1.546,4591,1.546,4592,1.546,4593,1.546,4594,1.546,4595,2.448,4596,2.448,4597,1.546,4598,1.546,4599,2.448,4600,1.546,4601,1.546,4602,1.546,4603,1.546,4604,1.546,4605,1.546,4606,1.546,4607,1.546,4608,1.546,4609,1.546,4610,1.546,4611,1.546,4612,1.546,4613,1.43,4614,1.546,4615,1.546,4616,1.546,4617,1.546,4618,1.546,4619,1.546,4620,1.546,4621,1.546,4622,1.546,4623,4.481,4624,1.546,4625,1.546,4626,1.546,4627,1.546,4628,2.448,4629,1.546,4630,1.546,4631,1.546,4632,1.43,4633,1.546,4634,1.546,4635,1.546,4636,1.546,4637,1.546,4638,1.546,4639,1.546,4640,1.546,4641,1.546,4642,1.546,4643,1.546,4644,1.546,4645,1.546,4646,1.546,4647,1.546,4648,1.546,4649,1.546,4650,1.546,4651,1.546,4652,1.546,4653,1.546,4654,1.546,4655,1.546,4656,1.546,4657,1.546,4658,2.448,4659,1.546,4660,1.546,4661,1.546,4662,1.546,4663,1.546,4664,1.546,4665,1.546,4666,1.546,4667,2.448,4668,3.766,4669,1.546,4670,1.546,4671,2.448,4672,2.448,4673,1.546,4674,2.448,4675,3.039,4676,2.448,4677,2.448,4678,1.546,4679,1.546,4680,1.546,4681,1.546,4682,1.546,4684,1.692]],["title/interfaces/What3wordsSymbol33.html",[1219,1.542,4685,3.002]],["body/interfaces/What3wordsSymbol33.html",[0,0.522,2,0.728,3,0.129,4,0.118,9,0.107,13,0.793,20,0.153,21,0.547,22,1.102,23,0.317,26,0.367,27,0.017,28,0.91,29,0.383,30,0.366,31,0.621,32,0.997,33,0.59,34,1.23,35,1.392,36,0.243,41,0.816,74,0.829,76,0.95,85,2.544,86,1.047,91,2.381,97,1.306,98,1.564,99,1.23,117,1.306,122,2.184,125,0.615,166,1.23,180,1.493,182,3.573,189,1.163,196,1.493,210,1.9,221,2.494,229,1.102,237,3.366,242,0.793,245,0.926,248,0.338,250,0.669,287,0.015,288,0.007,305,2.134,312,2.251,316,0.837,319,1.605,326,1.355,328,2.381,339,0.829,343,1.102,348,1.102,350,1.405,356,1.163,366,1.047,374,1.683,386,1.23,387,1.471,404,0.997,413,0.698,421,0.718,422,0.829,425,1.23,427,1.491,433,1.102,445,1.102,452,1.306,459,1.23,488,1.163,508,1.643,511,1.23,515,1.36,518,1.23,520,1.493,539,0.95,540,1.392,544,2.891,574,0.95,586,1.963,588,3.272,620,1.306,640,0.867,686,1.392,703,1.23,753,2.891,768,1.301,775,1.163,796,2.184,815,1.493,837,0.997,840,3.949,842,1.9,843,3.25,844,2.767,848,2.417,849,4.086,850,4.308,851,1.392,884,1.041,894,1.392,903,0.728,910,1.163,916,1.392,918,1.493,922,0.829,924,1.491,927,1.493,939,1.493,964,1.047,970,2.695,972,2.622,978,1.824,982,1.564,999,0.997,1003,5.052,1006,1.409,1048,2.55,1060,0.829,1112,1.392,1141,1.392,1188,1.93,1211,0.997,1271,1.306,1306,1.493,1307,2.697,1319,1.163,1360,1.824,1366,1.392,1398,1.23,1445,1.643,1448,1.643,1454,2.585,1472,2.507,1607,2.184,1643,1.493,1654,1.824,1673,2.528,1676,1.102,1714,1.306,1770,2.891,1841,2.647,1927,1.392,2032,2.184,2034,1.392,2036,2.913,2234,1.392,2252,1.493,2256,1.306,2260,2.049,2265,2.528,2273,2.77,2343,1.493,2364,2.939,2384,1.93,2433,1.493,2436,1.493,2441,3.774,2450,1.493,2459,1.493,2565,1.163,2572,1.493,2611,1.102,2639,2.528,2642,1.493,2653,1.493,2726,2.184,2727,1.493,2728,4.454,2736,1.163,2814,1.392,2816,4.299,2817,1.493,2868,4.349,2956,1.392,2964,2.695,2965,1.493,2967,1.493,2968,1.493,2969,1.493,2970,1.493,2971,4.771,2973,2.343,2974,1.493,2975,2.343,2977,2.343,2978,1.493,2979,3.274,2980,2.343,2983,2.343,2985,2.343,2986,1.306,2987,1.493,2988,1.493,2989,1.493,2990,2.343,2991,3.774,2992,2.343,2993,3.946,2995,1.493,2996,2.695,3038,2.049,3078,1.306,3082,1.047,3102,0.997,3240,1.493,3278,2.343,3285,1.493,3288,1.493,3583,2.695,3661,1.493,3693,3.679,3710,1.493,3859,1.493,3934,1.392,4097,2.049,4280,1.392,4360,2.184,4409,1.493,4410,2.533,4411,3.846,4412,2.533,4413,1.615,4422,3.126,4423,1.615,4424,3.126,4425,1.615,4426,1.615,4428,1.615,4429,2.533,4430,1.615,4432,2.533,4433,3.126,4435,1.615,4436,2.533,4437,2.533,4439,1.615,4440,2.533,4442,1.615,4443,4.648,4445,4.543,4446,1.615,4448,3.126,4449,1.615,4453,1.615,4454,1.615,4455,3.126,4456,3.126,4457,1.615,4458,2.533,4459,3.54,4460,1.615,4461,1.615,4462,1.615,4463,1.615,4464,1.615,4465,1.615,4466,1.615,4467,2.343,4468,2.533,4469,1.615,4470,1.615,4471,1.615,4472,1.615,4473,1.615,4474,1.615,4475,1.615,4476,1.615,4477,1.615,4478,1.615,4479,1.615,4480,1.615,4481,1.615,4482,1.615,4483,1.615,4484,2.533,4485,1.493,4486,1.615,4487,1.615,4488,1.615,4489,1.615,4490,1.615,4491,1.615,4492,2.533,4493,1.615,4494,1.615,4495,1.392,4496,1.615,4497,1.615,4498,1.615,4499,1.615,4500,1.615,4501,2.533,4502,1.615,4503,1.615,4504,1.615,4505,1.615,4506,1.615,4507,2.533,4508,1.615,4509,2.533,4510,2.533,4511,2.533,4512,2.533,4513,2.533,4514,2.533,4515,2.533,4516,2.533,4517,3.846,4518,1.615,4519,2.533,4520,1.615,4521,2.533,4522,2.533,4523,3.126,4524,1.615,4525,1.615,4526,2.533,4527,1.615,4528,1.615,4529,2.533,4530,1.615,4531,1.615,4532,1.615,4533,1.615,4534,1.615,4535,1.615,4536,1.615,4537,1.615,4538,1.615,4539,2.533,4540,2.533,4541,1.615,4542,2.533,4543,1.615,4544,3.126,4545,1.615,4546,4.267,4547,1.615,4548,1.615,4549,3.846,4550,3.846,4551,1.615,4552,1.615,4553,1.615,4554,1.615,4555,1.615,4556,1.615,4557,1.615,4558,1.615,4559,1.615,4560,1.615,4561,2.533,4562,1.615,4563,2.533,4564,1.615,4565,1.615,4566,1.615,4567,4.543,4568,1.615,4569,1.615,4570,2.533,4571,2.533,4572,3.54,4573,1.615,4574,1.615,4575,1.615,4576,1.615,4577,1.615,4578,4.816,4579,1.615,4580,1.615,4581,1.615,4582,1.615,4583,1.615,4584,1.615,4585,1.615,4586,1.615,4587,1.615,4588,1.615,4589,1.615,4590,1.615,4591,1.615,4592,1.615,4593,1.615,4594,1.615,4595,2.533,4596,2.533,4597,1.615,4598,1.615,4599,2.533,4600,1.615,4601,1.615,4602,1.615,4603,1.615,4604,1.615,4605,1.615,4606,1.615,4607,1.615,4608,1.615,4609,1.615,4610,1.615,4611,1.615,4612,1.615,4613,1.493,4614,1.615,4615,1.615,4616,1.615,4617,1.615,4618,1.615,4619,1.615,4620,1.615,4621,1.615,4622,1.615,4623,4.543,4624,1.615,4625,1.615,4626,1.615,4627,1.615,4628,2.533,4629,1.615,4630,1.615,4631,1.615,4632,1.493,4633,1.615,4634,1.615,4635,1.615,4636,1.615,4637,1.615,4638,1.615,4639,1.615,4640,1.615,4641,1.615,4642,1.615,4643,1.615,4644,1.615,4645,1.615,4646,1.615,4647,1.615,4648,1.615,4649,1.615,4650,1.615,4651,1.615,4652,1.615,4653,1.615,4654,1.615,4655,1.615,4656,1.615,4657,1.615,4658,2.533,4659,1.615,4660,1.615,4661,1.615,4662,1.615,4663,1.615,4664,1.615,4665,1.615,4666,1.615,4667,2.533,4668,3.846,4669,1.615,4670,1.615,4671,2.533,4672,2.533,4673,1.615,4674,2.533,4675,3.126,4676,2.533,4677,2.533,4678,1.615,4679,1.615,4680,1.615,4681,1.615,4682,1.615,4685,1.767]],["title/components/X404Component.html",[0,0.565,283,1.291]],["body/components/X404Component.html",[0,1.008,1,1.652,2,2.035,3,0.293,4,0.267,5,2.157,6,2.502,7,2.157,8,2.059,9,0.242,11,2.059,14,3.204,15,2.9,16,2.657,18,2.657,20,0.346,23,0.959,24,0.758,27,0.016,31,0.49,33,1.787,36,0.551,38,0.402,39,0.011,40,2.218,47,2.868,241,2.157,242,2.218,243,2.657,244,2.157,245,1.865,246,2.157,248,0.603,249,2.157,250,1.518,251,2.157,252,1.801,253,2.157,254,1.801,255,2.657,256,2.879,257,1.725,258,2.157,259,1.652,260,1.339,261,2.157,262,1.801,263,2.157,264,1.801,265,2.157,266,1.967,267,2.157,268,1.801,269,2.157,270,1.801,271,2.157,272,1.725,273,2.157,274,1.801,275,1.801,276,2.157,277,1.801,278,2.157,279,1.801,280,2.157,281,1.801,282,2.157,283,2.402,284,2.879,285,2.059,286,2.157,287,0.013,288,0.013,296,1.071,316,0.719,317,1.335,356,3.251,421,1.038,437,3.727,586,1.951,884,0.792,3588,5.507,4097,2.964,4686,4.472,4687,6.904,4688,6.371,4689,5.173,4690,5.173,4691,5.173,4692,5.173,4693,6.371,4694,5.173,4695,5.173]],["title/changelog.html",[43,1.855,2566,2.294,4696,2.798]],["body/changelog.html",[9,0.289,22,2.99,27,0.015,105,5.491,287,0.015,288,0.015,448,3.542,515,2.352,1309,4.051,3160,4.793,3651,5.344,4696,5.344,4697,6.182,4698,6.182,4699,6.182,4700,6.182,4701,6.182,4702,7.083,4703,5.344,4704,6.182]],["title/coverage.html",[4705,4.564]],["body/coverage.html",[0,1.142,1,1.275,9,0.187,10,3.451,13,1.39,26,0.332,27,0.017,39,0.016,74,2.482,117,2.287,250,1.172,252,1.39,254,1.39,257,1.331,259,1.275,262,1.39,264,1.39,266,1.518,268,1.39,270,1.39,272,1.331,274,1.39,275,1.39,277,1.39,279,1.39,281,1.39,283,1.331,287,0.011,288,0.011,289,3.451,329,2.204,375,0.911,497,3.094,499,3.451,547,3.451,561,1.275,652,2.155,653,2.616,654,2.439,655,1.834,656,2.616,657,1.834,667,2.439,669,2.616,695,3.531,731,4.178,783,1.389,803,2.828,835,2.616,836,5.064,837,2.858,838,4.606,870,3.094,872,3.094,891,2.828,1060,1.96,1135,3.451,1136,4.178,1219,2.798,1414,2.155,1415,3.909,1448,1.834,1466,2.287,1507,2.828,1508,3.451,1518,2.828,1519,2.828,1748,2.287,1866,4.178,1867,4.178,1976,2.439,1979,2.828,2190,3.451,2213,2.616,2214,3.451,2215,3.451,2289,2.287,2292,1.834,2353,4.628,2362,3.094,2364,2.037,2394,3.094,2502,2.828,2923,2.828,3077,2.828,3079,3.818,3104,2.287,3109,3.451,3119,2.616,3134,3.094,3135,3.451,3136,3.451,3315,3.451,3377,3.094,3507,3.451,3516,2.828,3532,4.178,3558,3.451,3579,3.451,3630,3.451,3631,3.451,3645,4.178,3656,6.656,3762,3.094,3777,4.178,3849,3.451,3858,3.451,3872,3.818,3926,2.616,4107,3.094,4234,3.451,4242,3.094,4243,3.451,4244,3.451,4247,4.178,4334,2.828,4367,3.451,4368,3.451,4369,3.451,4387,3.094,4389,3.451,4398,3.451,4400,3.094,4409,4.28,4683,3.094,4684,3.094,4685,3.094,4686,3.451,4705,3.451,4706,3.992,4707,3.992,4708,5.389,4709,6.101,4710,3.992,4711,7.308,4712,7.868,4713,3.992,4714,6.822,4715,5.274,4716,3.992,4717,7.186,4718,5.091,4719,3.992,4720,3.451,4721,3.451,4722,3.451,4723,3.451,4724,3.451,4725,3.451,4726,6.101,4727,4.178,4728,7.03,4729,3.094,4730,3.451,4731,3.992,4732,3.992,4733,5.389,4734,3.992,4735,3.992,4736,5.389,4737,3.992,4738,3.992,4739,3.992,4740,3.992,4741,3.992,4742,3.451,4743,3.992,4744,3.992,4745,3.992,4746,3.992,4747,3.451,4748,3.451,4749,3.992,4750,3.451]],["title/classes/csvImport.html",[39,0.008,3926,2.538]],["body/classes/csvImport.html",[3,0.199,4,0.182,9,0.267,20,0.236,21,0.756,23,0.686,24,0.858,26,0.578,27,0.017,28,0.737,29,0.83,30,0.565,31,0.586,32,1.539,36,0.375,38,0.384,39,0.007,41,1.644,66,2.57,74,1.797,125,1.671,138,1.539,159,1.702,170,2.727,172,1.966,183,1.899,222,2.149,248,0.586,260,1.89,287,0.01,288,0.01,296,0.83,305,3.429,307,1.041,308,0.994,316,0.906,317,1.298,329,0.95,339,1.28,348,1.702,350,1.279,356,1.795,375,1.585,387,2.064,389,1.899,393,2.305,408,2.273,413,1.077,421,0.706,425,2.666,456,2.016,498,1.173,507,3.041,508,1.617,543,4.386,546,2.83,585,1.899,586,2.126,588,1.795,620,3.271,655,2.624,657,2.624,678,2.149,679,1.4,768,1.797,783,0.647,797,2.149,873,2.016,884,0.539,903,1.824,922,1.28,924,1.467,964,0.737,976,3.741,978,1.795,1063,2.521,1103,2.305,1120,4.27,1141,2.149,1145,3.041,1146,2.016,1188,1.899,1193,2.016,1194,2.149,1196,1.899,1211,2.497,1221,2.727,1401,2.149,1421,1.702,1431,3.237,1445,1.617,1673,2.016,1676,3.154,1870,2.492,1871,2.492,1872,3.741,1873,3.741,1874,2.727,1882,4.045,1913,2.305,1943,3.237,1944,2.727,1946,4.621,1948,2.492,1961,3.237,1988,2.305,1991,3.237,1992,2.305,1993,3.237,1994,2.305,2002,2.727,2008,2.727,2091,2.727,2092,2.727,2093,2.727,2094,2.305,2095,2.492,2211,4.27,2259,2.727,2268,2.305,2273,2.913,2523,3.041,2589,2.727,2840,2.492,2841,3.041,3082,1.617,3309,2.492,3320,3.041,3445,2.492,3575,3.041,3926,3.237,3937,4.045,3940,2.492,3988,2.492,3997,2.492,4030,2.727,4031,2.727,4045,4.799,4047,2.727,4082,2.727,4285,2.727,4366,4.386,4727,2.727,4729,2.727,4750,3.041,4751,4.94,4752,7.089,4753,4.94,4754,4.94,4755,4.94,4756,3.518,4757,3.518,4758,4.94,4759,3.518,4760,3.518,4761,3.518,4762,3.518,4763,4.94,4764,3.518,4765,4.94,4766,3.518,4767,3.518,4768,4.27,4769,4.27,4770,3.041,4771,4.27,4772,3.041,4773,4.27,4774,4.27,4775,4.27,4776,4.27,4777,4.27,4778,3.041,4779,3.518,4780,3.518,4781,3.518,4782,3.518,4783,3.518,4784,3.518,4785,3.518,4786,3.518,4787,3.518,4788,4.94,4789,3.518,4790,3.518,4791,3.518,4792,3.518,4793,3.518,4794,3.518,4795,3.518,4796,3.518,4797,3.518,4798,3.518,4799,3.518,4800,4.94,4801,3.518,4802,3.518,4803,3.518,4804,3.518,4805,3.518,4806,3.518,4807,3.518,4808,3.518,4809,3.518,4810,3.518,4811,3.518,4812,3.518,4813,4.94,4814,3.518,4815,3.518,4816,3.518,4817,3.518,4818,3.518,4819,3.518,4820,3.041,4821,5.709,4822,3.518,4823,3.518,4824,3.518,4825,3.518,4826,3.518,4827,3.518,4828,3.518,4829,4.94,4830,5.709,4831,3.518,4832,3.518,4833,7.765,4834,4.94,4835,3.518,4836,4.94,4837,3.518,4838,4.94,4839,4.94,4840,4.94,4841,4.94,4842,4.94,4843,3.518,4844,4.94,4845,6.191,4846,4.94,4847,6.191,4848,4.94,4849,4.94,4850,3.518,4851,3.518,4852,3.518,4853,3.518,4854,3.518,4855,3.518,4856,3.518,4857,3.518,4858,3.518,4859,3.518,4860,3.518,4861,3.518,4862,3.518,4863,3.518,4864,3.518,4865,3.518,4866,3.518,4867,3.518,4868,3.518]],["title/dependencies.html",[643,2.668,4869,2.798]],["body/dependencies.html",[27,0.017,36,0.565,86,2.971,287,0.013,288,0.013,339,1.927,343,2.563,347,4.107,387,2.156,489,2.86,503,2.015,504,2.317,505,2.435,528,1.927,559,4.107,560,4.107,593,3.95,643,3.036,676,3.237,678,3.95,679,2.777,690,5.012,698,4.107,699,4.107,703,2.86,716,3.704,717,4.107,718,4.58,722,4.107,827,4.58,1197,3.766,1606,3.036,2367,4.58,2371,4.58,2376,5.409,2377,5.147,2380,4.58,3328,4.58,3571,4.58,3590,4.58,3937,4.58,4467,3.471,4870,6.465,4871,7.919,4872,5.298,4873,5.298,4874,5.298,4875,5.298,4876,5.298,4877,5.298,4878,5.298,4879,5.298,4880,5.298,4881,5.298,4882,5.298,4883,5.298,4884,6.977,4885,5.298,4886,5.298,4887,5.298,4888,6.465,4889,5.298,4890,5.298,4891,5.298,4892,5.298,4893,5.298,4894,5.298,4895,5.298,4896,5.298,4897,5.298,4898,5.298,4899,5.298,4900,5.298,4901,5.298,4902,5.298,4903,5.298,4904,5.298,4905,5.298,4906,5.298,4907,5.298,4908,5.298,4909,5.298,4910,5.298,4911,5.298,4912,5.298]],["title/miscellaneous/enumerations.html",[4913,1.747,4914,4.025]],["body/miscellaneous/enumerations.html",[20,0.404,27,0.016,30,1.217,287,0.014,288,0.014,664,5.415,1090,3.687,1096,3.687,1415,3.457,1420,4.949,1421,2.919,1422,3.954,1423,3.457,1424,3.954,1425,3.687,1426,3.457,1518,4.275,1519,4.949,1607,3.687,1608,5.216,1609,5.216,1610,5.216,2292,2.773,3079,4.275,3085,5.415,3086,4.678,4913,3.257,4914,5.216,4915,4.678,4916,5.216,4917,6.034]],["title/miscellaneous/functions.html",[4495,2.845,4913,1.747]],["body/miscellaneous/functions.html",[20,0.394,26,0.607,27,0.016,28,0.82,29,0.989,30,0.945,248,0.691,287,0.014,288,0.014,307,1.226,308,1.171,319,2.504,326,1.323,838,4.511,1006,1.88,1060,2.504,1415,3.373,1467,3.857,1472,2.504,1913,3.857,2362,5.337,3645,4.563,3762,5.657,3777,4.563,3819,5.088,3820,5.088,4400,5.337,4405,5.088,4495,3.596,4718,4.17,4720,6.308,4742,5.952,4913,3.177,4915,5.337,4918,5.886,4919,4.563,4920,5.886,4921,5.886]],["title/index.html",[20,0.217,43,1.855,2566,2.294]],["body/index.html",[4,0.304,15,2.143,27,0.016,40,1.59,49,2.993,50,2.79,51,5.092,52,5.092,53,4.173,54,5.092,55,3.736,56,3.327,57,5.092,58,5.092,59,4.566,60,5.092,61,5.092,62,3.946,63,5.636,64,6.163,65,4.173,66,2.27,67,5.092,68,5.092,69,5.092,70,5.092,71,3.948,72,5.092,73,5.092,74,1.662,75,3.948,76,1.905,77,3.541,78,2.577,79,3.541,80,2.993,81,3.948,82,3.948,83,5.339,84,3.236,85,1.737,86,2.707,87,2.707,88,3.948,89,3.236,90,5.054,91,2.465,92,3.86,93,3.541,94,5.092,95,3.236,96,3.948,97,2.617,98,2.577,99,2.465,100,2.79,101,3.236,102,3.236,103,5.636,105,3.541,106,2.993,107,3.541,108,3.236,114,3.541,118,3.86,120,4.173,125,1.59,172,2.345,287,0.012,288,0.012,326,0.878,366,2.099,411,2.465,424,3.541,435,3.541,436,3.541,437,2.465,453,2.099,515,1.737,561,1.459,574,1.905,589,2.209,590,3.948,593,2.79,601,4.566,602,5.092,609,6.163,626,2.996,639,3.541,679,2.595,768,1.662,837,1.998,843,2.465,844,2.099,920,3.375,1004,2.209,1018,3.94,1034,2.465,1089,2.617,1091,3.236,1113,3.236,1196,2.465,1198,1.998,1206,4.671,1230,3.236,1291,2.993,1461,2.331,1613,2.617,1620,3.541,1640,3.236,1648,2.331,1665,3.948,1859,3.948,2066,3.179,2068,3.541,2090,4.208,2201,3.948,2243,3.541,2259,3.541,2269,3.948,2285,3.236,2292,2.707,2364,2.331,2397,2.993,2492,3.236,2532,3.236,2560,3.948,2565,3.006,2611,2.209,2743,5.092,3040,3.948,3210,5.954,3583,2.79,3587,3.948,3865,3.948,3935,3.541,4181,5.092,4220,5.092,4340,3.541,4382,3.948,4485,2.993,4613,2.993,4632,2.993,4820,3.948,4869,3.948,4922,4.567,4923,4.567,4924,4.567,4925,4.567,4926,4.567,4927,5.89,4928,4.567,4929,4.567,4930,4.567,4931,4.567,4932,4.567,4933,6.52,4934,4.567,4935,4.567,4936,4.567,4937,4.567,4938,4.567,4939,4.567,4940,4.567,4941,4.567,4942,4.567,4943,4.567,4944,4.567,4945,4.567,4946,4.567,4947,4.567,4948,4.567,4949,4.567,4950,4.567,4951,4.567,4952,4.567,4953,4.567,4954,5.89,4955,4.567,4956,4.567,4957,4.567,4958,4.567,4959,4.567,4960,4.567,4961,4.567,4962,4.567,4963,4.567,4964,4.567,4965,4.567,4966,4.567,4967,4.567,4968,4.567,4969,4.567,4970,4.567,4971,4.567,4972,4.567,4973,5.89,4974,5.89,4975,4.567,4976,4.567,4977,4.567,4978,5.89,4979,4.567,4980,4.567,4981,4.567,4982,5.89,4983,4.567,4984,6.52,4985,5.89]],["title/license.html",[43,1.855,108,2.294,2566,2.294]],["body/license.html",[27,0.014,77,4.398,90,4.398,92,3.718,107,4.398,108,4.02,109,5.824,110,4.905,111,4.905,112,4.905,113,4.905,114,5.223,115,6.818,116,4.905,117,3.251,118,3.718,119,4.905,120,5.092,121,4.905,122,4.116,123,4.398,124,4.905,125,1.819,126,4.905,127,4.905,128,4.02,129,4.905,130,4.905,131,3.718,132,4.905,133,5.223,134,4.905,135,4.905,136,4.905,137,4.398,138,2.482,139,4.905,140,3.466,141,6.212,142,5.824,143,5.824,144,4.905,145,4.905,146,4.905,147,4.398,148,4.905,149,4.398,150,4.905,151,4.905,152,4.905,153,4.905,154,4.905,155,4.905,156,4.905,157,4.905,158,4.905,159,2.744,160,4.905,161,4.905,162,4.905,163,4.905,164,4.905,165,4.905,166,3.063,167,4.398,168,4.905,169,4.905,170,4.398,171,4.905,172,2.259,173,4.905,174,4.905,287,0.014,288,0.014,3082,2.607,4986,5.674]],["title/modules.html",[642,2.694]],["body/modules.html",[27,0.014,287,0.014,288,0.014,574,3.099,593,4.315,641,4.359,642,3.139,649,4.031,650,3.759,651,4.031,2377,5.005,3118,4.031,4987,7.063,4988,7.752,4989,7.43]],["title/pipes/myUnusedPipe.html",[1976,2.366,1979,2.744]],["body/pipes/myUnusedPipe.html",[0,0.654,3,0.174,4,0.159,9,0.143,11,1.222,13,2.025,14,2.106,15,1.117,16,1.28,18,1.28,20,0.3,21,0.47,23,0.427,24,0.365,26,0.255,27,0.017,28,0.794,29,0.753,30,0.493,31,0.551,32,1.343,33,1.16,36,0.327,37,1.657,38,0.411,39,0.009,40,1.56,41,1.592,47,1.783,65,2.175,66,2.528,76,1.28,85,1.704,87,1.411,100,3.78,125,1.209,131,2.011,138,1.343,159,2.167,183,1.657,222,1.875,229,1.485,245,1.602,248,0.551,259,0.981,260,1.88,287,0.009,288,0.009,296,0.516,305,2.559,307,0.516,308,0.493,315,1.875,316,0.427,317,0.643,326,0.861,329,1.57,339,1.117,348,1.485,350,1.805,365,1.28,366,1.411,374,0.829,375,1.208,387,1.764,388,1.343,396,4.102,407,4.844,408,2.919,411,3.14,421,1.297,422,1.63,437,1.657,443,2.567,454,2.011,503,1.168,515,1.704,538,1.657,577,1.875,581,1.343,586,1.372,599,2.38,629,2.167,652,2.856,655,2.432,657,2.432,665,2.567,666,3.812,671,3.467,672,2.936,676,1.875,679,1.222,695,2.936,765,2.011,773,2.654,777,1.875,787,2.567,792,2.7,821,2.418,884,1.14,899,2.011,964,1.297,972,1.168,1004,1.485,1006,1.431,1034,1.657,1048,1.069,1089,3.032,1146,3.701,1193,2.567,1194,3.233,1196,1.657,1207,3.174,1214,2.58,1236,2.38,1268,2.567,1270,2.175,1296,2.286,1307,1.657,1394,1.875,1398,1.657,1401,3.554,1435,2.011,1437,2.418,1445,1.411,1454,1.704,1472,1.63,1479,1.485,1481,1.875,1523,2.175,1525,2.011,1613,2.567,1624,2.38,1627,2.38,1630,2.175,1772,2.175,1857,1.657,1866,3.473,1867,2.38,1868,2.654,1869,2.654,1870,2.175,1871,2.175,1872,2.011,1873,2.011,1874,2.38,1875,1.875,1876,2.654,1877,2.654,1878,2.654,1879,2.654,1880,2.654,1881,2.654,1882,3.174,1886,2.654,1892,2.654,1893,3.873,1894,2.654,1906,2.654,1907,2.175,1908,2.654,1911,2.654,1913,2.936,1922,6.028,1923,4.574,1924,2.011,1925,2.654,1926,3.873,1927,2.737,1928,2.654,1929,2.654,1930,3.873,1931,2.654,1932,3.873,1933,2.654,1934,2.654,1935,2.654,1936,2.654,1937,2.38,1938,2.654,1939,2.654,1940,2.654,1941,2.654,1943,3.467,1944,3.473,1945,2.654,1946,2.175,1947,2.654,1948,2.175,1949,2.654,1950,2.654,1956,2.654,1957,2.654,1958,2.38,1959,2.654,1960,2.654,1961,2.936,1962,2.654,1963,2.654,1964,2.654,1976,3.233,1977,3.873,1978,2.175,1979,4.122,1980,3.873,1981,2.654,1982,2.654,1983,2.654,1984,2.654,1985,2.38,1986,2.38,1987,2.654,1988,2.936,1989,2.654,1990,2.175,1991,4.371,1992,2.936,1993,3.467,1994,2.936,1995,2.654,1996,2.654,1997,2.654,1998,2.654,1999,2.654,2000,2.654,2001,2.654,2002,2.38,2003,2.654,2004,2.654,2005,2.654,2006,2.654,2007,2.654,2008,2.38,2009,2.38,2010,2.654,2011,2.175,2012,2.654,2013,2.654,2014,2.654,2015,2.175,2016,2.654,2017,2.654,2018,2.654,2019,2.654,2020,2.654,2021,2.654,2022,2.654,2023,5.029,2024,2.654,2025,2.654,2026,2.654,2027,3.873,2028,3.873,2029,2.38,2030,3.873,2031,3.873,2032,2.737,2033,4.574,2034,1.875,2035,2.38,2036,1.485,2037,2.654,2038,2.654,2039,2.654,2040,2.654,2041,2.654,2042,2.011,2043,2.654,2044,2.654,2045,2.654,2046,2.654,2047,3.473,2048,2.654,2049,3.873,2050,2.175,2051,3.873,2052,4.574,2053,2.38,2054,2.654,2055,3.873,2056,2.38,2057,3.873,2058,3.873,2059,2.654,2060,2.654,2061,2.654,2062,2.654,2063,2.654,2064,2.654,2065,2.654,2066,1.657,2067,2.654,2068,2.38,2069,2.654,2070,2.38,2071,2.38,2072,3.873,2073,4.574,2074,4.102,2075,2.654,2076,2.654,2077,3.873,2078,3.473,2079,2.654,2080,2.654,2081,2.654,2082,3.873,2083,2.654,2084,2.654,2085,2.654,2086,2.654,2087,2.654,2088,2.654,2089,2.654,2090,1.875,2091,2.38,2092,2.38,2093,2.38,2094,2.011,2095,2.175,2096,2.654,2097,2.654,2098,2.654,2099,2.654,2100,3.873,2101,2.654,2102,2.654,2103,2.654,2104,2.654,2105,2.654,2106,4.574,2107,2.654,2108,2.654,2109,2.654,2110,1.875,2111,2.175,2112,2.654,2113,2.654,2114,2.654,2115,2.175,2116,2.654,2117,2.654,2118,2.654,2119,2.654,2120,2.654,2121,2.654,2122,2.654,2123,2.654,2124,2.654,2125,2.654,2126,2.654,3397,2.654,4990,3.07,4991,3.07]],["title/overview.html",[2532,3.741]],["body/overview.html",[1,2.416,2,1.583,13,2.357,27,0.017,172,1.972,250,1.988,252,2.633,254,2.357,257,2.258,259,2.163,262,2.357,264,2.357,268,2.357,270,2.357,272,2.258,274,2.357,275,2.357,277,2.357,279,2.357,281,2.357,283,2.258,287,0.013,288,0.013,448,2.838,498,1.652,641,5.801,642,2.528,643,3.554,644,4.282,645,4.282,646,4.282,647,4.282,648,4.282,649,4.437,650,4.796,651,4.437,652,3.655,653,4.437,654,4.137,655,3.112,656,4.437,657,3.112,658,4.394,659,3.027,781,2.066,830,4.282,964,1.419,982,2.167,997,3.027,1771,3.84,1776,4.282,1976,3.027,2532,3.51,3078,2.838,3113,4.282,3114,4.282,3115,4.282,3116,4.282,3117,4.282,3118,4.437,3119,4.437,4387,3.84]],["title/routes.html",[802,3.741]],["body/routes.html",[27,0.015,287,0.015,288,0.015,802,4.479]],["title/miscellaneous/typealiases.html",[4913,1.747,4992,4.656]],["body/miscellaneous/typealiases.html",[20,0.373,26,0.645,27,0.017,187,3.639,191,2.839,214,4.357,287,0.014,288,0.014,404,3.12,665,3.819,666,4.368,668,4.723,1018,4.078,1103,4.95,1406,4.32,1415,3.193,1421,2.696,1423,3.193,1425,3.405,1426,3.193,1427,4.723,1518,3.949,1519,4.723,2251,5.025,2353,3.949,2361,5.763,2396,5.763,2397,4.673,2398,5.763,2399,4.818,3377,4.32,3387,5.763,3872,3.949,3946,5.729,4107,4.32,4130,5.763,4718,3.949,4730,4.818,4913,3.008,4915,4.32,4916,4.818,4919,4.32,4993,5.573,4994,5.573,4995,5.573,4996,7.132,4997,5.573,4998,5.763]],["title/miscellaneous/variables.html",[4913,1.747,4999,4.025]],["body/miscellaneous/variables.html",[20,0.324,26,0.648,27,0.017,28,0.797,29,1.315,30,1.256,222,2.954,260,2.003,287,0.013,288,0.013,326,1.174,350,1.581,408,1.925,453,2.222,731,5.453,836,3.748,837,2.929,838,4.388,870,4.735,871,3.426,872,4.735,873,3.5,964,1.28,1006,1.545,1048,2.331,1401,2.954,1431,3.168,1454,1.839,1472,1.759,1748,3.5,1771,3.748,1772,4.328,1870,3.426,1871,3.426,1946,5.14,1948,3.426,2260,2.77,2289,3.5,2292,2.807,2353,3.426,2390,4.18,2391,3.168,2394,4.735,2418,4.18,3361,4.18,3404,3.748,4366,3.426,4703,4.18,4715,4.18,4718,3.426,4721,5.28,4722,5.788,4723,6.081,4724,5.28,4725,6.081,4727,3.748,4729,4.735,4747,4.18,4748,4.18,4768,4.18,4769,4.18,4770,4.18,4771,4.18,4772,4.18,4773,4.18,4774,4.18,4775,4.18,4776,4.18,4777,4.18,4778,4.18,4913,2.61,4919,5.623,4998,5.28,4999,4.18,5000,4.835,5001,4.835,5002,6.108,5003,4.835,5004,6.108,5005,6.108,5006,6.108,5007,6.108,5008,7.034,5009,4.835,5010,4.835,5011,4.835,5012,4.835,5013,4.835,5014,6.696,5015,4.835,5016,6.108,5017,6.108,5018,6.108]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"components/LazyComponent.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"modules/MaterialModule.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"classes/StreetAddress.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"changelog.html":{},"coverage.html":{},"classes/csvImport.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"pipes/myUnusedPipe.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":329,"title":{},"body":{"components/AlertsComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"injectables/MarkerService.html":{},"components/NavbarComponent.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"coverage.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["0,}[^0",{"_index":4525,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["0.0",{"_index":3843,"title":{},"body":{"classes/Point-1.html":{}}}],["0.0.10",{"_index":4937,"title":{},"body":{"index.html":{}}}],["0.0025",{"_index":1594,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["0.10.1",{"_index":4879,"title":{},"body":{"dependencies.html":{}}}],["0.11.37",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["0.11.38",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":4912,"title":{},"body":{"dependencies.html":{}}}],["0.124499",{"_index":4589,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["0.125499",{"_index":4587,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["0.15em",{"_index":3602,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.18.2",{"_index":4909,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":3629,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.2",{"_index":1357,"title":{},"body":{"components/ColorEditor.html":{}}}],["0.203586&clip",{"_index":2968,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["0.3",{"_index":1125,"title":{},"body":{"classes/CodeArea.html":{}}}],["0.343",{"_index":4675,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["0.34745",{"_index":4672,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["0.5",{"_index":217,"title":{},"body":{"components/AboutComponent.html":{},"classes/CodeArea.html":{}}}],["0.5em",{"_index":3601,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.8.13",{"_index":4910,"title":{},"body":{"dependencies.html":{}}}],["0.8em",{"_index":2180,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["0/1",{"_index":4712,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":4728,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":4708,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":4736,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":4746,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":4737,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4711,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":4732,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":4745,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":4735,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4717,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":4743,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":4713,"title":{},"body":{"coverage.html":{}}}],["0/36",{"_index":4716,"title":{},"body":{"coverage.html":{}}}],["0/39",{"_index":4719,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4709,"title":{},"body":{"coverage.html":{}}}],["0/46",{"_index":4731,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4714,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4726,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4733,"title":{},"body":{"coverage.html":{}}}],["0/76",{"_index":4710,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4744,"title":{},"body":{"coverage.html":{}}}],["000125",{"_index":961,"title":{},"body":{"classes/CodeArea.html":{}}}],["0025",{"_index":960,"title":{},"body":{"classes/CodeArea.html":{}}}],["02",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["030",{"_index":3365,"title":{},"body":{"components/LogComponent.html":{}}}],["05",{"_index":959,"title":{},"body":{"classes/CodeArea.html":{}}}],["0em",{"_index":1365,"title":{},"body":{"components/ColorEditor.html":{}}}],["0px",{"_index":1359,"title":{},"body":{"components/ColorEditor.html":{}}}],["1",{"_index":964,"title":{"classes/Point-1.html":{}},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/Mission.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1).join(openlocationcode.padding_character_",{"_index":1046,"title":{},"body":{"classes/CodeArea.html":{}}}],["1.0",{"_index":958,"title":{},"body":{"classes/CodeArea.html":{},"classes/Point-1.html":{}}}],["1.0.24",{"_index":4887,"title":{},"body":{"dependencies.html":{}}}],["1.10.7",{"_index":4898,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":3605,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1.3.0",{"_index":4882,"title":{},"body":{"dependencies.html":{}}}],["1.5.3",{"_index":4903,"title":{},"body":{"dependencies.html":{}}}],["1.5em",{"_index":3356,"title":{},"body":{"components/LogComponent.html":{},"components/NavbarComponent.html":{}}}],["1.7.1",{"_index":4901,"title":{},"body":{"dependencies.html":{}}}],["1.8em",{"_index":3613,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1/2",{"_index":1122,"title":{},"body":{"classes/CodeArea.html":{}}}],["1/4",{"_index":3696,"title":{},"body":{"classes/PlusCode.html":{}}}],["10",{"_index":443,"title":{},"body":{"components/AlertsComponent.html":{},"classes/CodeArea.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"pipes/myUnusedPipe.html":{}}}],["10').pipe",{"_index":3216,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["100",{"_index":222,"title":{},"body":{"components/AboutComponent.html":{},"components/FieldReportsComponent.html":{},"components/LogComponent.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":396,"title":{},"body":{"components/AlertsComponent.html":{},"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["10000",{"_index":1706,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["10506",{"_index":2286,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["10506%20sw%20132nd%20pl,%20vashon,%20wa,%2098070",{"_index":2267,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["10px",{"_index":468,"title":{},"body":{"components/AlertsComponent.html":{},"components/FieldReportsComponent.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{}}}],["11",{"_index":448,"title":{},"body":{"components/AlertsComponent.html":{},"classes/CodeArea.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"changelog.html":{},"overview.html":{}}}],["115",{"_index":608,"title":{},"body":{"components/AppComponent.html":{}}}],["12",{"_index":4703,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["12*60*60*1000",{"_index":2088,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["120px",{"_index":2176,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["122.4600025197085",{"_index":2329,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["122.4613515",{"_index":2325,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["122.462688",{"_index":3727,"title":{},"body":{"classes/PlusCode.html":{},"injectables/SettingsService.html":{}}}],["122.4627",{"_index":2391,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/Point-1.html":{},"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["122.4627004802915,\"north\":47.4520041802915,\"east",{"_index":2328,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["13.0.0",{"_index":4888,"title":{},"body":{"dependencies.html":{}}}],["13.0.2",{"_index":4891,"title":{},"body":{"dependencies.html":{}}}],["13.2.3",{"_index":4871,"title":{},"body":{"dependencies.html":{}}}],["13.2.4",{"_index":4874,"title":{},"body":{"dependencies.html":{}}}],["13/39",{"_index":4741,"title":{},"body":{"coverage.html":{}}}],["130",{"_index":4772,"title":{},"body":{"classes/csvImport.html":{},"miscellaneous/variables.html":{}}}],["132nd",{"_index":2287,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["136",{"_index":480,"title":{},"body":{"components/AlertsComponent.html":{}}}],["13x13",{"_index":941,"title":{},"body":{"classes/CodeArea.html":{}}}],["141",{"_index":1375,"title":{},"body":{"components/ColorEditor.html":{}}}],["14px",{"_index":1411,"title":{},"body":{"components/ColorEditor.html":{}}}],["15",{"_index":493,"title":{},"body":{"components/AlertsComponent.html":{},"classes/CodeArea.html":{},"injectables/FieldReportService.html":{},"injectables/MarkerService.html":{}}}],["150",{"_index":4770,"title":{},"body":{"classes/csvImport.html":{},"miscellaneous/variables.html":{}}}],["150px",{"_index":494,"title":{},"body":{"components/AlertsComponent.html":{}}}],["154",{"_index":1381,"title":{},"body":{"components/ColorEditor.html":{}}}],["156",{"_index":3364,"title":{},"body":{"components/LogComponent.html":{}}}],["15px",{"_index":3551,"title":{},"body":{"components/MoodEditor.html":{}}}],["16",{"_index":1771,"title":{},"body":{"injectables/FieldReportService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["161",{"_index":3362,"title":{},"body":{"components/LogComponent.html":{}}}],["17",{"_index":4221,"title":{},"body":{"injectables/SettingsService.html":{}}}],["18",{"_index":1776,"title":{},"body":{"injectables/FieldReportService.html":{},"overview.html":{}}}],["180",{"_index":873,"title":{},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"classes/Point.html":{},"classes/csvImport.html":{},"miscellaneous/variables.html":{}}}],["18px",{"_index":2775,"title":{},"body":{"components/IconComponent.html":{}}}],["195",{"_index":3599,"title":{},"body":{"components/NavbarComponent.html":{}}}],["196",{"_index":1239,"title":{},"body":{"components/ColorEditor.html":{}}}],["198",{"_index":1374,"title":{},"body":{"components/ColorEditor.html":{}}}],["1em",{"_index":490,"title":{},"body":{"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/LogComponent.html":{},"components/NavbarComponent.html":{}}}],["1px",{"_index":487,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{}}}],["1vw",{"_index":2212,"title":{},"body":{"components/FooterComponent.html":{}}}],["2",{"_index":413,"title":{},"body":{"components/AlertsComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{}}}],["2.11.2",{"_index":4892,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":4908,"title":{},"body":{"dependencies.html":{}}}],["2.3324",{"_index":4677,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["2.3522411",{"_index":4598,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["20",{"_index":3404,"title":{},"body":{"injectables/MarkerService.html":{},"classes/PlusCode.html":{},"miscellaneous/variables.html":{}}}],["20.0",{"_index":957,"title":{},"body":{"classes/CodeArea.html":{}}}],["200",{"_index":1435,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"components/FieldReportsComponent.html":{},"classes/Point.html":{},"pipes/myUnusedPipe.html":{}}}],["2000",{"_index":399,"title":{},"body":{"components/AlertsComponent.html":{},"components/IconComponent.html":{}}}],["200px",{"_index":4291,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["2013",{"_index":3939,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["2019",{"_index":4986,"title":{},"body":{"license.html":{}}}],["2022",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"changelog.html":{},"index.html":{}}}],["204",{"_index":3600,"title":{},"body":{"components/NavbarComponent.html":{}}}],["205px",{"_index":2172,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["208",{"_index":3593,"title":{},"body":{"components/NavbarComponent.html":{}}}],["20px",{"_index":1409,"title":{},"body":{"components/ColorEditor.html":{}}}],["20vw",{"_index":2184,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["21",{"_index":1215,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["221",{"_index":3594,"title":{},"body":{"components/NavbarComponent.html":{}}}],["226",{"_index":479,"title":{},"body":{"components/AlertsComponent.html":{}}}],["228",{"_index":3621,"title":{},"body":{"components/NavbarComponent.html":{}}}],["23456789cfghjmpqrvwx",{"_index":926,"title":{},"body":{"classes/CodeArea.html":{},"classes/PlusCode.html":{}}}],["236",{"_index":1380,"title":{},"body":{"components/ColorEditor.html":{}}}],["238",{"_index":3363,"title":{},"body":{"components/LogComponent.html":{}}}],["239",{"_index":2169,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["24",{"_index":1398,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"pipes/myUnusedPipe.html":{}}}],["243",{"_index":1224,"title":{},"body":{"components/ColorEditor.html":{}}}],["247",{"_index":2168,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["25",{"_index":1772,"title":{},"body":{"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["250",{"_index":2179,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["2500",{"_index":790,"title":{},"body":{"modules/AppModule.html":{}}}],["252",{"_index":216,"title":{},"body":{"components/AboutComponent.html":{},"components/ColorEditor.html":{}}}],["255",{"_index":1226,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{}}}],["25km",{"_index":3697,"title":{},"body":{"classes/PlusCode.html":{}}}],["25px",{"_index":1408,"title":{},"body":{"components/ColorEditor.html":{}}}],["26",{"_index":2498,"title":{},"body":{"components/IconComponent.html":{}}}],["27",{"_index":4738,"title":{},"body":{"coverage.html":{}}}],["27.0.0",{"_index":4896,"title":{},"body":{"dependencies.html":{}}}],["27.0.1",{"_index":4897,"title":{},"body":{"dependencies.html":{}}}],["278",{"_index":4328,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["279",{"_index":4007,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["28",{"_index":5012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["280ms",{"_index":1354,"title":{},"body":{"components/ColorEditor.html":{}}}],["281",{"_index":3996,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["2em",{"_index":3597,"title":{},"body":{"components/NavbarComponent.html":{}}}],["2nd",{"_index":4820,"title":{},"body":{"classes/csvImport.html":{},"index.html":{}}}],["2px",{"_index":2170,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/LogComponent.html":{},"components/NavbarComponent.html":{}}}],["2vw",{"_index":2206,"title":{},"body":{"components/FooterComponent.html":{}}}],["2x.png",{"_index":5015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":972,"title":{},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/Point-1.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"pipes/myUnusedPipe.html":{}}}],["3.14",{"_index":1489,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["3.14159265359",{"_index":2044,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["3.2.3",{"_index":4894,"title":{},"body":{"dependencies.html":{}}}],["3/11",{"_index":4739,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":764,"title":{},"body":{"modules/AppModule.html":{},"components/ColorEditor.html":{}}}],["30px",{"_index":496,"title":{},"body":{"components/AlertsComponent.html":{}}}],["30vw",{"_index":2177,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["33",{"_index":4740,"title":{},"body":{"coverage.html":{}}}],["333",{"_index":3353,"title":{},"body":{"components/LogComponent.html":{}}}],["34",{"_index":3361,"title":{},"body":{"components/LogComponent.html":{},"miscellaneous/variables.html":{}}}],["350px",{"_index":2173,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["35vw",{"_index":2174,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["360",{"_index":1134,"title":{},"body":{"classes/CodeArea.html":{}}}],["360.0",{"_index":1476,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["3600.0",{"_index":3848,"title":{},"body":{"classes/Point-1.html":{}}}],["3600.0))).tofixed(6",{"_index":3831,"title":{},"body":{"classes/Point-1.html":{}}}],["3px",{"_index":1384,"title":{},"body":{"components/ColorEditor.html":{},"components/NavbarComponent.html":{}}}],["3wa",{"_index":4543,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["3word",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["4",{"_index":417,"title":{},"body":{"components/AlertsComponent.html":{},"classes/CodeArea.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"classes/PlusCode.html":{},"classes/Point-1.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["4.0.4",{"_index":4895,"title":{},"body":{"dependencies.html":{}}}],["4.2",{"_index":1740,"title":{},"body":{"injectables/FieldReportService.html":{},"classes/PlusCode.html":{}}}],["400px",{"_index":4290,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["404",{"_index":4693,"title":{},"body":{"components/X404Component.html":{}}}],["404return",{"_index":4695,"title":{},"body":{"components/X404Component.html":{}}}],["41",{"_index":5008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["442c2e",{"_index":462,"title":{},"body":{"components/AlertsComponent.html":{}}}],["45",{"_index":1769,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["47.4471",{"_index":2390,"title":{},"body":{"components/IconComponent.html":{},"miscellaneous/variables.html":{}}}],["47.447187",{"_index":3726,"title":{},"body":{"classes/PlusCode.html":{},"injectables/SettingsService.html":{}}}],["47.4472",{"_index":3716,"title":{},"body":{"classes/PlusCode.html":{},"injectables/SettingsService.html":{}}}],["48.856618",{"_index":4597,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["4caf50",{"_index":2189,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["4f5h",{"_index":228,"title":{},"body":{"components/AboutComponent.html":{}}}],["4g7b",{"_index":4474,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["4px",{"_index":1361,"title":{},"body":{"components/ColorEditor.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{}}}],["5",{"_index":982,"title":{},"body":{"classes/CodeArea.html":{},"injectables/LocalStorageService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"overview.html":{}}}],["50",{"_index":1927,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"pipes/myUnusedPipe.html":{}}}],["5000",{"_index":2548,"title":{},"body":{"components/IconComponent.html":{}}}],["5000})).afterdismissed",{"_index":615,"title":{},"body":{"components/AppComponent.html":{}}}],["50px",{"_index":472,"title":{},"body":{"components/AlertsComponent.html":{},"components/FieldReportsComponent.html":{}}}],["51.421",{"_index":4674,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["51.4243877",{"_index":4671,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["51.507341",{"_index":4588,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["51.508341",{"_index":4586,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["51.521",{"_index":4680,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["52.6",{"_index":4676,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["54.234",{"_index":4678,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["575px",{"_index":3626,"title":{},"body":{"components/NavbarComponent.html":{}}}],["5px",{"_index":1407,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/LogComponent.html":{},"components/NavbarComponent.html":{}}}],["6",{"_index":997,"title":{},"body":{"classes/CodeArea.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"overview.html":{}}}],["6.0.0",{"_index":4884,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":4905,"title":{},"body":{"dependencies.html":{}}}],["6.5.95",{"_index":4890,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2052,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["60).tostring().padstart(2",{"_index":2049,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["60+1000",{"_index":1801,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["60.0",{"_index":3830,"title":{},"body":{"classes/Point-1.html":{}}}],["650",{"_index":208,"title":{},"body":{"components/AboutComponent.html":{}}}],["6px",{"_index":1369,"title":{},"body":{"components/ColorEditor.html":{}}}],["7",{"_index":2436,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["7.0.1",{"_index":4870,"title":{},"body":{"dependencies.html":{}}}],["7.2.1",{"_index":4877,"title":{},"body":{"dependencies.html":{}}}],["7.5.4",{"_index":4906,"title":{},"body":{"dependencies.html":{}}}],["70em",{"_index":492,"title":{},"body":{"components/AlertsComponent.html":{}}}],["718",{"_index":4356,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["75px",{"_index":1410,"title":{},"body":{"components/ColorEditor.html":{}}}],["7b34f18da1c",{"_index":3035,"title":{},"body":{"components/IconComponent.html":{}}}],["8",{"_index":219,"title":{},"body":{"components/AboutComponent.html":{},"classes/CodeArea.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"components/NavbarComponent.html":{},"classes/PlusCode.html":{}}}],["8.343",{"_index":4679,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["80",{"_index":4778,"title":{},"body":{"classes/csvImport.html":{},"miscellaneous/variables.html":{}}}],["80vh",{"_index":3358,"title":{},"body":{"components/LogComponent.html":{}}}],["84vvcgwp+vw",{"_index":4222,"title":{},"body":{"injectables/SettingsService.html":{}}}],["84vvcgwp+vw'is",{"_index":3721,"title":{},"body":{"classes/PlusCode.html":{}}}],["89",{"_index":3620,"title":{},"body":{"components/NavbarComponent.html":{}}}],["8em",{"_index":3614,"title":{},"body":{"components/NavbarComponent.html":{}}}],["8px",{"_index":3367,"title":{},"body":{"components/LogComponent.html":{}}}],["9",{"_index":1770,"title":{},"body":{"injectables/FieldReportService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["9.6.7",{"_index":4900,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":871,"title":{},"body":{"classes/CodeArea.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"miscellaneous/variables.html":{}}}],["96",{"_index":3093,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["9614",{"_index":2351,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["962f10",{"_index":461,"title":{},"body":{"components/AlertsComponent.html":{}}}],["98013",{"_index":4075,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["98070",{"_index":2291,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["992003",{"_index":2496,"title":{},"body":{"components/IconComponent.html":{}}}],["_.ka",{"_index":2339,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["_=[{\\]}\\\\|'?/\";:£§º©®\\s]{1",{"_index":4527,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["_=[{\\]}\\\\|'?/\";:£§º©®\\s]{1,}[.｡。･・︒។։။۔።।][^0",{"_index":4526,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["_age",{"_index":1428,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["_filterrangers(value",{"_index":2552,"title":{},"body":{"components/IconComponent.html":{}}}],["_firstname",{"_index":1429,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["_lastname",{"_index":1430,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["_lat",{"_index":1449,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["_long",{"_index":1450,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["_setmaxdate(hours:number=10",{"_index":3075,"title":{},"body":{"components/IconComponent.html":{}}}],["_setmindate(hours:number=10",{"_index":3073,"title":{},"body":{"components/IconComponent.html":{}}}],["_snackbar",{"_index":309,"title":{},"body":{"components/AlertsComponent.html":{},"components/IconComponent.html":{}}}],["_this",{"_index":1750,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["a.callsign",{"_index":1697,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["a11ymodule",{"_index":3423,"title":{},"body":{"modules/MaterialModule.html":{}}}],["a:hover",{"_index":3618,"title":{},"body":{"components/NavbarComponent.html":{}}}],["aaa",{"_index":4010,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["aaa.targetkey",{"_index":4012,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["ab",{"_index":4046,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["abcdefghijklmnopqrstuvwxyz",{"_index":3398,"title":{},"body":{"injectables/MarkerService.html":{}}}],["about'},{'name",{"_index":249,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["about.component.html",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.component",{"_index":3125,"title":{},"body":{"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{}}}],["aboutbody",{"_index":199,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"coverage.html":{},"overview.html":{}}}],["above",{"_index":140,"title":{},"body":{"components/AboutComponent.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"injectables/SettingsService.html":{},"license.html":{}}}],["absolute",{"_index":1406,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{},"miscellaneous/typealiases.html":{}}}],["abstract",{"_index":3089,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["abstractcontrol",{"_index":1191,"title":{},"body":{"components/ColorEditor.html":{}}}],["abstractcontrol#updatevalueandvalidity",{"_index":1310,"title":{},"body":{"components/ColorEditor.html":{}}}],["abstracted",{"_index":2424,"title":{},"body":{"components/IconComponent.html":{}}}],["access",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/IconComponent.html":{},"index.html":{}}}],["accessors",{"_index":1499,"title":{},"body":{"classes/Coordinate.html":{},"classes/Point.html":{}}}],["accuracy",{"_index":2921,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["acs",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["act",{"_index":541,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["action",{"_index":167,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"license.html":{}}}],["action1",{"_index":311,"title":{},"body":{"components/AlertsComponent.html":{}}}],["action2",{"_index":313,"title":{},"body":{"components/AlertsComponent.html":{}}}],["activate",{"_index":195,"title":{},"body":{"components/AboutComponent.html":{}}}],["active",{"_index":3589,"title":{},"body":{"components/NavbarComponent.html":{}}}],["actual_component",{"_index":286,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["actually",{"_index":1270,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["add",{"_index":1648,"title":{},"body":{"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"index.html":{}}}],["added",{"_index":2673,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["addfieldreport",{"_index":1529,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["addfieldreport(fieldreport",{"_index":3644,"title":{},"body":{"classes/OpPeriod.html":{}}}],["addfieldreport(formdata",{"_index":1552,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["additional",{"_index":2151,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["addmarker",{"_index":2704,"title":{},"body":{"components/IconComponent.html":{}}}],["addnote(title",{"_index":3185,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["addopperiod",{"_index":3509,"title":{},"body":{"classes/Mission.html":{}}}],["addopperiod(opperiod",{"_index":3515,"title":{},"body":{"classes/Mission.html":{}}}],["addparticipant(participant",{"_index":3643,"title":{},"body":{"classes/OpPeriod.html":{}}}],["addr",{"_index":2229,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{}}}],["addr.innerhtml",{"_index":2748,"title":{},"body":{"components/IconComponent.html":{}}}],["addr.value",{"_index":2860,"title":{},"body":{"components/IconComponent.html":{}}}],["addranger",{"_index":3877,"title":{},"body":{"injectables/RangerService.html":{}}}],["addranger(formdata",{"_index":3894,"title":{},"body":{"injectables/RangerService.html":{}}}],["address",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/PopupService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/StreetAddress.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["address.ts",{"_index":4244,"title":{},"body":{"classes/StreetAddress.html":{},"coverage.html":{}}}],["address.ts:1",{"_index":4245,"title":{},"body":{"classes/StreetAddress.html":{}}}],["address:string",{"_index":2336,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["address_components",{"_index":2300,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["addresschanged(addr",{"_index":2777,"title":{},"body":{"components/IconComponent.html":{}}}],["addressctrl",{"_index":2452,"title":{},"body":{"components/IconComponent.html":{}}}],["addressctrlchanged",{"_index":2298,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{}}}],["addressctrlchanged(what",{"_index":2804,"title":{},"body":{"components/IconComponent.html":{}}}],["addressctrlchanged2(newaddr",{"_index":2738,"title":{},"body":{"components/IconComponent.html":{}}}],["addresses",{"_index":4613,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"index.html":{}}}],["addresstype",{"_index":2361,"title":{},"body":{"components/IconComponent.html":{},"miscellaneous/typealiases.html":{}}}],["addrinfo",{"_index":2776,"title":{},"body":{"components/IconComponent.html":{}}}],["addrlabel",{"_index":2830,"title":{},"body":{"components/IconComponent.html":{}}}],["addrlabel.innertext",{"_index":2833,"title":{},"body":{"components/IconComponent.html":{}}}],["addrlabel.markaspristine",{"_index":2834,"title":{},"body":{"components/IconComponent.html":{}}}],["addrtext",{"_index":2859,"title":{},"body":{"components/IconComponent.html":{}}}],["addrtext.includes",{"_index":2862,"title":{},"body":{"components/IconComponent.html":{}}}],["addrtext.length",{"_index":2861,"title":{},"body":{"components/IconComponent.html":{}}}],["addrtext.split",{"_index":2866,"title":{},"body":{"components/IconComponent.html":{}}}],["addteamrow",{"_index":4341,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["adjust",{"_index":1852,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["adresschanged",{"_index":2780,"title":{},"body":{"components/IconComponent.html":{}}}],["advanced",{"_index":2144,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/LocalStorageService.html":{}}}],["affects",{"_index":1288,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["afterguiattached",{"_index":1248,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["afterviewinit",{"_index":1138,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["ag",{"_index":678,"title":{},"body":{"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"classes/csvImport.html":{},"dependencies.html":{}}}],["again",{"_index":2345,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["against",{"_index":4484,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["age",{"_index":1431,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"classes/csvImport.html":{},"miscellaneous/variables.html":{}}}],["age(theage",{"_index":1433,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["aggrid.grid(egriddiv",{"_index":4787,"title":{},"body":{"classes/csvImport.html":{}}}],["aggridmodule",{"_index":677,"title":{},"body":{"modules/AppModule.html":{}}}],["aggridmodule.withcomponents",{"_index":751,"title":{},"body":{"modules/AppModule.html":{}}}],["aginit",{"_index":1149,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{}}}],["aginit(params",{"_index":1163,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{}}}],["agm/core",{"_index":685,"title":{},"body":{"modules/AppModule.html":{}}}],["agm/snazzy",{"_index":740,"title":{},"body":{"modules/AppModule.html":{}}}],["agmcoremodule",{"_index":684,"title":{},"body":{"modules/AppModule.html":{}}}],["agmcoremodule.forroot",{"_index":752,"title":{},"body":{"modules/AppModule.html":{}}}],["agmsnazzyinfowindowmodule",{"_index":739,"title":{},"body":{"modules/AppModule.html":{}}}],["ago",{"_index":2514,"title":{},"body":{"components/IconComponent.html":{}}}],["agselectcelleditor",{"_index":4262,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["aid",{"_index":912,"title":{},"body":{"classes/CodeArea.html":{}}}],["aids",{"_index":4922,"title":{},"body":{"index.html":{}}}],["aizasyddpgrn2ilu2p4ii4h1ww27dx6pvychvs4",{"_index":754,"title":{},"body":{"modules/AppModule.html":{}}}],["ajax(settings).done(function",{"_index":2970,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["alert",{"_index":357,"title":{},"body":{"components/AlertsComponent.html":{},"components/IconComponent.html":{}}}],["alert(\"alert",{"_index":3347,"title":{},"body":{"components/LogComponent.html":{}}}],["alertbanner",{"_index":293,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alertcomponent.banner",{"_index":371,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alertcomponent.nginit",{"_index":373,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alerts",{"_index":290,"title":{},"body":{"components/AlertsComponent.html":{},"components/LogComponent.html":{}}}],["alerts').fadein().delay(2500).fadeout",{"_index":3348,"title":{},"body":{"components/LogComponent.html":{}}}],["alerts'},{'name",{"_index":251,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["alerts.component.html",{"_index":292,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alerts.component.scss",{"_index":291,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alerts/alerts.component",{"_index":686,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["alerts__close",{"_index":466,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alertscomponent",{"_index":250,"title":{"components/AlertsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"coverage.html":{},"overview.html":{}}}],["alertscomponent(this._snackbar",{"_index":2521,"title":{},"body":{"components/IconComponent.html":{}}}],["aliases",{"_index":4993,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1403,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{}}}],["allfieldreportstoserver_unused",{"_index":1530,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["allow",{"_index":1123,"title":{},"body":{"classes/CodeArea.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{}}}],["allowed",{"_index":2974,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["allowmanualpindrops",{"_index":4146,"title":{},"body":{"injectables/SettingsService.html":{}}}],["allows",{"_index":2152,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["along",{"_index":2524,"title":{},"body":{"components/IconComponent.html":{}}}],["already",{"_index":2366,"title":{},"body":{"components/IconComponent.html":{}}}],["alter",{"_index":3233,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["alternative",{"_index":3267,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["alternatives",{"_index":3261,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["although",{"_index":3701,"title":{},"body":{"classes/PlusCode.html":{}}}],["always",{"_index":4384,"title":{},"body":{"injectables/ThreeWordsService.html":{}}}],["amd",{"_index":746,"title":{},"body":{"modules/AppModule.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["amg",{"_index":4345,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["amount",{"_index":4024,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["anchor",{"_index":1853,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["and/or",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"license.html":{},"pipes/myUnusedPipe.html":{}}}],["angles",{"_index":1492,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["angular",{"_index":679,"title":{},"body":{"modules/AppModule.html":{},"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"injectables/ShapeService.html":{},"injectables/ThreeWordsService.html":{},"classes/csvImport.html":{},"dependencies.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["angular/animations",{"_index":3328,"title":{},"body":{"components/LogComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":4872,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":3424,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/accordion",{"_index":3426,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/clipboard",{"_index":3434,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/drag",{"_index":3436,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/overlay",{"_index":3502,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/portal",{"_index":3504,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/scrolling",{"_index":3506,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/stepper",{"_index":3428,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/table",{"_index":3430,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/tree",{"_index":3432,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cli",{"_index":4873,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":339,"title":{},"body":{"components/AlertsComponent.html":{},"modules/AppModule.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"modules/LazyModule.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{},"dependencies.html":{},"pipes/myUnusedPipe.html":{}}}],["angular/common/http",{"_index":705,"title":{},"body":{"modules/AppModule.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/MarkerService.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["angular/compiler",{"_index":4875,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ColorEditor.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"components/LazyComponent.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"modules/MaterialModule.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"classes/csvImport.html":{},"dependencies.html":{},"pipes/myUnusedPipe.html":{}}}],["angular/fire",{"_index":4876,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":676,"title":{},"body":{"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"dependencies.html":{},"pipes/myUnusedPipe.html":{}}}],["angular/google",{"_index":703,"title":{},"body":{"modules/AppModule.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4878,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":3439,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/badge",{"_index":3441,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/banner",{"_index":3442,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/bottom",{"_index":3444,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":3447,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":3451,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":3453,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":3455,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/core",{"_index":1190,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/datepicker",{"_index":2357,"title":{},"body":{"components/IconComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":3457,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/divider",{"_index":3459,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":3461,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":345,"title":{},"body":{"components/AlertsComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":3463,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":2388,"title":{},"body":{"components/IconComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":2359,"title":{},"body":{"components/IconComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":3466,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":3468,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":3471,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":3473,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":3477,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":3479,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":3481,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slide",{"_index":3485,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slider",{"_index":3483,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":340,"title":{},"body":{"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IconComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/sort",{"_index":3488,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/stepper",{"_index":3490,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":3492,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tabs",{"_index":3494,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":3496,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":3498,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tree",{"_index":3500,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":690,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":343,"title":{},"body":{"components/AlertsComponent.html":{},"modules/AppRoutingModule.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"guards/UnsavedChangesGuard.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"dependencies.html":{}}}],["angular/service",{"_index":559,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angularcomponentorservice",{"_index":497,"title":{"classes/AngularComponentOrService.html":{}},"body":{"classes/AngularComponentOrService.html":{},"coverage.html":{}}}],["animation",{"_index":2420,"title":{},"body":{"components/IconComponent.html":{}}}],["animations",{"_index":2645,"title":{},"body":{"components/IconComponent.html":{}}}],["another",{"_index":2129,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["answers",{"_index":4457,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["any/*convertto3waresponse",{"_index":4541,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["aoa",{"_index":3946,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"miscellaneous/typealiases.html":{}}}],["aor",{"_index":4034,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["api",{"_index":237,"title":{},"body":{"components/AboutComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/PostService.html":{},"injectables/SettingsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["api_key",{"_index":755,"title":{},"body":{"modules/AppModule.html":{}}}],["apiclientconfiguration",{"_index":4535,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["apikey",{"_index":753,"title":{},"body":{"modules/AppModule.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["apiversion",{"_index":4424,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["app",{"_index":626,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/LayerType.html":{},"modules/LazyModule.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"index.html":{}}}],["app.component",{"_index":687,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":550,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":549,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module.ts",{"_index":734,"title":{},"body":{"modules/AppModule.html":{}}}],["app_",{"_index":526,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["appcomponent",{"_index":252,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"coverage.html":{},"overview.html":{}}}],["appcomponent.ngoninit",{"_index":596,"title":{},"body":{"components/AppComponent.html":{}}}],["appear",{"_index":440,"title":{},"body":{"components/AlertsComponent.html":{}}}],["appearance",{"_index":1362,"title":{},"body":{"components/ColorEditor.html":{},"classes/PlusCode.html":{}}}],["application",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"injectables/LocalStorageService.html":{},"injectables/SettingsService.html":{},"injectables/ThreeWordsService.html":{},"index.html":{}}}],["appmodule",{"_index":641,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppopper",{"_index":3043,"title":{},"body":{"components/IconComponent.html":{}}}],["approach",{"_index":1272,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["approaching",{"_index":4091,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["approutingmodule",{"_index":649,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approximately",{"_index":940,"title":{},"body":{"classes/CodeArea.html":{}}}],["apps",{"_index":3296,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["appsettings",{"_index":4133,"title":{},"body":{"injectables/SettingsService.html":{}}}],["aprs",{"_index":1609,"title":{},"body":{"injectables/FieldReportService.html":{},"miscellaneous/enumerations.html":{}}}],["aqua",{"_index":1388,"title":{},"body":{"components/ColorEditor.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["aquamarine",{"_index":3611,"title":{},"body":{"components/NavbarComponent.html":{}}}],["arbitrary",{"_index":1237,"title":{},"body":{"components/ColorEditor.html":{}}}],["architectural",{"_index":4954,"title":{},"body":{"index.html":{}}}],["architecture",{"_index":4980,"title":{},"body":{"index.html":{}}}],["architecural",{"_index":4981,"title":{},"body":{"index.html":{}}}],["area",{"_index":851,"title":{},"body":{"classes/CodeArea.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["areas",{"_index":3682,"title":{},"body":{"classes/PlusCode.html":{}}}],["argument",{"_index":3245,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["argumentoutofrangeerror",{"_index":1192,"title":{},"body":{"components/ColorEditor.html":{}}}],["arguments",{"_index":4327,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["arial",{"_index":3350,"title":{},"body":{"components/LogComponent.html":{}}}],["arising",{"_index":171,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["arithmetic",{"_index":1056,"title":{},"body":{"classes/CodeArea.html":{}}}],["around",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"components/IconComponent.html":{},"index.html":{}}}],["arr",{"_index":4802,"title":{},"body":{"classes/csvImport.html":{}}}],["arr.join",{"_index":4806,"title":{},"body":{"classes/csvImport.html":{}}}],["arr[i",{"_index":4803,"title":{},"body":{"classes/csvImport.html":{}}}],["array",{"_index":1211,"title":{},"body":{"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"classes/Mission.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{}}}],["array(openlocationcode.separator_position_",{"_index":1045,"title":{},"body":{"classes/CodeArea.html":{}}}],["array.push",{"_index":4299,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["arraybuffer",{"_index":4047,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{}}}],["arrayoflatlngs",{"_index":1749,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["arrayoflatlngs.push([llat,llong",{"_index":1813,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["arrays",{"_index":3309,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{}}}],["arrow",{"_index":181,"title":{},"body":{"components/AboutComponent.html":{}}}],["arrowleft",{"_index":1331,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["arrowright",{"_index":1332,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["asap",{"_index":834,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["asking",{"_index":3674,"title":{},"body":{"classes/PlusCode.html":{}}}],["asr",{"_index":4657,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["assets/data/rangers.3feb22.json",{"_index":3913,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["assets/data/secrets.json",{"_index":4135,"title":{},"body":{"injectables/SettingsService.html":{}}}],["assets/data/vashonfirestations.geojson",{"_index":3400,"title":{},"body":{"injectables/MarkerService.html":{}}}],["assets/imgs/marker",{"_index":5014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/olympic",{"_index":4865,"title":{},"body":{"classes/csvImport.html":{}}}],["assets/smileys",{"_index":3576,"title":{},"body":{"components/MoodRenderer.html":{}}}],["assignable",{"_index":4000,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["associated",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["async",{"_index":2964,"title":{},"body":{"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["asynchronous",{"_index":3208,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["asyncpipe",{"_index":2783,"title":{},"body":{"components/IconComponent.html":{}}}],["athlete",{"_index":4768,"title":{},"body":{"classes/csvImport.html":{},"miscellaneous/variables.html":{}}}],["attempt",{"_index":2931,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["attention",{"_index":4081,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["attribute",{"_index":1266,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["attribution",{"_index":3080,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["audi",{"_index":4349,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["authors",{"_index":160,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["auto",{"_index":2397,"title":{},"body":{"components/IconComponent.html":{},"components/LogComponent.html":{},"injectables/SettingsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["autocompletes",{"_index":3284,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["automatically",{"_index":2560,"title":{},"body":{"components/IconComponent.html":{},"index.html":{}}}],["autosuggest",{"_index":2816,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["autosuggest_focus",{"_index":4509,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["autosuggestclient",{"_index":4460,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["autosuggestions",{"_index":4665,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["autosuggestoptions",{"_index":4461,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["autosuggestoptions_unused",{"_index":4413,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["autosuggestresponse",{"_index":4462,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["autosuggests",{"_index":4635,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["available",{"_index":574,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ThreeWordsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"index.html":{},"modules.html":{}}}],["ave",{"_index":4084,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["avoid",{"_index":1273,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{}}}],["away",{"_index":1856,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["axios",{"_index":4432,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["b",{"_index":1141,"title":{},"body":{"components/ColorEditor.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{}}}],["b.callsign",{"_index":1698,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["b2",{"_index":2321,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["b2\",\"short_name\":\"suite",{"_index":2302,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["b2\",\"types\":[\"subpremise",{"_index":2303,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["b:number",{"_index":1235,"title":{},"body":{"components/ColorEditor.html":{}}}],["back",{"_index":2130,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/PlusCode.html":{}}}],["background",{"_index":203,"title":{},"body":{"components/AboutComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{}}}],["backgroundcolor",{"_index":1939,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["bad",{"_index":2034,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"pipes/myUnusedPipe.html":{}}}],["bad%20address",{"_index":2272,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["bailouts",{"_index":749,"title":{},"body":{"modules/AppModule.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["banner",{"_index":297,"title":{},"body":{"components/AlertsComponent.html":{}}}],["banner(msg",{"_index":310,"title":{},"body":{"components/AlertsComponent.html":{}}}],["banner.divider",{"_index":481,"title":{},"body":{"components/AlertsComponent.html":{}}}],["banner.fill",{"_index":477,"title":{},"body":{"components/AlertsComponent.html":{}}}],["banner.layout",{"_index":381,"title":{},"body":{"components/AlertsComponent.html":{}}}],["banner.max",{"_index":483,"title":{},"body":{"components/AlertsComponent.html":{}}}],["banner.open",{"_index":377,"title":{},"body":{"components/AlertsComponent.html":{}}}],["banner.setprimaryactiontext(action1",{"_index":379,"title":{},"body":{"components/AlertsComponent.html":{}}}],["banner.setsecondaryactiontext(action2",{"_index":380,"title":{},"body":{"components/AlertsComponent.html":{}}}],["banner.settext(msg",{"_index":378,"title":{},"body":{"components/AlertsComponent.html":{}}}],["bar",{"_index":341,"title":{},"body":{"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"modules/MaterialModule.html":{}}}],["bar/overview",{"_index":401,"title":{},"body":{"components/AlertsComponent.html":{}}}],["base",{"_index":927,"title":{},"body":{"classes/CodeArea.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["base_url",{"_index":4510,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["based",{"_index":1196,"title":{},"body":{"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"injectables/LocalStorageService.html":{},"components/MoodEditor.html":{},"classes/csvImport.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["basic",{"_index":2450,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["bbbbb",{"_index":1347,"title":{},"body":{"components/ColorEditor.html":{}}}],["beautiful",{"_index":4087,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["before",{"_index":372,"title":{},"body":{"components/AlertsComponent.html":{},"classes/CodeArea.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["beg",{"_index":1561,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["begdate",{"_index":3508,"title":{},"body":{"classes/Mission.html":{},"classes/OpPeriod.html":{}}}],["behavior",{"_index":630,"title":{},"body":{"components/AppComponent.html":{}}}],["behaviorsubject",{"_index":1596,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/LocalStorageService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["being",{"_index":4621,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["below",{"_index":1713,"title":{},"body":{"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{}}}],["bene",{"_index":395,"title":{},"body":{"components/AlertsComponent.html":{}}}],["bergson",{"_index":3155,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["best",{"_index":1094,"title":{},"body":{"classes/CodeArea.html":{},"components/FieldReportsComponent.html":{}}}],["better",{"_index":2042,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"pipes/myUnusedPipe.html":{}}}],["between",{"_index":1110,"title":{},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"injectables/SettingsService.html":{}}}],["bezier(0.4",{"_index":1356,"title":{},"body":{"components/ColorEditor.html":{}}}],["bias",{"_index":4661,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["big",{"_index":2163,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["binary",{"_index":4800,"title":{},"body":{"classes/csvImport.html":{}}}],["bindpopup",{"_index":1833,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["binds",{"_index":4810,"title":{},"body":{"classes/csvImport.html":{}}}],["bit",{"_index":1344,"title":{},"body":{"components/ColorEditor.html":{},"injectables/FieldReportService.html":{}}}],["black",{"_index":211,"title":{},"body":{"components/AboutComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["blanks",{"_index":2684,"title":{},"body":{"components/IconComponent.html":{}}}],["blob",{"_index":3311,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["block",{"_index":202,"title":{},"body":{"components/AboutComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"classes/GoogleGeocode.html":{},"components/MoodEditor.html":{}}}],["blog",{"_index":3129,"title":{},"body":{"modules/LazyRoutingModule.html":{}}}],["blogdetailscomponent",{"_index":3128,"title":{},"body":{"modules/LazyRoutingModule.html":{}}}],["blue",{"_index":4280,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["blueprint",{"_index":2846,"title":{},"body":{"components/IconComponent.html":{}}}],["blur",{"_index":3027,"title":{},"body":{"components/IconComponent.html":{}}}],["bmw",{"_index":4347,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["body",{"_index":3349,"title":{},"body":{"components/LogComponent.html":{}}}],["bold",{"_index":238,"title":{},"body":{"components/AboutComponent.html":{},"components/FieldReportsComponent.html":{},"components/NavbarComponent.html":{}}}],["boolean",{"_index":319,"title":{},"body":{"components/AlertsComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"components/FieldReportsComponent.html":{},"injectables/MarkerService.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"classes/Point.html":{},"injectables/SettingsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":663,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["bootstrap4",{"_index":455,"title":{},"body":{"components/AlertsComponent.html":{}}}],["border",{"_index":486,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{}}}],["both",{"_index":1291,"title":{},"body":{"components/ColorEditor.html":{},"components/NavbarComponent.html":{},"classes/PlusCode.html":{},"injectables/ThreeWordsService.html":{},"index.html":{}}}],["bottom",{"_index":214,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"components/IconComponent.html":{},"components/NavbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["bounced",{"_index":4099,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["bound",{"_index":1520,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["bounding",{"_index":849,"title":{},"body":{"classes/CodeArea.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["boundingbox",{"_index":4576,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["boundingbox.northeast",{"_index":4581,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["boundingbox.northeast.lat",{"_index":4582,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["boundingbox.northeast.lng",{"_index":4583,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["boundingbox.southwest",{"_index":4577,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["boundingbox.southwest.lat",{"_index":4579,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["boundingbox.southwest.lng",{"_index":4580,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["bounds",{"_index":1521,"title":{},"body":{"injectables/FieldReportService.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{}}}],["boundsmargin",{"_index":1522,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["box",{"_index":850,"title":{},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["boxster",{"_index":4357,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["brands",{"_index":4883,"title":{},"body":{"dependencies.html":{}}}],["break",{"_index":909,"title":{},"body":{"classes/CodeArea.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{}}}],["breaking",{"_index":4480,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["brightness(30",{"_index":230,"title":{},"body":{"components/AboutComponent.html":{}}}],["broadening",{"_index":1711,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["broken",{"_index":1393,"title":{},"body":{"components/ColorEditor.html":{}}}],["bronze",{"_index":4776,"title":{},"body":{"classes/csvImport.html":{},"miscellaneous/variables.html":{}}}],["brown",{"_index":1262,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{}}}],["browse",{"_index":4988,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":593,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IconComponent.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":691,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{}}}],["browseranimationsmodule",{"_index":689,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{}}}],["browsermodule",{"_index":692,"title":{},"body":{"modules/AppModule.html":{},"modules/LazyModule.html":{}}}],["browsers",{"_index":639,"title":{},"body":{"components/AppComponent.html":{},"injectables/LocalStorageService.html":{},"index.html":{}}}],["bstr",{"_index":4805,"title":{},"body":{"classes/csvImport.html":{}}}],["bug",{"_index":584,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["build",{"_index":435,"title":{},"body":{"components/AlertsComponent.html":{},"injectables/ThreeWordsService.html":{},"index.html":{}}}],["buildings",{"_index":946,"title":{},"body":{"classes/CodeArea.html":{}}}],["bundle",{"_index":778,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":389,"title":{},"body":{"components/AlertsComponent.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"components/NavbarComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{}}}],["c",{"_index":3082,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{},"license.html":{}}}],["c.geometry.coordinates[0",{"_index":3407,"title":{},"body":{"injectables/MarkerService.html":{}}}],["c.geometry.coordinates[1",{"_index":3409,"title":{},"body":{"injectables/MarkerService.html":{}}}],["c63",{"_index":4346,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["calculates",{"_index":1053,"title":{},"body":{"classes/CodeArea.html":{}}}],["call",{"_index":2639,"title":{},"body":{"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["callback",{"_index":544,"title":{},"body":{"classes/AngularComponentOrService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["callbacks",{"_index":1963,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["called",{"_index":362,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["caller",{"_index":1657,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["callinfo",{"_index":2457,"title":{},"body":{"components/IconComponent.html":{}}}],["callsign",{"_index":1613,"title":{},"body":{"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["callsignchanged",{"_index":2620,"title":{},"body":{"components/IconComponent.html":{}}}],["callsignchanged(callsign",{"_index":2617,"title":{},"body":{"components/IconComponent.html":{}}}],["callsignctrl",{"_index":2451,"title":{},"body":{"components/IconComponent.html":{}}}],["callsignctrlchanged",{"_index":2633,"title":{},"body":{"components/IconComponent.html":{}}}],["can't",{"_index":4097,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{}}}],["can\\'t",{"_index":4694,"title":{},"body":{"components/X404Component.html":{}}}],["canactivate",{"_index":814,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["candeactivate",{"_index":4390,"title":{},"body":{"guards/UnsavedChangesGuard.html":{}}}],["candeactivate(component",{"_index":4391,"title":{},"body":{"guards/UnsavedChangesGuard.html":{}}}],["capabilities",{"_index":4979,"title":{},"body":{"index.html":{}}}],["capturing",{"_index":3664,"title":{},"body":{"classes/PlusCode.html":{}}}],["card",{"_index":1351,"title":{},"body":{"components/ColorEditor.html":{}}}],["carts",{"_index":4028,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["case",{"_index":787,"title":{},"body":{"modules/AppModule.html":{},"classes/CodeArea.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"classes/Point-1.html":{},"pipes/myUnusedPipe.html":{}}}],["catch",{"_index":1479,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"components/FieldReportsComponent.html":{},"classes/GoogleGeocode.html":{},"injectables/LocalStorageService.html":{},"classes/Point.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"pipes/myUnusedPipe.html":{}}}],["catch((e",{"_index":2247,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["catch(function",{"_index":2991,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["catcherror",{"_index":3083,"title":{},"body":{"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/OpPeriod.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["cause",{"_index":747,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocalStorageService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["causes",{"_index":816,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["cayman",{"_index":4358,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["cce",{"_index":4225,"title":{},"body":{"injectables/SettingsService.html":{}}}],["cclick",{"_index":1339,"title":{},"body":{"components/ColorEditor.html":{}}}],["cd",{"_index":4969,"title":{},"body":{"index.html":{}}}],["cdkaccordionmodule",{"_index":3425,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdksteppermodule",{"_index":3427,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktablemodule",{"_index":3429,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktreemodule",{"_index":3431,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cell",{"_index":1089,"title":{},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["cell'},{'name",{"_index":256,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["cellclass",{"_index":1929,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["celldate",{"_index":1728,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["celldate.gettime",{"_index":1733,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["celleditor",{"_index":4261,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["celleditorparams",{"_index":4263,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["cellstyle",{"_index":1935,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["cellvalue",{"_index":1725,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["center",{"_index":848,"title":{},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/MoodEditor.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["centers",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["centrally",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["cert",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"index.html":{}}}],["cgwp+vv",{"_index":3720,"title":{},"body":{"classes/PlusCode.html":{}}}],["cgwp+vx",{"_index":3724,"title":{},"body":{"classes/PlusCode.html":{},"injectables/SettingsService.html":{}}}],["change",{"_index":366,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/NavbarComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["changed",{"_index":1274,"title":{},"body":{"components/ColorEditor.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{}}}],["changelog",{"_index":4696,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1309,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"guards/UnsavedChangesGuard.html":{},"changelog.html":{}}}],["changing",{"_index":2610,"title":{},"body":{"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["character",{"_index":918,"title":{},"body":{"classes/CodeArea.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["characters",{"_index":915,"title":{},"body":{"classes/CodeArea.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["charge",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["check",{"_index":1004,"title":{},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"classes/Point.html":{},"injectables/SettingsService.html":{},"classes/StreetAddress.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["checked",{"_index":1275,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["chg",{"_index":2723,"title":{},"body":{"components/IconComponent.html":{}}}],["child",{"_index":1210,"title":{},"body":{"components/ColorEditor.html":{}}}],["child.html",{"_index":1202,"title":{},"body":{"components/ColorEditor.html":{}}}],["child.ts",{"_index":1217,"title":{},"body":{"components/ColorEditor.html":{}}}],["childitem",{"_index":1160,"title":{},"body":{"components/ColorEditor.html":{}}}],["childitem]=\"parentitem",{"_index":1201,"title":{},"body":{"components/ColorEditor.html":{}}}],["chk3words(twords",{"_index":2963,"title":{},"body":{"components/IconComponent.html":{}}}],["chkaddresses",{"_index":2838,"title":{},"body":{"components/IconComponent.html":{}}}],["chkpcodes",{"_index":3646,"title":{},"body":{"classes/PlusCode.html":{}}}],["chkpcodes(pcode",{"_index":2947,"title":{},"body":{"components/IconComponent.html":{}}}],["chkstreetaddress(addrtext",{"_index":2997,"title":{},"body":{"components/IconComponent.html":{}}}],["choice",{"_index":4977,"title":{},"body":{"index.html":{}}}],["circle",{"_index":1841,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/MarkerService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["circle.addto(map",{"_index":3419,"title":{},"body":{"injectables/MarkerService.html":{}}}],["circle.bindpopup(this.popupservice.makestationpopup(c.properties",{"_index":3418,"title":{},"body":{"injectables/MarkerService.html":{}}}],["circle_size",{"_index":1844,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["circular",{"_index":2842,"title":{},"body":{"components/IconComponent.html":{}}}],["city",{"_index":3676,"title":{},"body":{"classes/PlusCode.html":{}}}],["claim",{"_index":163,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["class",{"_index":39,"title":{"classes/AngularComponentOrService.html":{},"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/GoogleGeocode.html":{},"classes/Map.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"classes/StreetAddress.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"classes/csvImport.html":{}},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"components/LazyComponent.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"modules/MaterialModule.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"classes/StreetAddress.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"components/X404Component.html":{},"coverage.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["classes",{"_index":498,"title":{},"body":{"classes/AngularComponentOrService.html":{},"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"classes/StreetAddress.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"classes/csvImport.html":{},"overview.html":{}}}],["classic",{"_index":542,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["clean",{"_index":3987,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["clear",{"_index":1742,"title":{},"body":{"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"components/NavbarComponent.html":{}}}],["cleared",{"_index":3213,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clearesrimarkers",{"_index":1746,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["cleargoogmarkers",{"_index":1745,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["clearleafletmarkers",{"_index":1744,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["cli",{"_index":4985,"title":{},"body":{"index.html":{}}}],["cli/issues/20819",{"_index":4476,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["click",{"_index":1343,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{}}}],["clicked",{"_index":1962,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["client",{"_index":3278,"title":{},"body":{"injectables/LocalStorageService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["client.run(options",{"_index":4539,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["clientrequest",{"_index":4486,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["clients",{"_index":4492,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["clip",{"_index":4567,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["clip_to_bounding_box",{"_index":4511,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["clip_to_circle",{"_index":4512,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["clip_to_country",{"_index":4513,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["clip_to_polygon",{"_index":4514,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["clipboardmodule",{"_index":3433,"title":{},"body":{"modules/MaterialModule.html":{}}}],["clipping",{"_index":4623,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["clipto",{"_index":4562,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["cliptoboundingbox",{"_index":4563,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["cliptocircle",{"_index":4670,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["cliptocountry",{"_index":4595,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["cliptopolygon",{"_index":4673,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["clock",{"_index":2475,"title":{},"body":{"components/IconComponent.html":{}}}],["close",{"_index":188,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"injectables/LocalStorageService.html":{},"classes/PlusCode.html":{}}}],["closed",{"_index":1313,"title":{},"body":{"components/ColorEditor.html":{}}}],["closepicker",{"_index":3071,"title":{},"body":{"components/IconComponent.html":{}}}],["closer",{"_index":4570,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["closes",{"_index":2848,"title":{},"body":{"components/IconComponent.html":{}}}],["closest",{"_index":1114,"title":{},"body":{"classes/CodeArea.html":{}}}],["closing",{"_index":1847,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["closure",{"_index":2350,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["cluster_appmodule",{"_index":644,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":648,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":647,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":646,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":645,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_lazymodule",{"_index":3113,"title":{},"body":{"modules/LazyModule.html":{},"overview.html":{}}}],["cluster_lazymodule_declarations",{"_index":3117,"title":{},"body":{"modules/LazyModule.html":{},"overview.html":{}}}],["cluster_lazymodule_exports",{"_index":3114,"title":{},"body":{"modules/LazyModule.html":{},"overview.html":{}}}],["cluster_lazymodule_imports",{"_index":3115,"title":{},"body":{"modules/LazyModule.html":{},"overview.html":{}}}],["cluster_lazymodule_providers",{"_index":3116,"title":{},"body":{"modules/LazyModule.html":{},"overview.html":{}}}],["cntrl",{"_index":582,"title":{},"body":{"components/AppComponent.html":{}}}],["code",{"_index":842,"title":{},"body":{"classes/CodeArea.html":{},"injectables/FieldReportService.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/PlusCode.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["code.charat(code.length",{"_index":1020,"title":{},"body":{"classes/CodeArea.html":{}}}],["code.indexof(openlocationcode.padding_character_",{"_index":1013,"title":{},"body":{"classes/CodeArea.html":{}}}],["code.indexof(openlocationcode.separator_",{"_index":1007,"title":{},"body":{"classes/CodeArea.html":{}}}],["code.lastindexof(openlocationcode.separator_",{"_index":1008,"title":{},"body":{"classes/CodeArea.html":{}}}],["code.length",{"_index":1009,"title":{},"body":{"classes/CodeArea.html":{}}}],["code.replace(new",{"_index":1026,"title":{},"body":{"classes/CodeArea.html":{}}}],["code.replace(openlocationcode.separator_",{"_index":1067,"title":{},"body":{"classes/CodeArea.html":{}}}],["code.substring(0",{"_index":1043,"title":{},"body":{"classes/CodeArea.html":{}}}],["code.touppercase",{"_index":1118,"title":{},"body":{"classes/CodeArea.html":{}}}],["code.ts",{"_index":838,"title":{},"body":{"classes/CodeArea.html":{},"classes/PlusCode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["code.ts:28",{"_index":866,"title":{},"body":{"classes/CodeArea.html":{}}}],["code.ts:32",{"_index":864,"title":{},"body":{"classes/CodeArea.html":{}}}],["code.ts:34",{"_index":865,"title":{},"body":{"classes/CodeArea.html":{}}}],["code.ts:39",{"_index":868,"title":{},"body":{"classes/CodeArea.html":{}}}],["code.ts:43",{"_index":869,"title":{},"body":{"classes/CodeArea.html":{}}}],["code.ts:9",{"_index":3647,"title":{},"body":{"classes/PlusCode.html":{}}}],["code.tx",{"_index":3649,"title":{},"body":{"classes/PlusCode.html":{}}}],["code/wiki",{"_index":3654,"title":{},"body":{"classes/PlusCode.html":{}}}],["code_alphabet_",{"_index":925,"title":{},"body":{"classes/CodeArea.html":{}}}],["code_precision_extra",{"_index":906,"title":{},"body":{"classes/CodeArea.html":{}}}],["code_precision_normal",{"_index":905,"title":{},"body":{"classes/CodeArea.html":{}}}],["codearea",{"_index":835,"title":{"classes/CodeArea.html":{}},"body":{"classes/CodeArea.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"coverage.html":{}}}],["codearea.codelength",{"_index":1102,"title":{},"body":{"classes/CodeArea.html":{}}}],["codearea.latitudecenter",{"_index":1097,"title":{},"body":{"classes/CodeArea.html":{}}}],["codearea.latitudelo",{"_index":1042,"title":{},"body":{"classes/CodeArea.html":{}}}],["codearea.longitudecenter",{"_index":1100,"title":{},"body":{"classes/CodeArea.html":{}}}],["codelength",{"_index":854,"title":{},"body":{"classes/CodeArea.html":{}}}],["codelength:number",{"_index":879,"title":{},"body":{"classes/CodeArea.html":{}}}],["codes",{"_index":920,"title":{},"body":{"classes/CodeArea.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"index.html":{}}}],["codeupper",{"_index":1117,"title":{},"body":{"classes/CodeArea.html":{}}}],["collapse",{"_index":3622,"title":{},"body":{"components/NavbarComponent.html":{}}}],["collection",{"_index":4026,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{}}}],["collisions",{"_index":3295,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["color",{"_index":210,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"components/NavbarComponent.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["color(255",{"_index":1223,"title":{},"body":{"components/ColorEditor.html":{}}}],["color(aqua",{"_index":482,"title":{},"body":{"components/AlertsComponent.html":{}}}],["color(rgb(226",{"_index":478,"title":{},"body":{"components/AlertsComponent.html":{}}}],["color(this.r",{"_index":1243,"title":{},"body":{"components/ColorEditor.html":{}}}],["color(yellow",{"_index":476,"title":{},"body":{"components/AlertsComponent.html":{}}}],["color:rgb(187",{"_index":1379,"title":{},"body":{"components/ColorEditor.html":{}}}],["color:rgb(241",{"_index":1373,"title":{},"body":{"components/ColorEditor.html":{}}}],["colorcntldisabled",{"_index":1142,"title":{},"body":{"components/ColorEditor.html":{}}}],["colorctr",{"_index":1143,"title":{},"body":{"components/ColorEditor.html":{}}}],["colorctr.value?.hex",{"_index":1335,"title":{},"body":{"components/ColorEditor.html":{}}}],["colorctr.value?.rgba",{"_index":1337,"title":{},"body":{"components/ColorEditor.html":{}}}],["coloreditor",{"_index":254,"title":{"components/ColorEditor.html":{}},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"coverage.html":{},"overview.html":{}}}],["colorformfield",{"_index":1378,"title":{},"body":{"components/ColorEditor.html":{}}}],["coloricontogglearea",{"_index":1376,"title":{},"body":{"components/ColorEditor.html":{}}}],["colorpalette",{"_index":1144,"title":{},"body":{"components/ColorEditor.html":{}}}],["colorpicker",{"_index":1255,"title":{},"body":{"components/ColorEditor.html":{}}}],["colorpickericon",{"_index":1368,"title":{},"body":{"components/ColorEditor.html":{}}}],["colors",{"_index":4359,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["colortextfield",{"_index":1372,"title":{},"body":{"components/ColorEditor.html":{}}}],["colpv",{"_index":1085,"title":{},"body":{"classes/CodeArea.html":{}}}],["column",{"_index":2111,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/NavbarComponent.html":{},"classes/PlusCode.html":{},"pipes/myUnusedPipe.html":{}}}],["column=${column",{"_index":4827,"title":{},"body":{"classes/csvImport.html":{}}}],["column=a",{"_index":4830,"title":{},"body":{"classes/csvImport.html":{}}}],["column=b",{"_index":4834,"title":{},"body":{"classes/csvImport.html":{}}}],["column=c",{"_index":4836,"title":{},"body":{"classes/csvImport.html":{}}}],["column=d",{"_index":4838,"title":{},"body":{"classes/csvImport.html":{}}}],["column=e",{"_index":4840,"title":{},"body":{"classes/csvImport.html":{}}}],["column=f",{"_index":4842,"title":{},"body":{"classes/csvImport.html":{}}}],["column=g",{"_index":4844,"title":{},"body":{"classes/csvImport.html":{}}}],["column=h",{"_index":4846,"title":{},"body":{"classes/csvImport.html":{}}}],["column=i",{"_index":4848,"title":{},"body":{"classes/csvImport.html":{}}}],["column=j",{"_index":4849,"title":{},"body":{"classes/csvImport.html":{}}}],["columndefs",{"_index":1870,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["columns",{"_index":976,"title":{},"body":{"classes/CodeArea.html":{},"components/FieldReportsComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/csvImport.html":{}}}],["columns:any",{"_index":4816,"title":{},"body":{"classes/csvImport.html":{}}}],["columnseparator",{"_index":1906,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["combined",{"_index":1061,"title":{},"body":{"classes/CodeArea.html":{}}}],["come",{"_index":4179,"title":{},"body":{"injectables/SettingsService.html":{}}}],["comes",{"_index":767,"title":{},"body":{"modules/AppModule.html":{}}}],["comet",{"_index":4101,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["comma",{"_index":2153,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["command",{"_index":4978,"title":{},"body":{"index.html":{}}}],["commit",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["commonjs",{"_index":745,"title":{},"body":{"modules/AppModule.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["commonmodule",{"_index":693,"title":{},"body":{"modules/AppModule.html":{},"modules/LazyModule.html":{}}}],["community",{"_index":3571,"title":{},"body":{"components/MoodRenderer.html":{},"dependencies.html":{}}}],["complete",{"_index":513,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["completed",{"_index":2601,"title":{},"body":{"components/IconComponent.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"injectables/SettingsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"coverage.html":{},"pipes/myUnusedPipe.html":{}}}],["component.callsignctrl.dirty",{"_index":4394,"title":{},"body":{"guards/UnsavedChangesGuard.html":{}}}],["component.html",{"_index":1140,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["component.scss",{"_index":1139,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["component_template",{"_index":246,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["componentrestrictions",{"_index":2254,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"overview.html":{}}}],["components.what3wordsaddress",{"_index":4498,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["components.what3wordsautosuggest",{"_index":4499,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["components.what3wordssymbol",{"_index":4500,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["components/color",{"_index":722,"title":{},"body":{"modules/AppModule.html":{},"components/ColorEditor.html":{},"dependencies.html":{}}}],["components/datetime",{"_index":717,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{},"dependencies.html":{}}}],["components/dist/types/lib/constants",{"_index":4469,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["components/fileinput",{"_index":1612,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["computelatitudeprecision(codelength",{"_index":1132,"title":{},"body":{"classes/CodeArea.html":{}}}],["conditions",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["confidential",{"_index":4102,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["config",{"_index":4410,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["configuration",{"_index":1306,"title":{},"body":{"components/ColorEditor.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["confirm(`reload",{"_index":576,"title":{},"body":{"components/AppComponent.html":{}}}],["confirmation",{"_index":2678,"title":{},"body":{"components/IconComponent.html":{}}}],["confused",{"_index":4093,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["connected",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["connection",{"_index":173,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["consider",{"_index":1230,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"index.html":{}}}],["consistent",{"_index":3702,"title":{},"body":{"classes/PlusCode.html":{}}}],["console",{"_index":3333,"title":{},"body":{"components/LogComponent.html":{}}}],["console.error(`localstorage",{"_index":4201,"title":{},"body":{"injectables/SettingsService.html":{}}}],["console.error(e",{"_index":2271,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["console.log",{"_index":2589,"title":{},"body":{"components/IconComponent.html":{},"components/NavbarComponent.html":{},"classes/csvImport.html":{}}}],["console.log(\"3words",{"_index":4559,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["console.log(\"[autosuggest",{"_index":4667,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["console.log(\"[code",{"_index":4549,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["console.log(\"[convertto3wa",{"_index":4547,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["console.log(\"[converttocoordinates",{"_index":4557,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["console.log(\"[gridsection",{"_index":4590,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["console.log(\"[message",{"_index":4550,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["console.log(\"aboutcomponent",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{}}}],["console.log(\"adding",{"_index":4074,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(\"alerts:nginit",{"_index":354,"title":{},"body":{"components/AlertsComponent.html":{}}}],["console.log(\"chkpcodes",{"_index":2948,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["console.log(\"contructing",{"_index":1619,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/SettingsService.html":{}}}],["console.log(\"could",{"_index":383,"title":{},"body":{"components/AlertsComponent.html":{}}}],["console.log(\"ddd",{"_index":2972,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(\"entrycomponent",{"_index":2568,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(\"field",{"_index":2058,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["console.log(\"formdata",{"_index":2674,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(\"formdata1",{"_index":2675,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(\"generating",{"_index":3421,"title":{},"body":{"injectables/MarkerService.html":{}}}],["console.log(\"get",{"_index":4171,"title":{},"body":{"injectables/SettingsService.html":{}}}],["console.log(\"got",{"_index":2863,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(\"indexeddb",{"_index":3212,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["console.log(\"initialize",{"_index":4212,"title":{},"body":{"injectables/SettingsService.html":{}}}],["console.log(\"initialized",{"_index":4174,"title":{},"body":{"injectables/SettingsService.html":{}}}],["console.log(\"invalid",{"_index":2941,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(\"new",{"_index":2934,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(\"no",{"_index":2078,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["console.log(\"onmapinitialized",{"_index":2694,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(\"ranger",{"_index":423,"title":{},"body":{"components/AlertsComponent.html":{}}}],["console.log(\"rangers",{"_index":3948,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(\"rangertrak",{"_index":3346,"title":{},"body":{"components/LogComponent.html":{}}}],["console.log(\"replaced",{"_index":4233,"title":{},"body":{"injectables/SettingsService.html":{}}}],["console.log(\"resetting",{"_index":2607,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(\"running",{"_index":2072,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["console.log(\"sending",{"_index":1639,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["console.log(\"sent",{"_index":1653,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["console.log(\"shorten",{"_index":2930,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(\"sortfieldreportsbycallsign...done",{"_index":1699,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["console.log(\"sortrangersbycallsign...done",{"_index":4073,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(\"unable",{"_index":2995,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["console.log(\"updatecoords",{"_index":2922,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(\"updated",{"_index":3969,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{}}}],["console.log(\"updatelocation",{"_index":2742,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(\"verified",{"_index":2978,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["console.log('a",{"_index":1960,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["console.log('address",{"_index":2809,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log('addressctrlchanged",{"_index":2837,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log('alertcomponent.nginit",{"_index":351,"title":{},"body":{"components/AlertsComponent.html":{}}}],["console.log('convert",{"_index":4542,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["console.log('done",{"_index":514,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["console.log('firstname",{"_index":2792,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log('got",{"_index":4154,"title":{},"body":{"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["console.log('id",{"_index":4331,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["console.log('moving",{"_index":2717,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log('review",{"_index":370,"title":{},"body":{"components/AlertsComponent.html":{}}}],["console.log('subscription",{"_index":1652,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["console.log('the",{"_index":519,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["console.log(`${this.fieldreportstatuses.length",{"_index":4205,"title":{},"body":{"injectables/SettingsService.html":{}}}],["console.log(`1",{"_index":4064,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(`2",{"_index":4065,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(`3",{"_index":4066,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(`4",{"_index":4068,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(`5",{"_index":4070,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(`_filterrangers",{"_index":2553,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`addressctrl.valuechanges",{"_index":2528,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`addressctrlchanged",{"_index":2805,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`addressctrlchanged2",{"_index":2739,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`aginit",{"_index":1284,"title":{},"body":{"components/ColorEditor.html":{}}}],["console.log(`app",{"_index":600,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`bad",{"_index":2082,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["console.log(`banner",{"_index":361,"title":{},"body":{"components/AlertsComponent.html":{}}}],["console.log(`callsignctrlchanged",{"_index":2638,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`chkpcode",{"_index":2950,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`constructor",{"_index":1244,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["console.log(`day",{"_index":2023,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["console.log(`displaymarker",{"_index":2754,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`don't",{"_index":603,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`entryform",{"_index":2564,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`fade",{"_index":2658,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`fieldreport",{"_index":1623,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["console.log(`fieldreportservice",{"_index":1659,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["console.log(`form",{"_index":2664,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`getlatlngandaddressfromplaceid",{"_index":2337,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["console.log(`getrangers",{"_index":3960,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(`getvalue",{"_index":1312,"title":{},"body":{"components/ColorEditor.html":{}}}],["console.log(`googlegeocode.geocoder",{"_index":2277,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["console.log(`got",{"_index":2110,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"pipes/myUnusedPipe.html":{}}}],["console.log(`initialized",{"_index":4200,"title":{},"body":{"injectables/SettingsService.html":{}}}],["console.log(`ispopup",{"_index":1321,"title":{},"body":{"components/ColorEditor.html":{}}}],["console.log(`isvalidaddress",{"_index":2264,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["console.log(`loadrangersfromexcel",{"_index":4040,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(`localstorage",{"_index":4175,"title":{},"body":{"injectables/SettingsService.html":{}}}],["console.log(`looking",{"_index":2858,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`myjson",{"_index":4060,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(`myjson2",{"_index":4063,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(`no",{"_index":3955,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(`now",{"_index":2064,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["console.log(`onbtnclosealert",{"_index":405,"title":{},"body":{"components/AlertsComponent.html":{}}}],["console.log(`onbtnclosebottomalert",{"_index":406,"title":{},"body":{"components/AlertsComponent.html":{}}}],["console.log(`onclick",{"_index":1325,"title":{},"body":{"components/ColorEditor.html":{}}}],["console.log(`oncolorctrclosed",{"_index":1314,"title":{},"body":{"components/ColorEditor.html":{}}}],["console.log(`onkeydown",{"_index":1330,"title":{},"body":{"components/ColorEditor.html":{}}}],["console.log(`onmapinitialized",{"_index":2691,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`onmousedown",{"_index":1328,"title":{},"body":{"components/ColorEditor.html":{}}}],["console.log(`rangerservice",{"_index":3990,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(`rangersservice",{"_index":3964,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(`recalcfieldbounds",{"_index":1716,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["console.log(`report",{"_index":2672,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`resetfieldreportstatusdefaults",{"_index":4228,"title":{},"body":{"injectables/SettingsService.html":{}}}],["console.log(`running",{"_index":2573,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`setvalue",{"_index":1322,"title":{},"body":{"components/ColorEditor.html":{}}}],["console.log(`suggestions",{"_index":4592,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["console.log(`unable",{"_index":3989,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(`unexpected",{"_index":2836,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`updatecoords",{"_index":2881,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`updateoverviewmap",{"_index":2698,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(`weekday",{"_index":2025,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["console.log(error",{"_index":4022,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.log(key",{"_index":512,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["console.log(selectedvalue",{"_index":2793,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(size",{"_index":523,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["console.log(this.reactiveform.get(\"firstname\").value",{"_index":2794,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(this.reactiveform.value",{"_index":2795,"title":{},"body":{"components/IconComponent.html":{}}}],["console.log(user",{"_index":3274,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["console.log(value",{"_index":4019,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["console.warn('gmap",{"_index":2758,"title":{},"body":{"components/IconComponent.html":{}}}],["console.warn('move",{"_index":2718,"title":{},"body":{"components/IconComponent.html":{}}}],["const",{"_index":374,"title":{},"body":{"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"modules/LazyRoutingModule.html":{},"injectables/LocalStorageService.html":{},"injectables/MarkerService.html":{},"components/MoodEditor.html":{},"classes/Point.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"pipes/myUnusedPipe.html":{}}}],["constructed",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["construction",{"_index":2011,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"pipes/myUnusedPipe.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"classes/StreetAddress.html":{},"injectables/TeamService.html":{},"injectables/ThreeWordsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["constructor(//public",{"_index":4335,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["constructor(_age",{"_index":3767,"title":{},"body":{"classes/Point.html":{}}}],["constructor(_lat",{"_index":1500,"title":{},"body":{"classes/Coordinate.html":{}}}],["constructor(_snackbar",{"_index":303,"title":{},"body":{"components/AlertsComponent.html":{}}}],["constructor(coord",{"_index":1416,"title":{},"body":{"classes/Coord.html":{}}}],["constructor(document",{"_index":3320,"title":{},"body":{"components/LogComponent.html":{},"classes/csvImport.html":{}}}],["constructor(formbuilder",{"_index":1895,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["constructor(http",{"_index":3384,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/PostService.html":{},"injectables/ShapeService.html":{}}}],["constructor(httpclient",{"_index":3892,"title":{},"body":{"injectables/RangerService.html":{},"injectables/TeamService.html":{}}}],["constructor(lat",{"_index":3779,"title":{},"body":{"classes/Point-1.html":{}}}],["constructor(latdms",{"_index":3795,"title":{},"body":{"classes/Point-1.html":{}}}],["constructor(latitudelo",{"_index":863,"title":{},"body":{"classes/CodeArea.html":{}}}],["constructor(localstorage",{"_index":3138,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["constructor(name",{"_index":3099,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{}}}],["constructor(private",{"_index":506,"title":{},"body":{"classes/AngularComponentOrService.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/MarkerService.html":{},"classes/Point.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["constructor(public",{"_index":874,"title":{},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"components/LogComponent.html":{},"classes/Point.html":{},"classes/Point-1.html":{}}}],["constructor(rangerservice",{"_index":1548,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["constructor(settingsservice",{"_index":2195,"title":{},"body":{"components/FooterComponent.html":{}}}],["constructor(storage",{"_index":500,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["constructor(storagemap",{"_index":1509,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(swupdate",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(twords",{"_index":3792,"title":{},"body":{"classes/Point-1.html":{}}}],["contain",{"_index":223,"title":{},"body":{"components/AboutComponent.html":{}}}],["container",{"_index":1221,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{},"classes/csvImport.html":{}}}],["contains",{"_index":897,"title":{},"body":{"classes/CodeArea.html":{},"classes/GoogleGeocode.html":{}}}],["contains(latitude",{"_index":1040,"title":{},"body":{"classes/CodeArea.html":{}}}],["content",{"_index":635,"title":{},"body":{"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/NavbarComponent.html":{}}}],["contents",{"_index":4041,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["continue",{"_index":1787,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["contract",{"_index":168,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["control",{"_index":1269,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["controls",{"_index":2443,"title":{},"body":{"components/IconComponent.html":{}}}],["convert",{"_index":425,"title":{},"body":{"components/AlertsComponent.html":{},"classes/CodeArea.html":{},"components/LogComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{}}}],["convertdatatoworkbook",{"_index":4751,"title":{},"body":{"classes/csvImport.html":{}}}],["convertdatatoworkbook(data1",{"_index":4758,"title":{},"body":{"classes/csvImport.html":{}}}],["converted",{"_index":1058,"title":{},"body":{"classes/CodeArea.html":{}}}],["converting",{"_index":2841,"title":{},"body":{"components/IconComponent.html":{},"classes/csvImport.html":{}}}],["converts",{"_index":4530,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["convertto3wa",{"_index":4534,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["convertto3waclient",{"_index":4465,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["convertto3waoptions",{"_index":4466,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["converttocoordinatesclient",{"_index":4463,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["converttocoordinatesoptions",{"_index":4464,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["converttocoordinatesresponse",{"_index":4555,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["coord",{"_index":1414,"title":{"classes/Coord.html":{}},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"coverage.html":{}}}],["coord(0",{"_index":3783,"title":{},"body":{"classes/Point-1.html":{}}}],["coord(10",{"_index":3793,"title":{},"body":{"classes/Point-1.html":{}}}],["coord(20",{"_index":3794,"title":{},"body":{"classes/Point-1.html":{}}}],["coord(47.4472",{"_index":3784,"title":{},"body":{"classes/Point-1.html":{}}}],["coord(lat",{"_index":3796,"title":{},"body":{"classes/Point-1.html":{}}}],["coord(lng",{"_index":3798,"title":{},"body":{"classes/Point-1.html":{}}}],["coord.latitudecenter",{"_index":2958,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["coord.longitudecenter",{"_index":2959,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["coorddms",{"_index":1495,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["coordinate",{"_index":1448,"title":{"classes/Coordinate.html":{}},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"classes/Point.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"coverage.html":{}}}],["coordinates",{"_index":840,"title":{},"body":{"classes/CodeArea.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["coordinates.lat",{"_index":4531,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["coordinates.lng",{"_index":4532,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["coords",{"_index":4604,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["coords!.innerhtml",{"_index":4607,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["copies",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{},"injectables/SettingsService.html":{},"license.html":{}}}],["copy",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{},"license.html":{}}}],["copyleft",{"_index":2203,"title":{},"body":{"components/FooterComponent.html":{}}}],["copyright",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["core",{"_index":4881,"title":{},"body":{"dependencies.html":{}}}],["core.mjs:6484",{"_index":4861,"title":{},"body":{"classes/csvImport.html":{}}}],["core.mjs:6485",{"_index":1671,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["corner",{"_index":4578,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["corners",{"_index":847,"title":{},"body":{"classes/CodeArea.html":{}}}],["cornflowerblue",{"_index":1400,"title":{},"body":{"components/ColorEditor.html":{}}}],["correct",{"_index":4612,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["corrections",{"_index":4616,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["couldn't",{"_index":355,"title":{},"body":{"components/AlertsComponent.html":{}}}],["countries",{"_index":4360,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["country",{"_index":4769,"title":{},"body":{"classes/csvImport.html":{},"miscellaneous/variables.html":{}}}],["country=be%2cgb",{"_index":2969,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["county\",\"short_name\":\"king",{"_index":2312,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["county\",\"types\":[\"administrative_area_level_2\",\"political",{"_index":2313,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["court",{"_index":4086,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["cover",{"_index":224,"title":{},"body":{"components/AboutComponent.html":{}}}],["coverage",{"_index":4705,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":4082,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{}}}],["createpopper",{"_index":2372,"title":{},"body":{"components/IconComponent.html":{}}}],["createpopper(popcorn",{"_index":3060,"title":{},"body":{"components/IconComponent.html":{}}}],["createpopper(referenceelement",{"_index":2409,"title":{},"body":{"components/IconComponent.html":{}}}],["createrowdata",{"_index":4365,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["creates",{"_index":4380,"title":{},"body":{"injectables/ThreeWordsService.html":{}}}],["creating",{"_index":2442,"title":{},"body":{"components/IconComponent.html":{}}}],["crossdomain",{"_index":2965,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["crosshair",{"_index":2438,"title":{},"body":{"components/IconComponent.html":{}}}],["crud",{"_index":1645,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["css",{"_index":227,"title":{},"body":{"components/AboutComponent.html":{},"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["css3",{"_index":2652,"title":{},"body":{"components/IconComponent.html":{}}}],["csv",{"_index":2140,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["csvimport",{"_index":3926,"title":{"classes/csvImport.html":{}},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"coverage.html":{},"classes/csvImport.html":{}}}],["csvimport.ts:142",{"_index":4833,"title":{},"body":{"classes/csvImport.html":{}}}],["cubic",{"_index":1355,"title":{},"body":{"components/ColorEditor.html":{}}}],["current",{"_index":189,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/PlusCode.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["currentitems",{"_index":1213,"title":{},"body":{"components/ColorEditor.html":{}}}],["cursor",{"_index":2440,"title":{},"body":{"components/IconComponent.html":{}}}],["d",{"_index":1913,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/Point-1.html":{},"classes/csvImport.html":{},"miscellaneous/functions.html":{},"pipes/myUnusedPipe.html":{}}}],["d.getday",{"_index":2026,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["d.toisostring",{"_index":2024,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["d.valueof",{"_index":2085,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["d:\\projects\\importexcel\\sheetjs",{"_index":3944,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["d:\\projects\\rangertrak\\rangertrak\\node_modules\\@what3words\\api\\dist\\lib",{"_index":4479,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["d:\\projects\\rangertrak\\rangertrak\\src\\app\\app.module.ts",{"_index":743,"title":{},"body":{"modules/AppModule.html":{}}}],["d:\\projects\\rangertrak\\rangertrak\\src\\app\\log\\log.component.ts",{"_index":3936,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["damages",{"_index":164,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["dark",{"_index":4227,"title":{},"body":{"injectables/SettingsService.html":{}}}],["darken",{"_index":226,"title":{},"body":{"components/AboutComponent.html":{}}}],["data",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"classes/AngularComponentOrService.html":{},"components/ColorEditor.html":{},"injectables/DataService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/csvImport.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["data.address",{"_index":3856,"title":{},"body":{"injectables/PopupService.html":{}}}],["data.greeting",{"_index":4009,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["data.id",{"_index":4332,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["data.length",{"_index":2002,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["data.map((row",{"_index":2003,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["data.name",{"_index":3855,"title":{},"body":{"injectables/PopupService.html":{}}}],["data.population",{"_index":3857,"title":{},"body":{"injectables/PopupService.html":{}}}],["data.service.ts",{"_index":3268,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["data.title",{"_index":4333,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["data.xlsx",{"_index":4866,"title":{},"body":{"classes/csvImport.html":{}}}],["data1",{"_index":4760,"title":{},"body":{"classes/csvImport.html":{}}}],["dataservice",{"_index":1507,"title":{"injectables/DataService.html":{}},"body":{"injectables/DataService.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["datatransfer",{"_index":4037,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["date",{"_index":408,"title":{},"body":{"components/AlertsComponent.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["date(5*60*1000",{"_index":2089,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["date(params.data.date).gettime",{"_index":2045,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["date.now",{"_index":2047,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["date.parse(filters.basetime",{"_index":1805,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["date.parse(filters.basetime))/60000.0",{"_index":1799,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["date1",{"_index":2483,"title":{},"body":{"components/IconComponent.html":{}}}],["date2",{"_index":2486,"title":{},"body":{"components/IconComponent.html":{}}}],["date=${this.date",{"_index":2666,"title":{},"body":{"components/IconComponent.html":{}}}],["dateasstring",{"_index":1724,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["dateasstring.split",{"_index":1727,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["datecontrol",{"_index":2488,"title":{},"body":{"components/IconComponent.html":{}}}],["datecontrolminmax",{"_index":2491,"title":{},"body":{"components/IconComponent.html":{}}}],["datectrl",{"_index":2489,"title":{},"body":{"components/IconComponent.html":{}}}],["dateparts",{"_index":1726,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["datepicker/timeinline",{"_index":2469,"title":{},"body":{"components/IconComponent.html":{}}}],["dayjs",{"_index":2367,"title":{},"body":{"components/IconComponent.html":{},"dependencies.html":{}}}],["dayjs.dayjs",{"_index":2470,"title":{},"body":{"components/IconComponent.html":{}}}],["dazed",{"_index":4094,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["dbug",{"_index":298,"title":{},"body":{"components/AlertsComponent.html":{},"injectables/FieldReportService.html":{}}}],["dbug(\"basetime=\"+filters.basetime",{"_index":1794,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["dbug(\"call[\"+i+\"]=\"+teamlocations[i].callsign",{"_index":1788,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["dbug(\"coords",{"_index":1814,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["dbug(\"created",{"_index":1838,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["dbug(\"filters",{"_index":1781,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["dbug(\"invalid",{"_index":3760,"title":{},"body":{"classes/PlusCode.html":{}}}],["dbug(\"map",{"_index":1817,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["dbug(\"minutes=\"+date.parse(teamlocations[i].date)/60000.0",{"_index":1796,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["dbug(\"new",{"_index":3731,"title":{},"body":{"classes/PlusCode.html":{}}}],["dbug(\"shorten",{"_index":3755,"title":{},"body":{"classes/PlusCode.html":{}}}],["dbug(\"team[\"+i+\"]=\"+teamlocations[i].team",{"_index":1783,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["dbug(\"teamlocations[\"+i+\"]=\"+team",{"_index":1831,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["dbug(\"time",{"_index":1797,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["dbug(\"time[\"+i",{"_index":1792,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["dbug(\"updatecoords",{"_index":3750,"title":{},"body":{"classes/PlusCode.html":{}}}],["dbug(msg",{"_index":318,"title":{},"body":{"components/AlertsComponent.html":{}}}],["dbug_unused",{"_index":3318,"title":{},"body":{"components/LogComponent.html":{}}}],["dbug_unused(msg",{"_index":3322,"title":{},"body":{"components/LogComponent.html":{}}}],["dbuglog",{"_index":409,"title":{},"body":{"components/AlertsComponent.html":{},"components/LogComponent.html":{}}}],["dbuglog.innerhtml",{"_index":420,"title":{},"body":{"components/AlertsComponent.html":{}}}],["dbugmsg",{"_index":418,"title":{},"body":{"components/AlertsComponent.html":{}}}],["dd",{"_index":2030,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["ddd",{"_index":3354,"title":{},"body":{"components/LogComponent.html":{}}}],["ddtodms",{"_index":2362,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ddtodms(d",{"_index":4921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ddtodms(latdd",{"_index":2900,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["ddtodms(lngdd",{"_index":2910,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["de",{"_index":4669,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["deal",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["dealings",{"_index":174,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["debouncetime",{"_index":2360,"title":{},"body":{"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["debug",{"_index":2073,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["debugger",{"_index":2273,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{}}}],["debugmode",{"_index":4108,"title":{},"body":{"injectables/SettingsService.html":{}}}],["dec",{"_index":3847,"title":{},"body":{"classes/Point-1.html":{}}}],["decimal",{"_index":1473,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"components/IconComponent.html":{},"classes/Point.html":{}}}],["declarations",{"_index":661,"title":{},"body":{"modules/AppModule.html":{},"modules/LazyModule.html":{}}}],["declared",{"_index":774,"title":{},"body":{"modules/AppModule.html":{}}}],["decmal",{"_index":3063,"title":{},"body":{"components/IconComponent.html":{}}}],["decode",{"_index":1033,"title":{},"body":{"classes/CodeArea.html":{},"classes/PlusCode.html":{}}}],["decode(code",{"_index":1052,"title":{},"body":{"classes/CodeArea.html":{}}}],["decode(pcode",{"_index":3765,"title":{},"body":{"classes/PlusCode.html":{}}}],["decoded",{"_index":841,"title":{},"body":{"classes/CodeArea.html":{}}}],["decodes",{"_index":1047,"title":{},"body":{"classes/CodeArea.html":{}}}],["decoding",{"_index":3679,"title":{},"body":{"classes/PlusCode.html":{}}}],["decoration:none",{"_index":2204,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["decorator",{"_index":1231,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{}}}],["decorators",{"_index":3543,"title":{},"body":{"components/MoodEditor.html":{}}}],["def_lat",{"_index":3715,"title":{},"body":{"classes/PlusCode.html":{}}}],["def_long",{"_index":3717,"title":{},"body":{"classes/PlusCode.html":{}}}],["def_pcode",{"_index":3719,"title":{},"body":{"classes/PlusCode.html":{}}}],["default",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point-1.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{},"miscellaneous/functions.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["defaultcoldef",{"_index":1871,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["defaultconfig",{"_index":3044,"title":{},"body":{"components/IconComponent.html":{}}}],["defaults",{"_index":4208,"title":{},"body":{"injectables/SettingsService.html":{}}}],["define",{"_index":772,"title":{},"body":{"modules/AppModule.html":{},"classes/CodeArea.html":{},"classes/Point-1.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"classes/StreetAddress.html":{},"injectables/TeamService.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"components/X404Component.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["deflat",{"_index":2702,"title":{},"body":{"components/IconComponent.html":{},"injectables/SettingsService.html":{}}}],["deflng",{"_index":2703,"title":{},"body":{"components/IconComponent.html":{},"injectables/SettingsService.html":{}}}],["defpcodelabel",{"_index":2938,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["defpluscode",{"_index":4141,"title":{},"body":{"injectables/SettingsService.html":{}}}],["defpluscode\").value",{"_index":3730,"title":{},"body":{"classes/PlusCode.html":{}}}],["defrangerstatus",{"_index":4145,"title":{},"body":{"injectables/SettingsService.html":{}}}],["defteamcolor",{"_index":1820,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["defteamfillcolor",{"_index":1824,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["defteamopacity",{"_index":1826,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["defteamshape",{"_index":1822,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["defzoom",{"_index":4140,"title":{},"body":{"injectables/SettingsService.html":{}}}],["deg",{"_index":1484,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"classes/Point-1.html":{}}}],["degredation",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["degree",{"_index":3694,"title":{},"body":{"classes/PlusCode.html":{},"classes/Point-1.html":{}}}],["degrees",{"_index":867,"title":{},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/Point.html":{}}}],["degrees.html",{"_index":3817,"title":{},"body":{"classes/Point-1.html":{}}}],["delete",{"_index":524,"title":{},"body":{"classes/AngularComponentOrService.html":{},"components/FieldReportsComponent.html":{},"injectables/LocalStorageService.html":{}}}],["delete(index",{"_index":3167,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["deleteallfieldreports",{"_index":1531,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["deleteallrangers",{"_index":3878,"title":{},"body":{"injectables/RangerService.html":{}}}],["deleted",{"_index":4176,"title":{},"body":{"injectables/SettingsService.html":{}}}],["deletefieldreport",{"_index":1532,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["deletefieldreport(id",{"_index":1557,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["deletenote(id",{"_index":3190,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["deleteranger",{"_index":3879,"title":{},"body":{"injectables/RangerService.html":{}}}],["deleteranger(callsign",{"_index":3897,"title":{},"body":{"injectables/RangerService.html":{}}}],["demo",{"_index":3232,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["dependencies",{"_index":643,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/LazyModule.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":785,"title":{},"body":{"modules/AppModule.html":{}}}],["depending",{"_index":3700,"title":{},"body":{"classes/PlusCode.html":{}}}],["depends",{"_index":744,"title":{},"body":{"modules/AppModule.html":{},"classes/CodeArea.html":{},"classes/PlusCode.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["deprecated",{"_index":627,"title":{},"body":{"components/AppComponent.html":{}}}],["derived",{"_index":2746,"title":{},"body":{"components/IconComponent.html":{}}}],["description",{"_index":839,"title":{},"body":{"classes/CodeArea.html":{}}}],["deserialize",{"_index":3137,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["deserialize(name",{"_index":3140,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["desire",{"_index":3041,"title":{},"body":{"components/IconComponent.html":{}}}],["desired",{"_index":1681,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["desktop",{"_index":4965,"title":{},"body":{"index.html":{}}}],["destruction",{"_index":1258,"title":{},"body":{"components/ColorEditor.html":{}}}],["details",{"_index":3132,"title":{},"body":{"modules/LazyRoutingModule.html":{}}}],["details.component",{"_index":3131,"title":{},"body":{"modules/LazyRoutingModule.html":{}}}],["details/blog",{"_index":3130,"title":{},"body":{"modules/LazyRoutingModule.html":{}}}],["detailsdata?.carts_amount",{"_index":4029,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["detailsdata?.collection_amount",{"_index":4027,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["detailsdata?.sales_amount",{"_index":4025,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["determine",{"_index":1106,"title":{},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/PlusCode.html":{}}}],["determines",{"_index":998,"title":{},"body":{"classes/CodeArea.html":{}}}],["dev",{"_index":3935,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"index.html":{}}}],["development",{"_index":2567,"title":{},"body":{"components/IconComponent.html":{}}}],["device",{"_index":3672,"title":{},"body":{"classes/PlusCode.html":{}}}],["device/form",{"_index":4940,"title":{},"body":{"index.html":{}}}],["devsite",{"_index":2239,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["diagram",{"_index":4982,"title":{},"body":{"index.html":{}}}],["diagrams",{"_index":4955,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":1346,"title":{},"body":{"components/ColorEditor.html":{}}}],["diff=\"+math.abs(date.parse(teamlocations[i].date",{"_index":1798,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["different",{"_index":1127,"title":{},"body":{"classes/CodeArea.html":{},"injectables/SettingsService.html":{}}}],["digit",{"_index":1002,"title":{},"body":{"classes/CodeArea.html":{},"classes/PlusCode.html":{}}}],["digits",{"_index":900,"title":{},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/PlusCode.html":{},"classes/Point.html":{}}}],["dimensions",{"_index":954,"title":{},"body":{"classes/CodeArea.html":{}}}],["dir",{"_index":1486,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"classes/Point-1.html":{}}}],["direction",{"_index":3627,"title":{},"body":{"components/NavbarComponent.html":{}}}],["directive",{"_index":244,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["directives",{"_index":285,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["directly",{"_index":3786,"title":{},"body":{"classes/Point-1.html":{}}}],["direnum",{"_index":1420,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"miscellaneous/enumerations.html":{}}}],["dirty",{"_index":2730,"title":{},"body":{"components/IconComponent.html":{}}}],["dirtype",{"_index":1427,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"miscellaneous/typealiases.html":{}}}],["disable",{"_index":2802,"title":{},"body":{"components/IconComponent.html":{},"injectables/LocalStorageService.html":{}}}],["disabled",{"_index":591,"title":{},"body":{"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["disabledoubleclickzoom",{"_index":2431,"title":{},"body":{"components/IconComponent.html":{}}}],["disableminute",{"_index":2481,"title":{},"body":{"components/IconComponent.html":{}}}],["disappear",{"_index":1858,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["disconnected",{"_index":4928,"title":{},"body":{"index.html":{}}}],["disk",{"_index":1462,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"classes/Point.html":{}}}],["dismiss",{"_index":1345,"title":{},"body":{"components/ColorEditor.html":{}}}],["display",{"_index":200,"title":{},"body":{"components/AboutComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{},"classes/PlusCode.html":{}}}],["display:inline",{"_index":1382,"title":{},"body":{"components/ColorEditor.html":{}}}],["displaybeautifulmap(num:number",{"_index":3098,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["displayed",{"_index":382,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"classes/PlusCode.html":{}}}],["displayhide",{"_index":1883,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["displayhide(htmlelementid",{"_index":1897,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{}}}],["displaying",{"_index":3670,"title":{},"body":{"classes/PlusCode.html":{}}}],["displaymarker",{"_index":2759,"title":{},"body":{"components/IconComponent.html":{}}}],["displaymarker(pos",{"_index":2753,"title":{},"body":{"components/IconComponent.html":{}}}],["displayrangers",{"_index":3880,"title":{},"body":{"injectables/RangerService.html":{}}}],["displayrangers(msg",{"_index":3899,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["displayshow",{"_index":1884,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["displayshow(htmlelementid",{"_index":1900,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{}}}],["displaysmallmap(latdd",{"_index":3761,"title":{},"body":{"classes/PlusCode.html":{}}}],["distance",{"_index":1109,"title":{},"body":{"classes/CodeArea.html":{}}}],["distanceto(that",{"_index":3807,"title":{},"body":{"classes/Point-1.html":{}}}],["distribute",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["div",{"_index":2211,"title":{},"body":{"components/FooterComponent.html":{},"classes/csvImport.html":{}}}],["divide",{"_index":3688,"title":{},"body":{"classes/PlusCode.html":{}}}],["divided",{"_index":3684,"title":{},"body":{"classes/PlusCode.html":{}}}],["dms",{"_index":3820,"title":{},"body":{"classes/Point-1.html":{},"miscellaneous/functions.html":{}}}],["dms.deg",{"_index":3824,"title":{},"body":{"classes/Point-1.html":{}}}],["dms.dir",{"_index":3823,"title":{},"body":{"classes/Point-1.html":{}}}],["dms.match(/(\\d{1,3})[.,°d",{"_index":3838,"title":{},"body":{"classes/Point-1.html":{}}}],["dms.match(/(^\\s",{"_index":3833,"title":{},"body":{"classes/Point-1.html":{}}}],["dms.min",{"_index":3825,"title":{},"body":{"classes/Point-1.html":{}}}],["dms.replace(/(^\\s",{"_index":3835,"title":{},"body":{"classes/Point-1.html":{}}}],["dms.replace(/\\s/g",{"_index":3837,"title":{},"body":{"classes/Point-1.html":{}}}],["dms.sec",{"_index":3826,"title":{},"body":{"classes/Point-1.html":{}}}],["dmstodd",{"_index":4742,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dmstodd(dms",{"_index":3819,"title":{},"body":{"classes/Point-1.html":{},"miscellaneous/functions.html":{}}}],["dmstodeg",{"_index":3832,"title":{},"body":{"classes/Point-1.html":{}}}],["doc",{"_index":2525,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["docs",{"_index":3040,"title":{},"body":{"components/IconComponent.html":{},"index.html":{}}}],["docs/src/olympicwinnerssmall.json",{"_index":2000,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["document",{"_index":305,"title":{},"body":{"components/AlertsComponent.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["document.getelementbyid(\"addressctrl",{"_index":2855,"title":{},"body":{"components/IconComponent.html":{}}}],["document.getelementbyid(\"addresses",{"_index":2936,"title":{},"body":{"components/IconComponent.html":{}}}],["document.getelementbyid(\"addresses\")!.innerhtml",{"_index":3763,"title":{},"body":{"classes/PlusCode.html":{}}}],["document.getelementbyid(\"addresses\")!.innertext",{"_index":2854,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["document.getelementbyid(\"addresses\").value",{"_index":3758,"title":{},"body":{"classes/PlusCode.html":{}}}],["document.getelementbyid(\"addresslabel",{"_index":2871,"title":{},"body":{"components/IconComponent.html":{}}}],["document.getelementbyid(\"addresslabel\")!.innerhtml",{"_index":2961,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["document.getelementbyid(\"addresslabel\")!.textcontent",{"_index":2979,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["document.getelementbyid(\"addresslabel\").innerhtml",{"_index":2937,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["document.getelementbyid(\"coords",{"_index":4605,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["document.getelementbyid(\"dbuglog",{"_index":410,"title":{},"body":{"components/AlertsComponent.html":{}}}],["document.getelementbyid(\"defpluscode\").value",{"_index":3729,"title":{},"body":{"classes/PlusCode.html":{}}}],["document.getelementbyid(\"enter__where",{"_index":2886,"title":{},"body":{"components/IconComponent.html":{}}}],["document.getelementbyid(\"lat\")!.innerhtml",{"_index":3704,"title":{},"body":{"classes/PlusCode.html":{}}}],["document.getelementbyid(\"latituded",{"_index":2903,"title":{},"body":{"components/IconComponent.html":{}}}],["document.getelementbyid(\"latituded\").value",{"_index":3735,"title":{},"body":{"classes/PlusCode.html":{}}}],["document.getelementbyid(\"latitudedd\").value",{"_index":3732,"title":{},"body":{"classes/PlusCode.html":{}}}],["document.getelementbyid(\"latitudem",{"_index":2905,"title":{},"body":{"components/IconComponent.html":{}}}],["document.getelementbyid(\"latitudem\").value",{"_index":3737,"title":{},"body":{"classes/PlusCode.html":{}}}],["document.getelementbyid(\"latitudeq",{"_index":2901,"title":{},"body":{"components/IconComponent.html":{}}}],["document.getelementbyid(\"latitudeq\").value",{"_index":3734,"title":{},"body":{"classes/PlusCode.html":{}}}],["document.getelementbyid(\"latitudes",{"_index":2907,"title":{},"body":{"components/IconComponent.html":{}}}],["document.getelementbyid(\"latitudes\").value",{"_index":3739,"title":{},"body":{"classes/PlusCode.html":{}}}],["document.getelementbyid(\"lng",{"_index":2954,"title":{},"body":{"components/IconComponent.html":{}}}],["document.getelementbyid(\"long\")!.innerhtml",{"_index":3705,"title":{},"body":{"classes/PlusCode.html":{}}}],["document.getelementbyid(\"longituded",{"_index":2913,"title":{},"body":{"components/IconComponent.html":{}}}],["document.getelementbyid(\"longituded\").value",{"_index":3743,"title":{},"body":{"classes/PlusCode.html":{}}}],["document.getelementbyid(\"longitudedd\").value",{"_index":3733,"title":{},"body":{"classes/PlusCode.html":{}}}],["document.getelementbyid(\"longitudem",{"_index":2915,"title":{},"body":{"components/IconComponent.html":{}}}],["document.getelementbyid(\"longitudem\").value",{"_index":3745,"title":{},"body":{"classes/PlusCode.html":{}}}],["document.getelementbyid(\"longitudeq",{"_index":2911,"title":{},"body":{"components/IconComponent.html":{}}}],["document.getelementbyid(\"longitudeq\").value",{"_index":3741,"title":{},"body":{"classes/PlusCode.html":{}}}],["document.getelementbyid(\"longitudes",{"_index":2917,"title":{},"body":{"components/IconComponent.html":{}}}],["document.getelementbyid(\"longitudes\").value",{"_index":3747,"title":{},"body":{"classes/PlusCode.html":{}}}],["document.getelementbyid(\"nearest_place",{"_index":4606,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["document.getelementbyid(\"pcodeglobal",{"_index":2939,"title":{},"body":{"components/IconComponent.html":{}}}],["document.getelementbyid(\"pcodeglobal\")!.innerhtml",{"_index":2942,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["document.getelementbyid(\"pcodeglobal\").innerhtml",{"_index":3759,"title":{},"body":{"classes/PlusCode.html":{}}}],["document.getelementbyid(\"top3wa",{"_index":4601,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["document.getelementbyid('#alerts').fadein().delay(2500).fadeout",{"_index":429,"title":{},"body":{"components/AlertsComponent.html":{}}}],["document.getelementbyid('#alerts').html(\"alert",{"_index":428,"title":{},"body":{"components/AlertsComponent.html":{}}}],["document.queryselector('#button",{"_index":2594,"title":{},"body":{"components/IconComponent.html":{}}}],["document.queryselector('#rangergrid",{"_index":4785,"title":{},"body":{"classes/csvImport.html":{}}}],["document.queryselector('#teamgrid",{"_index":4286,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["document.queryselector('#tooltip",{"_index":2596,"title":{},"body":{"components/IconComponent.html":{}}}],["documentation",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["dodgerblue",{"_index":4309,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["doesn't",{"_index":1857,"title":{},"body":{"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/NavbarComponent.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"pipes/myUnusedPipe.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["domsanitizer",{"_index":2386,"title":{},"body":{"components/IconComponent.html":{}}}],["don't",{"_index":540,"title":{},"body":{"classes/AngularComponentOrService.html":{},"injectables/LocalStorageService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["done",{"_index":433,"title":{},"body":{"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"injectables/FieldReportService.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["dont",{"_index":1247,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["dot",{"_index":2238,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["dotted",{"_index":1370,"title":{},"body":{"components/ColorEditor.html":{}}}],["double",{"_index":2136,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["down",{"_index":180,"title":{},"body":{"components/AboutComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["drag",{"_index":2147,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["dragdropmodule",{"_index":3435,"title":{},"body":{"modules/MaterialModule.html":{}}}],["draggable",{"_index":2419,"title":{},"body":{"components/IconComponent.html":{},"injectables/MarkerService.html":{}}}],["draggablecursor",{"_index":2437,"title":{},"body":{"components/IconComponent.html":{}}}],["dramatically",{"_index":4629,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["drop",{"_index":3437,"title":{},"body":{"modules/MaterialModule.html":{}}}],["dt",{"_index":407,"title":{},"body":{"components/AlertsComponent.html":{},"components/FieldReportsComponent.html":{},"components/LogComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["dt.getdate()}_${dt.gethours()}:${dt.getminutes()}.csv",{"_index":2121,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["dt.getmonth",{"_index":2120,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["due",{"_index":1129,"title":{},"body":{"classes/CodeArea.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{}}}],["duplicate",{"_index":1465,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"components/IconComponent.html":{},"classes/Point.html":{}}}],["duration",{"_index":325,"title":{},"body":{"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["during",{"_index":2493,"title":{},"body":{"components/IconComponent.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["dx",{"_index":3808,"title":{},"body":{"classes/Point-1.html":{}}}],["dy",{"_index":3811,"title":{},"body":{"classes/Point-1.html":{}}}],["dy*dy",{"_index":3815,"title":{},"body":{"classes/Point-1.html":{}}}],["dynamic",{"_index":827,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["e",{"_index":1421,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/Point.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["e,n,s,w",{"_index":1618,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["e.g",{"_index":1488,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"components/FieldReportsComponent.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/SettingsService.html":{}}}],["e.style.visibility",{"_index":3006,"title":{},"body":{"components/IconComponent.html":{}}}],["e.target.result",{"_index":4048,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["e2e",{"_index":4976,"title":{},"body":{"index.html":{}}}],["e6e6e6",{"_index":3553,"title":{},"body":{"components/MoodEditor.html":{}}}],["e:${east",{"_index":1717,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["each",{"_index":535,"title":{},"body":{"classes/AngularComponentOrService.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"classes/PlusCode.html":{},"injectables/SettingsService.html":{}}}],["eager",{"_index":807,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/ThreeWordsService.html":{}}}],["eagerly",{"_index":4383,"title":{},"body":{"injectables/ThreeWordsService.html":{}}}],["early",{"_index":2513,"title":{},"body":{"components/IconComponent.html":{}}}],["easily",{"_index":1859,"title":{},"body":{"injectables/FieldReportService.html":{},"index.html":{}}}],["east",{"_index":1422,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"classes/Point.html":{},"miscellaneous/enumerations.html":{}}}],["east_lng",{"_index":4566,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["easy",{"_index":4490,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["edit",{"_index":4167,"title":{},"body":{"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["editable",{"_index":1947,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["edited",{"_index":2138,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["edited/sorted/filters",{"_index":4949,"title":{},"body":{"index.html":{}}}],["editedcode",{"_index":1066,"title":{},"body":{"classes/CodeArea.html":{}}}],["editedcodelength",{"_index":1044,"title":{},"body":{"classes/CodeArea.html":{}}}],["editing",{"_index":4211,"title":{},"body":{"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["edition/issues/7",{"_index":613,"title":{},"body":{"components/AppComponent.html":{}}}],["editor",{"_index":255,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["editor.component",{"_index":681,"title":{},"body":{"modules/AppModule.html":{}}}],["editor.component.ts",{"_index":1136,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{},"coverage.html":{}}}],["editor.component.ts:102",{"_index":1165,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:108",{"_index":1171,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:117",{"_index":1166,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:122",{"_index":1177,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:129",{"_index":1170,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:135",{"_index":1175,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:142",{"_index":1173,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:17",{"_index":1162,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["editor.component.ts:20",{"_index":3544,"title":{},"body":{"components/MoodEditor.html":{}}}],["editor.component.ts:21",{"_index":3545,"title":{},"body":{"components/MoodEditor.html":{}}}],["editor.component.ts:24",{"_index":3537,"title":{},"body":{"components/MoodEditor.html":{}}}],["editor.component.ts:29",{"_index":1185,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:30",{"_index":3536,"title":{},"body":{"components/MoodEditor.html":{}}}],["editor.component.ts:32",{"_index":1181,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:33",{"_index":1179,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:34",{"_index":1187,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:35",{"_index":1183,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["editor.component.ts:36",{"_index":1178,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:37",{"_index":1186,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:38",{"_index":1184,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:39",{"_index":1161,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["editor.component.ts:43",{"_index":3541,"title":{},"body":{"components/MoodEditor.html":{}}}],["editor.component.ts:47",{"_index":3542,"title":{},"body":{"components/MoodEditor.html":{}}}],["editor.component.ts:51",{"_index":1167,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["editor.component.ts:56",{"_index":3539,"title":{},"body":{"components/MoodEditor.html":{}}}],["editor.component.ts:57",{"_index":1168,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:62",{"_index":1164,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:66",{"_index":1280,"title":{},"body":{"components/ColorEditor.html":{}}}],["editor.component.ts:99",{"_index":1281,"title":{},"body":{"components/ColorEditor.html":{}}}],["edits",{"_index":2141,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["effect",{"_index":2711,"title":{},"body":{"components/IconComponent.html":{}}}],["egriddiv",{"_index":4285,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/csvImport.html":{}}}],["egriddiv.style.height",{"_index":4288,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["egriddiv.style.width",{"_index":4287,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["eighth",{"_index":1001,"title":{},"body":{"classes/CodeArea.html":{}}}],["el",{"_index":3047,"title":{},"body":{"components/IconComponent.html":{}}}],["elapsed",{"_index":1932,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["element",{"_index":243,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["element.offsetheight",{"_index":2660,"title":{},"body":{"components/IconComponent.html":{}}}],["element.style.animation",{"_index":2659,"title":{},"body":{"components/IconComponent.html":{}}}],["elementref",{"_index":3048,"title":{},"body":{"components/IconComponent.html":{}}}],["em",{"_index":4197,"title":{},"body":{"injectables/SettingsService.html":{}}}],["email",{"_index":1610,"title":{},"body":{"injectables/FieldReportService.html":{},"miscellaneous/enumerations.html":{}}}],["emergency",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["emit",{"_index":1295,"title":{},"body":{"components/ColorEditor.html":{}}}],["emitevent",{"_index":1289,"title":{},"body":{"components/ColorEditor.html":{}}}],["emitmodeltoviewchange",{"_index":1299,"title":{},"body":{"components/ColorEditor.html":{}}}],["emits",{"_index":623,"title":{},"body":{"components/AppComponent.html":{},"components/ColorEditor.html":{}}}],["emitted",{"_index":1298,"title":{},"body":{"components/ColorEditor.html":{}}}],["emitviewtomodelchange",{"_index":1303,"title":{},"body":{"components/ColorEditor.html":{}}}],["emoj",{"_index":363,"title":{},"body":{"components/AlertsComponent.html":{}}}],["emoji",{"_index":294,"title":{},"body":{"components/AlertsComponent.html":{}}}],["emoji_people",{"_index":337,"title":{},"body":{"components/AlertsComponent.html":{}}}],["en",{"_index":2032,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"pipes/myUnusedPipe.html":{}}}],["enable",{"_index":2803,"title":{},"body":{"components/IconComponent.html":{}}}],["enabled",{"_index":758,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{}}}],["enablemeridian",{"_index":2473,"title":{},"body":{"components/IconComponent.html":{}}}],["enclosed",{"_index":3665,"title":{},"body":{"classes/PlusCode.html":{}}}],["encode",{"_index":923,"title":{},"body":{"classes/CodeArea.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["encode(latdd",{"_index":3749,"title":{},"body":{"classes/PlusCode.html":{}}}],["encode(latdd,longdd",{"_index":3691,"title":{},"body":{"classes/PlusCode.html":{}}}],["encoded",{"_index":2261,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["encodeuri(addr",{"_index":2262,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["encoding",{"_index":938,"title":{},"body":{"classes/CodeArea.html":{}}}],["encoding_base_",{"_index":930,"title":{},"body":{"classes/CodeArea.html":{}}}],["encodings",{"_index":3677,"title":{},"body":{"classes/PlusCode.html":{}}}],["encryption",{"_index":4160,"title":{},"body":{"injectables/SettingsService.html":{}}}],["end",{"_index":1018,"title":{},"body":{"classes/CodeArea.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"components/NavbarComponent.html":{},"classes/PlusCode.html":{},"injectables/SettingsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["enddate",{"_index":3524,"title":{},"body":{"classes/Mission.html":{},"classes/OpPeriod.html":{}}}],["endpoint",{"_index":2349,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["endregion",{"_index":2721,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["english",{"_index":4518,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["enhance",{"_index":4942,"title":{},"body":{"index.html":{}}}],["enough",{"_index":1017,"title":{},"body":{"classes/CodeArea.html":{}}}],["enter",{"_index":194,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/IconComponent.html":{}}}],["enter__callsign",{"_index":2632,"title":{},"body":{"components/IconComponent.html":{}}}],["enter__fake",{"_index":2166,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["entered",{"_index":2996,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["entire",{"_index":4376,"title":{},"body":{"injectables/ThreeWordsService.html":{}}}],["entries",{"_index":2061,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["entry",{"_index":810,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/IconComponent.html":{},"injectables/SettingsService.html":{}}}],["entry'},{'name",{"_index":258,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["entry.component",{"_index":4393,"title":{},"body":{"guards/UnsavedChangesGuard.html":{}}}],["entry.component.html",{"_index":2404,"title":{},"body":{"components/IconComponent.html":{}}}],["entry.component.scss",{"_index":2405,"title":{},"body":{"components/IconComponent.html":{}}}],["entry.component.ts(77",{"_index":2497,"title":{},"body":{"components/IconComponent.html":{}}}],["entry.component.ts:154",{"_index":2333,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["entry.component.ts:424:14",{"_index":2852,"title":{},"body":{"components/IconComponent.html":{}}}],["entry.component.ts:459",{"_index":2297,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["entry.component.ts:465:47",{"_index":2850,"title":{},"body":{"components/IconComponent.html":{}}}],["entry.component.ts:495",{"_index":2294,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["entry/entry.component",{"_index":694,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["entry/unsavedchangesguard",{"_index":804,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["entrycomponent",{"_index":257,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"guards/UnsavedChangesGuard.html":{},"components/X404Component.html":{},"coverage.html":{},"overview.html":{}}}],["entrycomponent.addressctrlchanged",{"_index":2851,"title":{},"body":{"components/IconComponent.html":{}}}],["entrycomponent.chkaddresses",{"_index":2849,"title":{},"body":{"components/IconComponent.html":{}}}],["entrydetailsform",{"_index":2455,"title":{},"body":{"components/IconComponent.html":{}}}],["entryform",{"_index":2561,"title":{},"body":{"components/IconComponent.html":{}}}],["enum",{"_index":1419,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"classes/Point.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["enumerations",{"_index":4914,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":731,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":759,"title":{},"body":{"modules/AppModule.html":{}}}],["environmental",{"_index":4157,"title":{},"body":{"injectables/SettingsService.html":{}}}],["environments/environment",{"_index":732,"title":{},"body":{"modules/AppModule.html":{}}}],["eoc",{"_index":3718,"title":{},"body":{"classes/PlusCode.html":{},"classes/Point-1.html":{},"injectables/SettingsService.html":{}}}],["eoc.online",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{},"license.html":{}}}],["eocs",{"_index":2202,"title":{},"body":{"components/FooterComponent.html":{}}}],["equator",{"_index":943,"title":{},"body":{"classes/CodeArea.html":{},"classes/PlusCode.html":{}}}],["err",{"_index":1480,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/GoogleGeocode.html":{},"classes/Point.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["err.message",{"_index":1483,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["errmsg",{"_index":2992,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["error",{"_index":586,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["error(\"illegalargumentexception",{"_index":1064,"title":{},"body":{"classes/CodeArea.html":{}}}],["error(\"valueerror",{"_index":1116,"title":{},"body":{"classes/CodeArea.html":{}}}],["error('cannot",{"_index":4039,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["error('invalid",{"_index":1444,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["error('latatude",{"_index":1451,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["error('longitude",{"_index":1452,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["error('method",{"_index":4779,"title":{},"body":{"classes/csvImport.html":{}}}],["error('the",{"_index":1436,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["error(httprequest.response",{"_index":4797,"title":{},"body":{"classes/csvImport.html":{}}}],["error.code",{"_index":2993,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["error.message",{"_index":2036,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"pipes/myUnusedPipe.html":{}}}],["error.name",{"_index":2035,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/SettingsService.html":{},"pipes/myUnusedPipe.html":{}}}],["errors",{"_index":1276,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{}}}],["escape",{"_index":197,"title":{},"body":{"components/AboutComponent.html":{}}}],["eslint",{"_index":3241,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["eslint/no",{"_index":3242,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["esri_leaflet",{"_index":3086,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{},"miscellaneous/enumerations.html":{}}}],["etc",{"_index":2771,"title":{},"body":{"components/IconComponent.html":{}}}],["even",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"classes/CodeArea.html":{},"components/FieldReportsComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["event",{"_index":159,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"classes/csvImport.html":{},"license.html":{},"pipes/myUnusedPipe.html":{}}}],["event.key",{"_index":1327,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["event.latlng",{"_index":2714,"title":{},"body":{"components/IconComponent.html":{}}}],["event.latlng.tojson",{"_index":2716,"title":{},"body":{"components/IconComponent.html":{}}}],["event.stoppropagation",{"_index":1329,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["event:target",{"_index":4033,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["eventlisteners",{"_index":3017,"title":{},"body":{"components/IconComponent.html":{}}}],["events",{"_index":1251,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["eventtarget",{"_index":3909,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["evt",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["evt.checked",{"_index":3065,"title":{},"body":{"components/IconComponent.html":{}}}],["evt.currentversion",{"_index":573,"title":{},"body":{"components/AppComponent.html":{}}}],["evt.latestversion",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["evt.type",{"_index":569,"title":{},"body":{"components/AppComponent.html":{}}}],["example",{"_index":445,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["excel",{"_index":393,"title":{},"body":{"components/AlertsComponent.html":{},"components/FieldReportsComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{}}}],["exceldata",{"_index":3873,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["except",{"_index":3163,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["exception",{"_index":1051,"title":{},"body":{"classes/CodeArea.html":{}}}],["excludes",{"_index":947,"title":{},"body":{"classes/CodeArea.html":{}}}],["execute",{"_index":4974,"title":{},"body":{"index.html":{}}}],["executing",{"_index":4483,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["exist",{"_index":520,"title":{},"body":{"classes/AngularComponentOrService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["existed.unanswered.articulated",{"_index":4507,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["existing",{"_index":1227,"title":{},"body":{"components/ColorEditor.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["exists",{"_index":516,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["expect",{"_index":4815,"title":{},"body":{"classes/csvImport.html":{}}}],["expecting",{"_index":4823,"title":{},"body":{"classes/csvImport.html":{}}}],["explicit",{"_index":3243,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"components/LazyComponent.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"modules/MaterialModule.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"classes/StreetAddress.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"components/X404Component.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["exported",{"_index":2139,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["exporting",{"_index":4003,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{}}}],["exports",{"_index":797,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"modules/MaterialModule.html":{},"classes/csvImport.html":{}}}],["expose",{"_index":3958,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["exposed",{"_index":4166,"title":{},"body":{"injectables/SettingsService.html":{}}}],["express",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["extracts",{"_index":3663,"title":{},"body":{"classes/PlusCode.html":{}}}],["extraneous",{"_index":1320,"title":{},"body":{"components/ColorEditor.html":{}}}],["f",{"_index":4817,"title":{},"body":{"classes/csvImport.html":{}}}],["f03",{"_index":4283,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["f44336",{"_index":2188,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["f5",{"_index":583,"title":{},"body":{"components/AppComponent.html":{}}}],["factor",{"_index":4941,"title":{},"body":{"index.html":{}}}],["fading",{"_index":2677,"title":{},"body":{"components/IconComponent.html":{}}}],["fail",{"_index":2187,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["failed",{"_index":2248,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["fails",{"_index":2570,"title":{},"body":{"components/IconComponent.html":{}}}],["failure",{"_index":4021,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["fainfocircle",{"_index":2375,"title":{},"body":{"components/IconComponent.html":{}}}],["fake",{"_index":2162,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/MarkerService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["fakes",{"_index":2067,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["false",{"_index":1006,"title":{},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"injectables/SettingsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"miscellaneous/functions.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["famapmarkedalt",{"_index":2374,"title":{},"body":{"components/IconComponent.html":{},"components/NavbarComponent.html":{}}}],["family",{"_index":2207,"title":{},"body":{"components/FooterComponent.html":{},"components/LogComponent.html":{}}}],["family:'arima",{"_index":3603,"title":{},"body":{"components/NavbarComponent.html":{}}}],["far",{"_index":1093,"title":{},"body":{"classes/CodeArea.html":{}}}],["farther",{"_index":1855,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["fastackitemsizedirective",{"_index":3521,"title":{},"body":{"classes/Mission.html":{}}}],["faster",{"_index":2208,"title":{},"body":{"components/FooterComponent.html":{}}}],["features",{"_index":4931,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":4433,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["fewer",{"_index":1131,"title":{},"body":{"classes/CodeArea.html":{}}}],["ff00ff",{"_index":1282,"title":{},"body":{"components/ColorEditor.html":{}}}],["fff300",{"_index":1259,"title":{},"body":{"components/ColorEditor.html":{}}}],["ffffff",{"_index":2773,"title":{},"body":{"components/IconComponent.html":{}}}],["field",{"_index":260,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"injectables/MarkerService.html":{},"modules/MaterialModule.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"components/X404Component.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["field.form",{"_index":1367,"title":{},"body":{"components/ColorEditor.html":{}}}],["fieldreport",{"_index":1633,"title":{},"body":{"injectables/FieldReportService.html":{},"classes/OpPeriod.html":{},"injectables/SettingsService.html":{}}}],["fieldreport.address",{"_index":1689,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["fieldreport.callsign",{"_index":1687,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["fieldreport.date",{"_index":1692,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["fieldreport.id",{"_index":1634,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["fieldreport.lat",{"_index":1690,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["fieldreport.lng",{"_index":1691,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["fieldreport.note",{"_index":1694,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["fieldreport.status",{"_index":1693,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["fieldreport.team",{"_index":1688,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["fieldreports",{"_index":1523,"title":{},"body":{"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"classes/OpPeriod.html":{},"pipes/myUnusedPipe.html":{}}}],["fieldreportscomponent",{"_index":259,"title":{"components/FieldReportsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"coverage.html":{},"pipes/myUnusedPipe.html":{},"overview.html":{}}}],["fieldreportservice",{"_index":652,"title":{"injectables/FieldReportService.html":{}},"body":{"modules/AppModule.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"coverage.html":{},"pipes/myUnusedPipe.html":{},"overview.html":{}}}],["fieldreportsexport.${dt.getfullyear",{"_index":2119,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["fieldreportsource",{"_index":664,"title":{},"body":{"modules/AppModule.html":{},"injectables/FieldReportService.html":{},"miscellaneous/enumerations.html":{}}}],["fieldreportssubject",{"_index":1524,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["fieldreportstatuses",{"_index":1525,"title":{},"body":{"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/SettingsService.html":{},"pipes/myUnusedPipe.html":{}}}],["fieldreportstatustype",{"_index":665,"title":{},"body":{"modules/AppModule.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/SettingsService.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/typealiases.html":{}}}],["fieldreporttype",{"_index":666,"title":{},"body":{"modules/AppModule.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/typealiases.html":{}}}],["fields",{"_index":2133,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/GoogleGeocode.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"components/LazyComponent.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"modules/MaterialModule.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"classes/StreetAddress.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"changelog.html":{},"coverage.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["filename",{"_index":1907,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"pipes/myUnusedPipe.html":{}}}],["filereader",{"_index":4043,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["files",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"index.html":{},"license.html":{}}}],["fill",{"_index":475,"title":{},"body":{"components/AlertsComponent.html":{},"components/IconComponent.html":{}}}],["fillcolor",{"_index":1823,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["fillopacity",{"_index":1825,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["filter",{"_index":229,"title":{},"body":{"components/AboutComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"pipes/myUnusedPipe.html":{}}}],["filter((evt",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["filter((key",{"_index":532,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["filter(result",{"_index":616,"title":{},"body":{"components/AppComponent.html":{}}}],["filtered",{"_index":1765,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["filteredrangers",{"_index":2454,"title":{},"body":{"components/IconComponent.html":{}}}],["filteredreports:fieldreporttype",{"_index":2086,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["filterfieldreportsbydate",{"_index":1533,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["filterfieldreportsbydate(beg",{"_index":1559,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["filtering",{"_index":632,"title":{},"body":{"components/AppComponent.html":{},"components/FieldReportsComponent.html":{}}}],["filterlocaldateatmidnight",{"_index":1734,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["filterlocaldateatmidnight.gettime",{"_index":1732,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["filterlocations(filters",{"_index":1741,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["filters",{"_index":1780,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["filters!=null",{"_index":1779,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["filters.basetime.length!=0",{"_index":1803,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["filters.callsign.length!=0",{"_index":1789,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["filters.minutes!=0",{"_index":1802,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["filters.minutes*60000.0",{"_index":1806,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["filters.team.length!=0",{"_index":1784,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["filtervalue",{"_index":2554,"title":{},"body":{"components/IconComponent.html":{}}}],["final",{"_index":1012,"title":{},"body":{"classes/CodeArea.html":{},"injectables/ThreeWordsService.html":{}}}],["final_lat_precision_",{"_index":991,"title":{},"body":{"classes/CodeArea.html":{}}}],["final_lng_precision_",{"_index":993,"title":{},"body":{"classes/CodeArea.html":{}}}],["finally",{"_index":4860,"title":{},"body":{"classes/csvImport.html":{}}}],["find",{"_index":356,"title":{},"body":{"components/AlertsComponent.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"classes/csvImport.html":{}}}],["findindex",{"_index":1534,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/RangerService.html":{}}}],["findindex(callsign",{"_index":3901,"title":{},"body":{"injectables/RangerService.html":{}}}],["findindex(id",{"_index":1562,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/LocalStorageService.html":{}}}],["finding",{"_index":3275,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["finest",{"_index":990,"title":{},"body":{"classes/CodeArea.html":{}}}],["firebase",{"_index":4899,"title":{},"body":{"dependencies.html":{}}}],["first",{"_index":768,"title":{},"body":{"modules/AppModule.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{},"index.html":{}}}],["first.callsign",{"_index":4071,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["firstlngvalue",{"_index":1036,"title":{},"body":{"classes/CodeArea.html":{}}}],["firstname",{"_index":2796,"title":{},"body":{"components/IconComponent.html":{},"injectables/LocalStorageService.html":{}}}],["firstsheetname",{"_index":4811,"title":{},"body":{"classes/csvImport.html":{}}}],["fitbounds",{"_index":2701,"title":{},"body":{"components/IconComponent.html":{}}}],["fitness",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["fixed",{"_index":2399,"title":{},"body":{"components/IconComponent.html":{},"miscellaneous/typealiases.html":{}}}],["flags",{"_index":2604,"title":{},"body":{"components/IconComponent.html":{}}}],["flaws",{"_index":4951,"title":{},"body":{"index.html":{}}}],["flex",{"_index":1401,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/NavbarComponent.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["float",{"_index":2175,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/NavbarComponent.html":{}}}],["float:right",{"_index":2205,"title":{},"body":{"components/FooterComponent.html":{}}}],["floating",{"_index":1059,"title":{},"body":{"classes/CodeArea.html":{}}}],["floatingfilter",{"_index":1950,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["floats",{"_index":1071,"title":{},"body":{"classes/CodeArea.html":{}}}],["focus",{"_index":182,"title":{},"body":{"components/AboutComponent.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["focused",{"_index":196,"title":{},"body":{"components/AboutComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["folks",{"_index":3953,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["following",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"components/FieldReportsComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"classes/PlusCode.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"classes/csvImport.html":{},"license.html":{},"pipes/myUnusedPipe.html":{}}}],["follows",{"_index":3159,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["font",{"_index":239,"title":{},"body":{"components/AboutComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/LogComponent.html":{},"components/NavbarComponent.html":{}}}],["fontawesome",{"_index":699,"title":{},"body":{"modules/AppModule.html":{},"classes/Mission.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":697,"title":{},"body":{"modules/AppModule.html":{}}}],["fontfamily",{"_index":2772,"title":{},"body":{"components/IconComponent.html":{}}}],["fontsize",{"_index":2774,"title":{},"body":{"components/IconComponent.html":{}}}],["footer",{"_index":2191,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":263,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["footer.component.html",{"_index":2193,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":2192,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":700,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":262,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"coverage.html":{},"overview.html":{}}}],["force",{"_index":2160,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["forces",{"_index":4189,"title":{},"body":{"injectables/SettingsService.html":{}}}],["form",{"_index":1268,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/NavbarComponent.html":{},"classes/PlusCode.html":{},"injectables/SettingsService.html":{},"pipes/myUnusedPipe.html":{}}}],["form's",{"_index":2782,"title":{},"body":{"components/IconComponent.html":{}}}],["form.field.wrapper",{"_index":1383,"title":{},"body":{"components/ColorEditor.html":{}}}],["formarray",{"_index":670,"title":{},"body":{"modules/AppModule.html":{},"components/ColorEditor.html":{}}}],["format",{"_index":1445,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"classes/Point.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["formatdate",{"_index":1978,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"pipes/myUnusedPipe.html":{}}}],["formatdate(d",{"_index":2028,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["formats",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["formatted",{"_index":2873,"title":{},"body":{"components/IconComponent.html":{}}}],["formatted_address\":\"17205",{"_index":2319,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["formbuilder",{"_index":671,"title":{},"body":{"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["formcontrol",{"_index":1180,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["formcontrol('drew",{"_index":1279,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["formcontrol(dayjs",{"_index":2484,"title":{},"body":{"components/IconComponent.html":{}}}],["formcontrol(new",{"_index":1222,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["formcontrol(null",{"_index":2487,"title":{},"body":{"components/IconComponent.html":{}}}],["formcontrol({value",{"_index":1277,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["formcontrolname=\"addressctrl",{"_index":2453,"title":{},"body":{"components/IconComponent.html":{}}}],["formdata",{"_index":1554,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{}}}],["formgroup",{"_index":672,"title":{},"body":{"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["forms",{"_index":2736,"title":{},"body":{"components/IconComponent.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["forms#!#_reset_",{"_index":2603,"title":{},"body":{"components/IconComponent.html":{}}}],["forms#adding",{"_index":2449,"title":{},"body":{"components/IconComponent.html":{}}}],["forms.mjs:5112",{"_index":1263,"title":{},"body":{"components/ColorEditor.html":{}}}],["formsmodule",{"_index":673,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{}}}],["fortawesome/angular",{"_index":698,"title":{},"body":{"modules/AppModule.html":{},"classes/Mission.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":4880,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":2376,"title":{},"body":{"components/IconComponent.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["found",{"_index":386,"title":{},"body":{"components/AlertsComponent.html":{},"modules/AppRoutingModule.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["fr",{"_index":4596,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["fractions",{"_index":3841,"title":{},"body":{"classes/Point-1.html":{}}}],["france",{"_index":4363,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["free",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"injectables/PostService.html":{},"index.html":{},"license.html":{}}}],["freesans",{"_index":3352,"title":{},"body":{"components/LogComponent.html":{}}}],["fri",{"_index":2020,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["friendly",{"_index":2157,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["fromm",{"_index":3231,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["full",{"_index":812,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/CodeArea.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["fullcode",{"_index":2924,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["fullname",{"_index":1438,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["fullname(name",{"_index":1441,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["function",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"coverage.html":{},"classes/csvImport.html":{},"index.html":{}}}],["functionality",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/FieldReportsComponent.html":{},"injectables/LocalStorageService.html":{},"index.html":{}}}],["functions",{"_index":4495,"title":{"miscellaneous/functions.html":{}},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"miscellaneous/functions.html":{}}}],["functions/values",{"_index":2200,"title":{},"body":{"components/FooterComponent.html":{}}}],["fundamentals",{"_index":3122,"title":{},"body":{"modules/LazyModule.html":{}}}],["furnished",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["further",{"_index":4632,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"index.html":{}}}],["future",{"_index":2090,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/NavbarComponent.html":{},"injectables/SettingsService.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["futuree",{"_index":392,"title":{},"body":{"components/AlertsComponent.html":{}}}],["g",{"_index":1145,"title":{},"body":{"components/ColorEditor.html":{},"classes/csvImport.html":{}}}],["g:number",{"_index":1234,"title":{},"body":{"components/ColorEditor.html":{}}}],["garbage",{"_index":4190,"title":{},"body":{"injectables/SettingsService.html":{}}}],["general",{"_index":3087,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["generated",{"_index":2068,"title":{},"body":{"components/FieldReportsComponent.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["generatefakedata",{"_index":1535,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["generatefakedata(num",{"_index":1564,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["generatefakefieldreports",{"_index":1885,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["generatefakefieldreports(num",{"_index":1902,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["generatefakemarkerdata",{"_index":3380,"title":{},"body":{"injectables/MarkerService.html":{}}}],["generatefakemarkerdata(markers",{"_index":3386,"title":{},"body":{"injectables/MarkerService.html":{}}}],["generatefakemarkerdata(markers:markertype",{"_index":3420,"title":{},"body":{"injectables/MarkerService.html":{}}}],["generic",{"_index":4658,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["geocode",{"_index":2243,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"index.html":{}}}],["geocode.ts",{"_index":2215,"title":{},"body":{"classes/GoogleGeocode.html":{},"coverage.html":{}}}],["geocode.ts:118",{"_index":2225,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["geocode.ts:13",{"_index":2223,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["geocode.ts:44",{"_index":2228,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["geocode.ts:49",{"_index":2293,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["geocode.ts:62",{"_index":2299,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["geocode.ts:9",{"_index":2220,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["geocoder",{"_index":2216,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{}}}],["geocoder.isvalidaddress",{"_index":2295,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["geocoder_geocode",{"_index":2340,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["geocodercomponentrestrictions",{"_index":2255,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["geocoderrequest",{"_index":2250,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["geocoderresult",{"_index":2998,"title":{},"body":{"components/IconComponent.html":{}}}],["geocoding",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"index.html":{}}}],["geocoding#geocoding",{"_index":2258,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["geocoding#statuscodes",{"_index":2270,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["geocodin…dpgrn2ilu2p4ii4h1ww27dx6pvychvs4&token=57451:1:28",{"_index":2347,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["geographic",{"_index":4627,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["geometry",{"_index":2323,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["get(index",{"_index":3168,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["get3words",{"_index":4370,"title":{},"body":{"injectables/ThreeWordsService.html":{}}}],["get3wordsfromlatlong",{"_index":4414,"title":{},"body":{"classes/What3Words.html":{}}}],["get3wordsfromlatlong(lat",{"_index":4439,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["getactiverangers",{"_index":2519,"title":{},"body":{"components/IconComponent.html":{}}}],["getaddressfromlatlng",{"_index":2217,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["getaddressfromlatlng(latlng",{"_index":2222,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["getage",{"_index":3769,"title":{},"body":{"classes/Point.html":{}}}],["getallmarkers",{"_index":1864,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["getboundfrombounds",{"_index":1536,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["getboundfrombounds(bounds",{"_index":1567,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["getcode",{"_index":892,"title":{},"body":{"classes/CodeArea.html":{}}}],["getdata",{"_index":3860,"title":{},"body":{"injectables/PostService.html":{}}}],["getfaketeams",{"_index":4249,"title":{},"body":{"injectables/TeamService.html":{}}}],["getfaketeams(array",{"_index":4254,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["getfieldreport",{"_index":1537,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["getfieldreport(id",{"_index":1571,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["getfieldreportbound",{"_index":1538,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["getfieldreportbounds",{"_index":1539,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["getfieldreports",{"_index":1540,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["getfieldreportstatuses",{"_index":4111,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getfullname",{"_index":3773,"title":{},"body":{"classes/Point.html":{}}}],["getgrid",{"_index":4415,"title":{},"body":{"classes/What3Words.html":{}}}],["getgrid(southwest",{"_index":4442,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["getitem",{"_index":3197,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getlatitudeheight",{"_index":861,"title":{},"body":{"classes/CodeArea.html":{}}}],["getlatlngandaddressfromplaceid",{"_index":2218,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["getlatlngandaddressfromplaceid(placeid",{"_index":2224,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["getlatlongfrom3words",{"_index":4416,"title":{},"body":{"classes/What3Words.html":{}}}],["getlatlongfrom3words(threewords",{"_index":4446,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["getlongitudewidth",{"_index":862,"title":{},"body":{"classes/CodeArea.html":{}}}],["getnote(id",{"_index":3187,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getparams",{"_index":1886,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["getpoint",{"_index":1505,"title":{},"body":{"classes/Coordinate.html":{}}}],["getranger",{"_index":3881,"title":{},"body":{"injectables/RangerService.html":{}}}],["getranger(callsign",{"_index":3903,"title":{},"body":{"injectables/RangerService.html":{}}}],["getrangers",{"_index":3882,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["getrowheight",{"_index":1964,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["gets",{"_index":585,"title":{},"body":{"components/AppComponent.html":{},"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"classes/csvImport.html":{}}}],["getshapeshapes",{"_index":4235,"title":{},"body":{"injectables/ShapeService.html":{}}}],["getshapeshapes(file",{"_index":4237,"title":{},"body":{"injectables/ShapeService.html":{}}}],["getshapeshapes(file:string",{"_index":4240,"title":{},"body":{"injectables/ShapeService.html":{}}}],["getteams",{"_index":4250,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["getting",{"_index":43,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"components/AboutComponent.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["getvalue",{"_index":1150,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/MoodEditor.html":{}}}],["getvalue(inputselector",{"_index":1908,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["git",{"_index":3608,"title":{},"body":{"components/NavbarComponent.html":{}}}],["github",{"_index":4158,"title":{},"body":{"injectables/SettingsService.html":{}}}],["github.com/eoconline/rangertrak",{"_index":4967,"title":{},"body":{"index.html":{}}}],["gitignore's",{"_index":4137,"title":{},"body":{"injectables/SettingsService.html":{}}}],["give",{"_index":952,"title":{},"body":{"classes/CodeArea.html":{}}}],["given",{"_index":4485,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"index.html":{}}}],["giving",{"_index":2550,"title":{},"body":{"components/IconComponent.html":{}}}],["global",{"_index":2352,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["globalpcode",{"_index":3690,"title":{},"body":{"classes/PlusCode.html":{}}}],["gmap",{"_index":822,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/IconComponent.html":{}}}],["gmap'},{'name",{"_index":265,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["gmap/gmap.component",{"_index":701,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["gmapcomponent",{"_index":264,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"coverage.html":{},"overview.html":{}}}],["go",{"_index":436,"title":{},"body":{"components/AlertsComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["god",{"_index":2649,"title":{},"body":{"components/IconComponent.html":{}}}],["goes",{"_index":2749,"title":{},"body":{"components/IconComponent.html":{}}}],["gold",{"_index":4774,"title":{},"body":{"classes/csvImport.html":{},"miscellaneous/variables.html":{}}}],["good",{"_index":3123,"title":{},"body":{"modules/LazyModule.html":{}}}],["google",{"_index":2292,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"components/NavbarComponent.html":{},"classes/PlusCode.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["google.maps",{"_index":2425,"title":{},"body":{"components/IconComponent.html":{}}}],["google.maps.animation.drop",{"_index":2421,"title":{},"body":{"components/IconComponent.html":{}}}],["google.maps.geocoder",{"_index":2221,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["google.maps.latlng",{"_index":1592,"title":{},"body":{"injectables/FieldReportService.html":{},"classes/GoogleGeocode.html":{}}}],["google.maps.latlng(47.4471",{"_index":2427,"title":{},"body":{"components/IconComponent.html":{}}}],["google.maps.latlng(90",{"_index":1591,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["google.maps.latlng(llat",{"_index":2825,"title":{},"body":{"components/IconComponent.html":{}}}],["google.maps.latlng(parsefloat(latlngstr[0",{"_index":1470,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"classes/Utility.html":{}}}],["google.maps.latlng(settingsservice.settings.deflat",{"_index":2699,"title":{},"body":{"components/IconComponent.html":{}}}],["google.maps.latlngbounds",{"_index":1568,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["google.maps.latlngbounds(new",{"_index":1590,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["google.maps.latlngboundsliteral",{"_index":1570,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["google.maps.latlngliteral",{"_index":2260,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"miscellaneous/variables.html":{}}}],["google.maps.map",{"_index":2413,"title":{},"body":{"components/IconComponent.html":{}}}],["google.maps.mapmouseevent",{"_index":2713,"title":{},"body":{"components/IconComponent.html":{}}}],["google.maps.mapoptions",{"_index":2428,"title":{},"body":{"components/IconComponent.html":{}}}],["google.maps.marker",{"_index":2418,"title":{},"body":{"components/IconComponent.html":{},"miscellaneous/variables.html":{}}}],["googlegeocode",{"_index":2213,"title":{"classes/GoogleGeocode.html":{}},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"coverage.html":{}}}],["googlegeocode.geocoder",{"_index":2242,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["googlemap",{"_index":2234,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["googlemaps/markerclusterer",{"_index":4886,"title":{},"body":{"dependencies.html":{}}}],["googlemapsmodule",{"_index":702,"title":{},"body":{"modules/AppModule.html":{}}}],["grab",{"_index":2492,"title":{},"body":{"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"index.html":{}}}],["grabbed",{"_index":3956,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["grade",{"_index":2766,"title":{},"body":{"components/IconComponent.html":{}}}],["gradient",{"_index":1395,"title":{},"body":{"components/ColorEditor.html":{}}}],["gradient(to",{"_index":213,"title":{},"body":{"components/AboutComponent.html":{}}}],["granted",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["graph",{"_index":4989,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":2171,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["green",{"_index":459,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["greeting",{"_index":4008,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["grey",{"_index":3552,"title":{},"body":{"components/MoodEditor.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["grid",{"_index":387,"title":{},"body":{"components/AlertsComponent.html":{},"modules/AppModule.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"classes/PlusCode.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{},"dependencies.html":{},"pipes/myUnusedPipe.html":{}}}],["grid.com/angular",{"_index":1194,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["grid.com/example",{"_index":3575,"title":{},"body":{"components/MoodRenderer.html":{},"classes/csvImport.html":{}}}],["grid.com/javascript",{"_index":1988,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["grid.com/refresh",{"_index":1983,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["grid/ag",{"_index":1997,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["grid/column",{"_index":1944,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["grid/component",{"_index":1195,"title":{},"body":{"components/ColorEditor.html":{}}}],["grid/csv",{"_index":2098,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["grid/excel",{"_index":4030,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{}}}],["grid/grid",{"_index":2006,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["grid/immutable",{"_index":1989,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["grid/master/grid",{"_index":1998,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["grid/printing",{"_index":4284,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["grid_code_length_",{"_index":974,"title":{},"body":{"classes/CodeArea.html":{}}}],["grid_columns_",{"_index":979,"title":{},"body":{"classes/CodeArea.html":{}}}],["grid_lat_first_place_value_",{"_index":983,"title":{},"body":{"classes/CodeArea.html":{}}}],["grid_lng_first_place_value_",{"_index":986,"title":{},"body":{"classes/CodeArea.html":{}}}],["grid_rows_",{"_index":981,"title":{},"body":{"classes/CodeArea.html":{}}}],["gridapi",{"_index":1872,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["gridcolumnapi",{"_index":1873,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["gridlat",{"_index":1074,"title":{},"body":{"classes/CodeArea.html":{}}}],["gridlng",{"_index":1075,"title":{},"body":{"classes/CodeArea.html":{}}}],["gridoptions",{"_index":1874,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["gridoptions1",{"_index":4729,"title":{},"body":{"coverage.html":{},"classes/csvImport.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":1757,"title":{},"body":{"injectables/FieldReportService.html":{},"classes/PlusCode.html":{}}}],["guard",{"_index":4387,"title":{"guards/UnsavedChangesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":4388,"title":{},"body":{"guards/UnsavedChangesGuard.html":{}}}],["gui",{"_index":1250,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["guidelines",{"_index":3651,"title":{},"body":{"classes/PlusCode.html":{},"changelog.html":{}}}],["h",{"_index":4818,"title":{},"body":{"classes/csvImport.html":{}}}],["h1",{"_index":3355,"title":{},"body":{"components/LogComponent.html":{}}}],["hack",{"_index":2944,"title":{},"body":{"components/IconComponent.html":{}}}],["half",{"_index":1088,"title":{},"body":{"classes/CodeArea.html":{},"classes/PlusCode.html":{}}}],["halfresolution",{"_index":1099,"title":{},"body":{"classes/CodeArea.html":{}}}],["ham",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["hamburger",{"_index":3623,"title":{},"body":{"components/NavbarComponent.html":{}}}],["handler",{"_index":4789,"title":{},"body":{"classes/csvImport.html":{}}}],["handlers",{"_index":1958,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["happen",{"_index":4192,"title":{},"body":{"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["happy",{"_index":3533,"title":{},"body":{"components/MoodEditor.html":{},"components/MoodRenderer.html":{}}}],["happy.png",{"_index":3577,"title":{},"body":{"components/MoodRenderer.html":{}}}],["hardcoded",{"_index":3952,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{}}}],["has(index",{"_index":3172,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["has(key",{"_index":3293,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["hasn't",{"_index":2274,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["having",{"_index":1130,"title":{},"body":{"classes/CodeArea.html":{},"injectables/FieldReportService.html":{}}}],["header",{"_index":4059,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["headername",{"_index":1922,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["headers",{"_index":1673,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{}}}],["headertooltip",{"_index":1923,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["heading",{"_index":2145,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{}}}],["hear",{"_index":4098,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["height",{"_index":207,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/LogComponent.html":{},"components/NavbarComponent.html":{},"classes/PlusCode.html":{}}}],["height:30px",{"_index":2186,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["hello",{"_index":1985,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/LocalStorageService.html":{},"pipes/myUnusedPipe.html":{}}}],["help",{"_index":4984,"title":{},"body":{"index.html":{}}}],["helper",{"_index":4494,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["helpers",{"_index":3004,"title":{},"body":{"components/IconComponent.html":{}}}],["helvetica",{"_index":3351,"title":{},"body":{"components/LogComponent.html":{}}}],["henri",{"_index":3153,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["here",{"_index":441,"title":{},"body":{"components/AlertsComponent.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"classes/OpPeriod.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["hereby",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["hex",{"_index":1334,"title":{},"body":{"components/ColorEditor.html":{}}}],["hh:mm:ss",{"_index":2031,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["hhttps://github.com/h2qutc/angular",{"_index":2495,"title":{},"body":{"components/IconComponent.html":{}}}],["hidden",{"_index":3007,"title":{},"body":{"components/IconComponent.html":{},"components/NavbarComponent.html":{}}}],["hide",{"_index":3019,"title":{},"body":{"components/IconComponent.html":{}}}],["hideevents",{"_index":3025,"title":{},"body":{"components/IconComponent.html":{}}}],["hideevents.foreach((event",{"_index":3031,"title":{},"body":{"components/IconComponent.html":{}}}],["hidetime",{"_index":2482,"title":{},"body":{"components/IconComponent.html":{}}}],["highway",{"_index":2306,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["hint",{"_index":3037,"title":{},"body":{"components/IconComponent.html":{}}}],["hipaa",{"_index":4104,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["holders",{"_index":161,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["home",{"_index":3588,"title":{},"body":{"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["home.page.html",{"_index":3329,"title":{},"body":{"components/LogComponent.html":{}}}],["home.page.scss",{"_index":3330,"title":{},"body":{"components/LogComponent.html":{}}}],["homescreen",{"_index":4964,"title":{},"body":{"index.html":{}}}],["hook",{"_index":1252,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["hooks#cleaning",{"_index":1257,"title":{},"body":{"components/ColorEditor.html":{}}}],["host",{"_index":4422,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["hours",{"_index":2053,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["hours}:${minutes}:${seconds",{"_index":2054,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["hovering",{"_index":2150,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["hovers",{"_index":1863,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["hownow",{"_index":1348,"title":{},"body":{"components/ColorEditor.html":{}}}],["hr",{"_index":2474,"title":{},"body":{"components/IconComponent.html":{}}}],["hr.box",{"_index":1413,"title":{},"body":{"components/ColorEditor.html":{}}}],["hr.gradient",{"_index":1392,"title":{},"body":{"components/ColorEditor.html":{}}}],["hr.symbol",{"_index":1399,"title":{},"body":{"components/ColorEditor.html":{}}}],["hr.symbol::before",{"_index":1404,"title":{},"body":{"components/ColorEditor.html":{}}}],["hradílek",{"_index":4856,"title":{},"body":{"classes/csvImport.html":{}}}],["hrs:min:sec",{"_index":1933,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["html",{"_index":242,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{}}}],["htmlanchorelement",{"_index":3058,"title":{},"body":{"components/IconComponent.html":{}}}],["htmlbuttonelement",{"_index":2458,"title":{},"body":{"components/IconComponent.html":{}}}],["htmlelement",{"_index":334,"title":{},"body":{"components/AlertsComponent.html":{},"components/IconComponent.html":{}}}],["htmlelementid",{"_index":1899,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["htmlhtmlelement",{"_index":2460,"title":{},"body":{"components/IconComponent.html":{}}}],["htmlinputelement",{"_index":2856,"title":{},"body":{"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["htmlinputelement).value",{"_index":2637,"title":{},"body":{"components/IconComponent.html":{}}}],["htmllabelelement",{"_index":2832,"title":{},"body":{"components/IconComponent.html":{}}}],["htmllabelelement).innerhtml",{"_index":2940,"title":{},"body":{"components/IconComponent.html":{}}}],["htmllabelelement).innertext",{"_index":2952,"title":{},"body":{"components/IconComponent.html":{}}}],["htmlselectelement",{"_index":2100,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["http",{"_index":1875,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/MarkerService.html":{},"injectables/PostService.html":{},"injectables/ShapeService.html":{},"pipes/myUnusedPipe.html":{}}}],["http://eoc.online",{"_index":2201,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["http://gis.stackexchange.com/questions/31951/ddg#95795",{"_index":1860,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["http://localhost:4000/products",{"_index":1601,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["http://localhost:4000/products/add",{"_index":1669,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["http://localhost:4200",{"_index":4972,"title":{},"body":{"index.html":{}}}],["http://sheetjs.com",{"_index":3942,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["httpclient",{"_index":1550,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/MarkerService.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["httpclientmodule",{"_index":704,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1672,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["httpheaders",{"_index":1674,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["httprequest",{"_index":4790,"title":{},"body":{"classes/csvImport.html":{}}}],["httprequest.onerror",{"_index":4796,"title":{},"body":{"classes/csvImport.html":{}}}],["httprequest.onload",{"_index":4794,"title":{},"body":{"classes/csvImport.html":{}}}],["httprequest.open(\"get",{"_index":4791,"title":{},"body":{"classes/csvImport.html":{}}}],["httprequest.open(method",{"_index":4793,"title":{},"body":{"classes/csvImport.html":{}}}],["httprequest.responsetype",{"_index":4792,"title":{},"body":{"classes/csvImport.html":{}}}],["httprequest.send",{"_index":4798,"title":{},"body":{"classes/csvImport.html":{}}}],["https://ag",{"_index":1943,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["https://angular.io/api/common/asyncpipe",{"_index":2785,"title":{},"body":{"components/IconComponent.html":{}}}],["https://angular.io/api/forms",{"_index":2789,"title":{},"body":{"components/IconComponent.html":{}}}],["https://angular.io/api/forms/abstractcontrol",{"_index":2787,"title":{},"body":{"components/IconComponent.html":{}}}],["https://angular.io/api/forms/ngcontrolstatus",{"_index":2788,"title":{},"body":{"components/IconComponent.html":{}}}],["https://angular.io/api/router/resolve",{"_index":2569,"title":{},"body":{"components/IconComponent.html":{}}}],["https://angular.io/api/service",{"_index":563,"title":{},"body":{"components/AppComponent.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":750,"title":{},"body":{"modules/AppModule.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["https://angular.io/guide/form",{"_index":2733,"title":{},"body":{"components/IconComponent.html":{}}}],["https://angular.io/guide/lifecycle",{"_index":1256,"title":{},"body":{"components/ColorEditor.html":{}}}],["https://angular.io/guide/reactive",{"_index":2448,"title":{},"body":{"components/IconComponent.html":{}}}],["https://angular.io/guide/router",{"_index":806,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["https://api.jquery.com/jquery.grep",{"_index":1778,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["https://api.what3words.com",{"_index":4423,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["https://api.what3words.com/v3/autosuggest?key",{"_index":4428,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["https://api.what3words.com/v3/autosuggest?key=0m5i8upf&input=index.home.r&n",{"_index":2966,"title":{},"body":{"components/IconComponent.html":{}}}],["https://appdividend.com/2019/06/04/angular",{"_index":1642,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["https://askinglot.com/what",{"_index":2729,"title":{},"body":{"components/IconComponent.html":{}}}],["https://blog.ag",{"_index":1982,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["https://blog.angular",{"_index":2407,"title":{},"body":{"components/IconComponent.html":{}}}],["https://blog.briebug.com/blog/managing",{"_index":3262,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["https://bobrov.dev/angular",{"_index":3033,"title":{},"body":{"components/IconComponent.html":{}}}],["https://bobrov.dev/blog/angular",{"_index":4691,"title":{},"body":{"components/X404Component.html":{}}}],["https://css",{"_index":2643,"title":{},"body":{"components/IconComponent.html":{}}}],["https://day.js.org/docs/en",{"_index":2368,"title":{},"body":{"components/IconComponent.html":{}}}],["https://dev.to/nazanin_ashrafi/how",{"_index":225,"title":{},"body":{"components/AboutComponent.html":{}}}],["https://dev.to/przpiw/react",{"_index":4472,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["https://developer.mozilla.org/en",{"_index":233,"title":{},"body":{"components/AboutComponent.html":{},"classes/GoogleGeocode.html":{},"injectables/SettingsService.html":{}}}],["https://developer.what3words.com/tutorial/combining",{"_index":2818,"title":{},"body":{"components/IconComponent.html":{}}}],["https://developer.what3words.com/tutorial/detecting",{"_index":2727,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["https://developer.what3words.com/tutorial/displaying",{"_index":2820,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["https://developer.what3words.com/tutorial/hiding",{"_index":4156,"title":{},"body":{"injectables/SettingsService.html":{}}}],["https://developer.what3words.com/tutorial/javascript",{"_index":2726,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["https://developer.what3words.com/tutorial/ux",{"_index":3650,"title":{},"body":{"classes/PlusCode.html":{}}}],["https://developers",{"_index":2237,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["https://developers.google.com/maps/documentation/geocoding/overview",{"_index":2235,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["https://developers.google.com/maps/documentation/geocoding/requests",{"_index":2257,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{}}}],["https://developers.google.com/maps/documentation/geocoding/start",{"_index":2236,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["https://developers.google.com/maps/documentation/javascript/geocoding#geocodingrequests",{"_index":2249,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["https://developers.google.com/maps/documentation/javascript/geocoding#geocodingresults",{"_index":2334,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["https://developers.google.com/maps/documentation/javascript/overview#html5",{"_index":637,"title":{},"body":{"components/AppComponent.html":{}}}],["https://developers.google.com/maps/documentation/javascript/places",{"_index":2725,"title":{},"body":{"components/IconComponent.html":{}}}],["https://developers.google.com/maps/documentation/javascript/reference/coordinates?hl=en#latlngbounds",{"_index":1615,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["https://docs.iconify.design/icons/all.html",{"_index":2383,"title":{},"body":{"components/IconComponent.html":{}}}],["https://docs.iconify.design/icons/icons.html",{"_index":2385,"title":{},"body":{"components/IconComponent.html":{}}}],["https://en.wikipedia.org/wiki/open_location_code#other_geocode_systems",{"_index":4930,"title":{},"body":{"index.html":{}}}],["https://findanyanswer.com/what",{"_index":2732,"title":{},"body":{"components/IconComponent.html":{}}}],["https://fonts.google.com/icons",{"_index":2503,"title":{},"body":{"components/IconComponent.html":{}}}],["https://gist.github.com/paulirish/5d52fb081b3570c81e3a",{"_index":2656,"title":{},"body":{"components/IconComponent.html":{}}}],["https://github.com/angular/angular",{"_index":4475,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["https://github.com/angular/components/issues/5648",{"_index":2464,"title":{},"body":{"components/IconComponent.html":{}}}],["https://github.com/cyrilletuzi/angular",{"_index":3145,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["https://github.com/dayjs/luxon",{"_index":2369,"title":{},"body":{"components/IconComponent.html":{}}}],["https://github.com/eoconline/rangertrak",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{}}}],["https://github.com/eventemitter2/eventemitter2",{"_index":4956,"title":{},"body":{"index.html":{}}}],["https://github.com/google/open",{"_index":3653,"title":{},"body":{"classes/PlusCode.html":{}}}],["https://github.com/gsklee/ngstorage",{"_index":3265,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["https://github.com/gultyaev/angular",{"_index":3036,"title":{},"body":{"components/IconComponent.html":{}}}],["https://github.com/packtpublishing/angular",{"_index":611,"title":{},"body":{"components/AppComponent.html":{}}}],["https://github.com/sheetjs/sheetjs.github.io",{"_index":3943,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["https://github.com/sheetjs/sheetjs/tree/master/demos/angular2",{"_index":4032,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["https://github.com/tspoke/typescript",{"_index":3714,"title":{},"body":{"classes/PlusCode.html":{}}}],["https://github.com/what3words/w3w",{"_index":4455,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["https://h2qutc.github.io/angular",{"_index":1611,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["https://jasonwatmore.com/post/2020/07/16/angular",{"_index":442,"title":{},"body":{"components/AlertsComponent.html":{}}}],["https://jsonplaceholder.typicode.com",{"_index":3867,"title":{},"body":{"injectables/PostService.html":{}}}],["https://jsperf.com/array",{"_index":1767,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["https://malcoded.com/posts/angular",{"_index":3121,"title":{},"body":{"modules/LazyModule.html":{}}}],["https://material.angular.io/components/autocomplete/examples#autocomplete",{"_index":2531,"title":{},"body":{"components/IconComponent.html":{}}}],["https://material.angular.io/components/badge",{"_index":2393,"title":{},"body":{"components/IconComponent.html":{}}}],["https://material.angular.io/components/icon",{"_index":2504,"title":{},"body":{"components/IconComponent.html":{}}}],["https://material.angular.io/components/icon/examples",{"_index":2389,"title":{},"body":{"components/IconComponent.html":{}}}],["https://material.angular.io/components/snack",{"_index":446,"title":{},"body":{"components/AlertsComponent.html":{}}}],["https://material.io/components/banners#usage",{"_index":359,"title":{},"body":{"components/AlertsComponent.html":{}}}],["https://material.io/components/buttons/web#api",{"_index":465,"title":{},"body":{"components/AlertsComponent.html":{}}}],["https://ng",{"_index":2465,"title":{},"body":{"components/IconComponent.html":{}}}],["https://nikitahl.com/horizontal",{"_index":1390,"title":{},"body":{"components/ColorEditor.html":{}}}],["https://opensource.org/licenses/mit",{"_index":175,"title":{},"body":{"components/AboutComponent.html":{}}}],["https://oss.sheetjs.com/sheetjs",{"_index":4767,"title":{},"body":{"classes/csvImport.html":{}}}],["https://plus.codes/developers",{"_index":3652,"title":{},"body":{"classes/PlusCode.html":{}}}],["https://popper.js.org",{"_index":3011,"title":{},"body":{"components/IconComponent.html":{}}}],["https://popper.js.org/docs/v2",{"_index":3012,"title":{},"body":{"components/IconComponent.html":{}}}],["https://popper.js.org/docs/v2/constructors",{"_index":2395,"title":{},"body":{"components/IconComponent.html":{}}}],["https://popper.js.org/docs/v2/tutorial",{"_index":3010,"title":{},"body":{"components/IconComponent.html":{}}}],["https://qansoft.wordpress.com/2021/05/27/reactive",{"_index":2735,"title":{},"body":{"components/IconComponent.html":{}}}],["https://rapidapi.com/guides/css",{"_index":235,"title":{},"body":{"components/AboutComponent.html":{}}}],["https://raw.githubusercontent.com/ag",{"_index":1996,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["https://rxjs.dev/deprecations/subscribe",{"_index":4326,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["https://scotch.io/tutorials/mvc",{"_index":3174,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["https://sergeygultyayev.medium.com/use",{"_index":3034,"title":{},"body":{"components/IconComponent.html":{}}}],["https://stackblitz.com/edit/ag",{"_index":1984,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["https://stackblitz.com/edit/local",{"_index":3263,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["https://stackblitz.com/edit/pputo1",{"_index":1205,"title":{},"body":{"components/ColorEditor.html":{}}}],["https://stackoverflow.com/a/54048660",{"_index":2605,"title":{},"body":{"components/IconComponent.html":{}}}],["https://stackoverflow.com/questions/10557486",{"_index":1777,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["https://stackoverflow.com/questions/35655361/angular2",{"_index":2571,"title":{},"body":{"components/IconComponent.html":{}}}],["https://stackoverflow.com/questions/6268508/restart",{"_index":2651,"title":{},"body":{"components/IconComponent.html":{}}}],["https://unpkg.com/leaflet/dist/images/marker",{"_index":5017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://v5.material.angular.io/components/snack",{"_index":400,"title":{},"body":{"components/AlertsComponent.html":{}}}],["https://vlio20.github.io/angular",{"_index":2468,"title":{},"body":{"components/IconComponent.html":{}}}],["https://wicg.github.io/kv",{"_index":3266,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["https://wireless2.fcc.gov/ulsapp/ulssearch/searchamateur.jsp",{"_index":4079,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["https://www.ag",{"_index":1193,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/MoodRenderer.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["https://www.c",{"_index":2541,"title":{},"body":{"components/IconComponent.html":{}}}],["https://www.danvega.dev/blog/2017/06/07/angular",{"_index":2790,"title":{},"body":{"components/IconComponent.html":{}}}],["https://www.digitalocean.com/community/tutorials/angular",{"_index":4239,"title":{},"body":{"injectables/ShapeService.html":{}}}],["https://www.doppler.com",{"_index":4161,"title":{},"body":{"injectables/SettingsService.html":{}}}],["https://www.npmjs.com/package/@matheo/datepicker",{"_index":2365,"title":{},"body":{"components/IconComponent.html":{}}}],["https://www.npmjs.com/package/standard",{"_index":4180,"title":{},"body":{"injectables/SettingsService.html":{}}}],["https://www.rangertrak.org",{"_index":4961,"title":{},"body":{"index.html":{}}}],["https://www.rapidtables.com/convert/number/degrees",{"_index":3816,"title":{},"body":{"classes/Point-1.html":{}}}],["https://www.sitepoint.com/css3",{"_index":2641,"title":{},"body":{"components/IconComponent.html":{}}}],["https://www.smashingmagazine.com/2013/04/css3",{"_index":2647,"title":{},"body":{"components/IconComponent.html":{}}}],["https://www.tektutorialshub.com/angular/providedin",{"_index":4381,"title":{},"body":{"injectables/ThreeWordsService.html":{}}}],["https://www.tektutorialshub.com/angular/valuechanges",{"_index":2784,"title":{},"body":{"components/IconComponent.html":{}}}],["https://www.tutsmake.com/angular",{"_index":447,"title":{},"body":{"components/AlertsComponent.html":{}}}],["https://www.w3.org/tr/css21/ui.html#propdef",{"_index":2439,"title":{},"body":{"components/IconComponent.html":{}}}],["https://www.w3schools.com/bootstrap4/bootstrap_alerts.asp",{"_index":451,"title":{},"body":{"components/AlertsComponent.html":{}}}],["https://www.w3schools.com/jsref/jsref_obj_date.asp",{"_index":2037,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["hwy",{"_index":2308,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["hybrid",{"_index":2433,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["i+\"]=\"+teamlocations[i].callsign",{"_index":1791,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["i+\"]=\"+teamlocations[i].team",{"_index":1786,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["i.e",{"_index":2422,"title":{},"body":{"components/IconComponent.html":{},"injectables/SettingsService.html":{}}}],["i=0",{"_index":3196,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["icelleditorangularcomp",{"_index":1137,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["icellrendererangularcomp",{"_index":3559,"title":{},"body":{"components/MoodRenderer.html":{}}}],["icellrendererparams",{"_index":3562,"title":{},"body":{"components/MoodRenderer.html":{}}}],["icon",{"_index":453,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["icon'},{'name",{"_index":267,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["icon.png",{"_index":5016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconanchor",{"_index":5009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconcolor",{"_index":4503,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["iconcomponent",{"_index":266,"title":{"components/IconComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"coverage.html":{}}}],["icondefault",{"_index":4721,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["icondir",{"_index":1839,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["iconify/json",{"_index":2382,"title":{},"body":{"components/IconComponent.html":{}}}],["iconregistry",{"_index":2499,"title":{},"body":{"components/IconComponent.html":{}}}],["iconregistry.addsvgicon('thumbs",{"_index":2506,"title":{},"body":{"components/IconComponent.html":{}}}],["iconregistry.addsvgiconliteral('thumbs",{"_index":2508,"title":{},"body":{"components/IconComponent.html":{}}}],["iconretinaurl",{"_index":4722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":1197,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"dependencies.html":{}}}],["iconsize",{"_index":5007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconurl",{"_index":4723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":1214,"title":{},"body":{"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"pipes/myUnusedPipe.html":{}}}],["id2",{"_index":3081,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["idea",{"_index":2392,"title":{},"body":{"components/IconComponent.html":{}}}],["ideally",{"_index":3695,"title":{},"body":{"classes/PlusCode.html":{}}}],["identifier",{"_index":4706,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":3685,"title":{},"body":{"classes/PlusCode.html":{}}}],["identify",{"_index":3689,"title":{},"body":{"classes/PlusCode.html":{}}}],["identifying",{"_index":945,"title":{},"body":{"classes/CodeArea.html":{}}}],["ie",{"_index":3306,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["ignore",{"_index":434,"title":{},"body":{"components/AlertsComponent.html":{}}}],["ignored",{"_index":2511,"title":{},"body":{"components/IconComponent.html":{}}}],["illegal",{"_index":1010,"title":{},"body":{"classes/CodeArea.html":{}}}],["image",{"_index":204,"title":{},"body":{"components/AboutComponent.html":{},"components/ColorEditor.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["imap",{"_index":3095,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["imgformood",{"_index":3560,"title":{},"body":{"components/MoodRenderer.html":{}}}],["immediate",{"_index":2444,"title":{},"body":{"components/IconComponent.html":{}}}],["implement",{"_index":1865,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["implementation",{"_index":889,"title":{},"body":{"classes/CodeArea.html":{}}}],["implemented",{"_index":4780,"title":{},"body":{"classes/csvImport.html":{}}}],["implements",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"guards/UnsavedChangesGuard.html":{},"components/X404Component.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["implied",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["implies",{"_index":4372,"title":{},"body":{"injectables/ThreeWordsService.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ColorEditor.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"components/LazyComponent.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"modules/MaterialModule.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["import('./lazy/lazy.module').then(module",{"_index":829,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import/#example",{"_index":4031,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{}}}],["important",{"_index":206,"title":{},"body":{"components/AboutComponent.html":{},"components/ColorEditor.html":{}}}],["imported",{"_index":3997,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"classes/csvImport.html":{}}}],["importexcel2",{"_index":4752,"title":{},"body":{"classes/csvImport.html":{}}}],["importing",{"_index":2155,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["imports",{"_index":662,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/IconComponent.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{}}}],["improve",{"_index":4631,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["improved",{"_index":4952,"title":{},"body":{"index.html":{}}}],["improves",{"_index":4630,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["include",{"_index":474,"title":{},"body":{"components/AlertsComponent.html":{},"classes/CodeArea.html":{}}}],["included",{"_index":144,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["includes",{"_index":1049,"title":{},"body":{"classes/CodeArea.html":{}}}],["including",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"license.html":{}}}],["incorrectly",{"_index":4611,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"components/LazyComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"classes/csvImport.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.js:553",{"_index":3933,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["indicates",{"_index":1035,"title":{},"body":{"classes/CodeArea.html":{}}}],["individuals",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["infinity",{"_index":1754,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"components/LazyComponent.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"modules/MaterialModule.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"classes/StreetAddress.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["information",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"components/FieldReportsComponent.html":{},"components/LogComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"index.html":{}}}],["initial",{"_index":1107,"title":{},"body":{"classes/CodeArea.html":{}}}],["initial_value",{"_index":4515,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["initialise",{"_index":1069,"title":{},"body":{"classes/CodeArea.html":{}}}],["initialize",{"_index":2685,"title":{},"body":{"components/IconComponent.html":{}}}],["initialized",{"_index":2945,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{},"injectables/SettingsService.html":{}}}],["initiate",{"_index":3951,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["initmap",{"_index":3107,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["initmap():void",{"_index":3097,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["initshapeslayer",{"_index":4720,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["inject(document",{"_index":348,"title":{},"body":{"components/AlertsComponent.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["injectable",{"_index":783,"title":{"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"injectables/LocalStorageService.html":{},"injectables/MarkerService.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"injectables/ThreeWordsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"coverage.html":{},"classes/csvImport.html":{}}}],["injectable({providedin",{"_index":3403,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/PopupService.html":{},"injectables/ShapeService.html":{}}}],["injectables",{"_index":781,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"injectables/LocalStorageService.html":{},"injectables/MarkerService.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"injectables/ThreeWordsService.html":{},"overview.html":{}}}],["injection",{"_index":786,"title":{},"body":{"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{}}}],["injector",{"_index":4374,"title":{},"body":{"injectables/ThreeWordsService.html":{}}}],["inline",{"_index":201,"title":{},"body":{"components/AboutComponent.html":{},"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["innertext",{"_index":2857,"title":{},"body":{"components/IconComponent.html":{}}}],["input",{"_index":1188,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{},"components/NavbarComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{}}}],["input('path",{"_index":2403,"title":{},"body":{"components/IconComponent.html":{}}}],["input=index.home.r&n",{"_index":4430,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["inputs",{"_index":1159,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["inputselector",{"_index":1910,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["inputtype",{"_index":4682,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["inside",{"_index":776,"title":{},"body":{"modules/AppModule.html":{}}}],["install",{"_index":602,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["install/download",{"_index":4962,"title":{},"body":{"index.html":{}}}],["instance",{"_index":784,"title":{},"body":{"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/IconComponent.html":{},"injectables/ThreeWordsService.html":{}}}],["instanceof",{"_index":2079,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["instantiate",{"_index":4491,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["instead",{"_index":629,"title":{},"body":{"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"components/MoodEditor.html":{},"classes/PlusCode.html":{},"injectables/SettingsService.html":{},"pipes/myUnusedPipe.html":{}}}],["integ",{"_index":333,"title":{},"body":{"components/AlertsComponent.html":{},"classes/Utility.html":{}}}],["integ.tostring",{"_index":431,"title":{},"body":{"components/AlertsComponent.html":{},"classes/Utility.html":{}}}],["integer",{"_index":1055,"title":{},"body":{"classes/CodeArea.html":{}}}],["integers",{"_index":1070,"title":{},"body":{"classes/CodeArea.html":{}}}],["interaction",{"_index":178,"title":{},"body":{"components/AboutComponent.html":{},"components/IconComponent.html":{}}}],["interface",{"_index":1219,"title":{"interfaces/LayerType.html":{},"interfaces/RangerType.html":{},"interfaces/TeamType.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}},"body":{"components/ColorEditor.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"coverage.html":{}}}],["interface/#grid",{"_index":2007,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["interfaces",{"_index":3078,"title":{},"body":{"interfaces/LayerType.html":{},"interfaces/RangerType.html":{},"interfaces/TeamType.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"overview.html":{}}}],["interfer",{"_index":3209,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["internet",{"_index":4927,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":1437,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"pipes/myUnusedPipe.html":{}}}],["invalid_address_error_message",{"_index":4516,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["inverse",{"_index":968,"title":{},"body":{"classes/CodeArea.html":{}}}],["ionic",{"_index":733,"title":{},"body":{"modules/AppModule.html":{},"components/LogComponent.html":{}}}],["ionic/angular",{"_index":737,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicmodule",{"_index":735,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicmodule.forroot",{"_index":771,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":736,"title":{},"body":{"modules/AppModule.html":{}}}],["ireland",{"_index":4364,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["isalerthidden",{"_index":295,"title":{},"body":{"components/AlertsComponent.html":{}}}],["isdevmode",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["isn't",{"_index":1022,"title":{},"body":{"classes/CodeArea.html":{}}}],["isnan(coord",{"_index":1477,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["isnan(d",{"_index":2080,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["isnan(d.gettime",{"_index":2084,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["ispadded",{"_index":901,"title":{},"body":{"classes/CodeArea.html":{}}}],["ispopup",{"_index":1151,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["issues",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"injectables/FieldReportService.html":{},"injectables/LocalStorageService.html":{},"index.html":{}}}],["isvalid(code",{"_index":1005,"title":{},"body":{"classes/CodeArea.html":{}}}],["isvalid(pcode",{"_index":3752,"title":{},"body":{"classes/PlusCode.html":{}}}],["isvalidaddress",{"_index":2219,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["isvalidaddress(addr",{"_index":2227,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["isvaliddate",{"_index":1887,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["isvaliddate(d",{"_index":1911,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["it's",{"_index":1092,"title":{},"body":{"classes/CodeArea.html":{},"injectables/LocalStorageService.html":{}}}],["italic",{"_index":3591,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item",{"_index":184,"title":{},"body":{"components/AboutComponent.html":{},"classes/AngularComponentOrService.html":{},"components/ColorEditor.html":{},"injectables/LocalStorageService.html":{}}}],["item's",{"_index":193,"title":{},"body":{"components/AboutComponent.html":{}}}],["item\\'s",{"_index":247,"title":{},"body":{"components/AboutComponent.html":{}}}],["items",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"classes/AngularComponentOrService.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"index.html":{}}}],["iterate",{"_index":507,"title":{},"body":{"classes/AngularComponentOrService.html":{},"classes/csvImport.html":{}}}],["iterator",{"_index":3000,"title":{},"body":{"components/IconComponent.html":{},"classes/OpPeriod.html":{}}}],["itself",{"_index":1851,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["j",{"_index":4819,"title":{},"body":{"classes/csvImport.html":{}}}],["j9qe28?file=src%2fapp%2flocal",{"_index":3264,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["javascript",{"_index":2642,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["jinjie",{"_index":4832,"title":{},"body":{"classes/csvImport.html":{}}}],["john",{"_index":4520,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["join_inner",{"_index":2768,"title":{},"body":{"components/IconComponent.html":{}}}],["js",{"_index":2819,"title":{},"body":{"components/IconComponent.html":{}}}],["json",{"_index":2844,"title":{},"body":{"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{}}}],["json.parse(formdata",{"_index":1661,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["json.parse(localstorage.getitem('notes",{"_index":3180,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.parse(localstoragefieldreportstatuses",{"_index":4199,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.parse(localstoragerangers",{"_index":3986,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["json.parse(localstoragesettings",{"_index":4173,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.parse(myjson",{"_index":4062,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["json.parse(name",{"_index":3158,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.parse(packageasstring",{"_index":4186,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.parse(rangers",{"_index":3998,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["json.parse(rangerworkaround",{"_index":4006,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["json.parse(secretworkaround",{"_index":4153,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.parse(temp",{"_index":1629,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["json.stringify",{"_index":2538,"title":{},"body":{"components/IconComponent.html":{}}}],["json.stringify(addr",{"_index":2839,"title":{},"body":{"components/IconComponent.html":{}}}],["json.stringify(encoded",{"_index":2266,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["json.stringify(formdata1",{"_index":2676,"title":{},"body":{"components/IconComponent.html":{}}}],["json.stringify(ll",{"_index":2828,"title":{},"body":{"components/IconComponent.html":{}}}],["json.stringify(newsettings",{"_index":4230,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.stringify(newstatuses",{"_index":4232,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.stringify(packagejson",{"_index":4184,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.stringify(payload",{"_index":3150,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(rangers",{"_index":4005,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["json.stringify(res",{"_index":4593,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["json.stringify(response",{"_index":4548,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["json.stringify(result.position",{"_index":2955,"title":{},"body":{"components/IconComponent.html":{}}}],["json.stringify(results",{"_index":2338,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["json.stringify(results[0",{"_index":2279,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["json.stringify(secrets",{"_index":4151,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.stringify(settingsservice.secrets[3",{"_index":4155,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.stringify(this.colorctr.value",{"_index":1323,"title":{},"body":{"components/ColorEditor.html":{}}}],["json.stringify(this.entrydetailsform.value",{"_index":2670,"title":{},"body":{"components/IconComponent.html":{}}}],["json.stringify(this.fieldreports",{"_index":1685,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["json.stringify(this.fieldreportstatuses",{"_index":4207,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.stringify(this.notes",{"_index":3193,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(this.rangers",{"_index":3966,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["json.stringify(this.rangers2",{"_index":3968,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["json.stringify(xlsx.utils.sheet_to_json(ws",{"_index":4058,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["jsonpayload",{"_index":3149,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["jsonpipe",{"_index":3146,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["jsonschema",{"_index":1603,"title":{},"body":{"injectables/FieldReportService.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["justify",{"_index":1402,"title":{},"body":{"components/ColorEditor.html":{},"components/NavbarComponent.html":{}}}],["kaniskina",{"_index":4851,"title":{},"body":{"classes/csvImport.html":{}}}],["karma",{"_index":4975,"title":{},"body":{"index.html":{}}}],["keep",{"_index":530,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["key",{"_index":511,"title":{},"body":{"classes/AngularComponentOrService.html":{},"components/ColorEditor.html":{},"components/MoodEditor.html":{},"injectables/SettingsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["key.startswith('app_",{"_index":533,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["keyboard",{"_index":177,"title":{},"body":{"components/AboutComponent.html":{}}}],["keys",{"_index":509,"title":{},"body":{"classes/AngularComponentOrService.html":{},"injectables/LocalStorageService.html":{},"injectables/SettingsService.html":{}}}],["keywords",{"_index":2687,"title":{},"body":{"components/IconComponent.html":{}}}],["keywordscontrols",{"_index":2688,"title":{},"body":{"components/IconComponent.html":{}}}],["kids",{"_index":4090,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["kind",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/IconComponent.html":{},"license.html":{}}}],["know",{"_index":2131,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["kv",{"_index":3161,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["l",{"_index":3401,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/PopupService.html":{},"injectables/ShapeService.html":{}}}],["l.circle([llat",{"_index":1843,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["l.circlemarker([lat",{"_index":3416,"title":{},"body":{"injectables/MarkerService.html":{}}}],["l.icon",{"_index":5006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.map",{"_index":3390,"title":{},"body":{"injectables/MarkerService.html":{}}}],["l.marker([lat",{"_index":3410,"title":{},"body":{"injectables/MarkerService.html":{}}}],["l.markerclustergroup",{"_index":1760,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["label",{"_index":2763,"title":{},"body":{"components/IconComponent.html":{},"injectables/MarkerService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["labels",{"_index":3378,"title":{},"body":{"injectables/MarkerService.html":{}}}],["land",{"_index":4663,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["lang",{"_index":4440,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["language",{"_index":4517,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["language=en",{"_index":4533,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["larger",{"_index":2164,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["larger/smaller",{"_index":1474,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["last",{"_index":963,"title":{},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"components/IconComponent.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"classes/Point.html":{}}}],["lastname",{"_index":3154,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["lat",{"_index":1454,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/MarkerService.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["lat\")?.onchange",{"_index":2786,"title":{},"body":{"components/IconComponent.html":{}}}],["lat/lng",{"_index":936,"title":{},"body":{"classes/CodeArea.html":{}}}],["lat/long",{"_index":2269,"title":{},"body":{"classes/GoogleGeocode.html":{},"index.html":{}}}],["latd",{"_index":2889,"title":{},"body":{"components/IconComponent.html":{}}}],["latdd",{"_index":2882,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["latdd.tostring",{"_index":2883,"title":{},"body":{"components/IconComponent.html":{}}}],["latdms",{"_index":2899,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["latdms.deg",{"_index":3736,"title":{},"body":{"classes/PlusCode.html":{}}}],["latdms.deg.tostring",{"_index":2904,"title":{},"body":{"components/IconComponent.html":{}}}],["latdms.dir",{"_index":2902,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["latdms.min",{"_index":3738,"title":{},"body":{"classes/PlusCode.html":{}}}],["latdms.min.tostring",{"_index":2906,"title":{},"body":{"components/IconComponent.html":{}}}],["latdms.sec",{"_index":3740,"title":{},"body":{"classes/PlusCode.html":{}}}],["latdms.sec.tostring",{"_index":2908,"title":{},"body":{"components/IconComponent.html":{}}}],["later",{"_index":2516,"title":{},"body":{"components/IconComponent.html":{}}}],["latest",{"_index":577,"title":{},"body":{"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/SettingsService.html":{},"pipes/myUnusedPipe.html":{}}}],["lati",{"_index":2887,"title":{},"body":{"components/IconComponent.html":{}}}],["latittude",{"_index":3062,"title":{},"body":{"components/IconComponent.html":{}}}],["latitude",{"_index":843,"title":{},"body":{"classes/CodeArea.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"index.html":{}}}],["latitude_max",{"_index":870,"title":{},"body":{"classes/CodeArea.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["latitude_max_",{"_index":933,"title":{},"body":{"classes/CodeArea.html":{}}}],["latitudecenter",{"_index":855,"title":{},"body":{"classes/CodeArea.html":{}}}],["latitudeddd",{"_index":2888,"title":{},"body":{"components/IconComponent.html":{}}}],["latitudeddd.value",{"_index":2897,"title":{},"body":{"components/IconComponent.html":{}}}],["latitudeddi",{"_index":2885,"title":{},"body":{"components/IconComponent.html":{}}}],["latitudeddi.value",{"_index":2895,"title":{},"body":{"components/IconComponent.html":{}}}],["latitudehi",{"_index":856,"title":{},"body":{"classes/CodeArea.html":{}}}],["latitudehi:number",{"_index":877,"title":{},"body":{"classes/CodeArea.html":{}}}],["latitudelo",{"_index":857,"title":{},"body":{"classes/CodeArea.html":{}}}],["latitudelo:number",{"_index":875,"title":{},"body":{"classes/CodeArea.html":{}}}],["latitudes",{"_index":1490,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["latlng",{"_index":1605,"title":{},"body":{"injectables/FieldReportService.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{}}}],["latlngbounds",{"_index":2253,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["latlngl",{"_index":2700,"title":{},"body":{"components/IconComponent.html":{}}}],["latlngstr",{"_index":1468,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"classes/Utility.html":{}}}],["layer",{"_index":1759,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["layers",{"_index":3096,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["layertype",{"_index":3077,"title":{"interfaces/LayerType.html":{}},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{},"coverage.html":{}}}],["layout",{"_index":2158,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["lazy",{"_index":825,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LazyComponent.html":{},"modules/LazyModule.html":{},"injectables/ThreeWordsService.html":{}}}],["lazy'},{'name",{"_index":269,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["lazy.component",{"_index":3124,"title":{},"body":{"modules/LazyModule.html":{}}}],["lazy.component.html",{"_index":3111,"title":{},"body":{"components/LazyComponent.html":{}}}],["lazy.component.scss",{"_index":3112,"title":{},"body":{"components/LazyComponent.html":{}}}],["lazy/about/about.component",{"_index":805,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["lazy/lazy.module",{"_index":706,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["lazycomponent",{"_index":268,"title":{"components/LazyComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"modules/LazyModule.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"coverage.html":{},"overview.html":{}}}],["lazymodule",{"_index":650,"title":{"modules/LazyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/LazyModule.html":{},"modules.html":{},"overview.html":{}}}],["lazyroutingmodule",{"_index":3118,"title":{"modules/LazyRoutingModule.html":{}},"body":{"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["leaflet",{"_index":1606,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/MarkerService.html":{},"components/NavbarComponent.html":{},"injectables/PopupService.html":{},"injectables/ShapeService.html":{},"dependencies.html":{}}}],["leaflet.markercluster",{"_index":4902,"title":{},"body":{"dependencies.html":{}}}],["leaflet/esri",{"_index":4948,"title":{},"body":{"index.html":{}}}],["learn",{"_index":1644,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["leave",{"_index":4397,"title":{},"body":{"guards/UnsavedChangesGuard.html":{}}}],["left",{"_index":187,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["legacy",{"_index":1363,"title":{},"body":{"components/ColorEditor.html":{}}}],["legal",{"_index":1023,"title":{},"body":{"classes/CodeArea.html":{}}}],["legend",{"_index":241,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["len",{"_index":1030,"title":{},"body":{"classes/CodeArea.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["length",{"_index":935,"title":{},"body":{"classes/CodeArea.html":{},"injectables/FieldReportService.html":{},"injectables/LocalStorageService.html":{},"classes/PlusCode.html":{}}}],["less",{"_index":898,"title":{},"body":{"classes/CodeArea.html":{}}}],["level",{"_index":458,"title":{},"body":{"components/AlertsComponent.html":{},"components/IconComponent.html":{},"injectables/ThreeWordsService.html":{}}}],["level(0",{"_index":485,"title":{},"body":{"components/AlertsComponent.html":{}}}],["li",{"_index":3606,"title":{},"body":{"components/NavbarComponent.html":{}}}],["liability",{"_index":165,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["liable",{"_index":162,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["lib",{"_index":3292,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["library",{"_index":3699,"title":{},"body":{"classes/PlusCode.html":{}}}],["license",{"_index":108,"title":{"license.html":{}},"body":{"components/AboutComponent.html":{},"index.html":{},"license.html":{}}}],["licensee",{"_index":3928,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["licensekey",{"_index":3929,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["lightgreen",{"_index":3557,"title":{},"body":{"components/MoodEditor.html":{}}}],["lighthouse",{"_index":470,"title":{},"body":{"components/AlertsComponent.html":{}}}],["lightweight",{"_index":3088,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["limit",{"_index":4626,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["limitation",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/IconComponent.html":{},"license.html":{}}}],["limited",{"_index":152,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["line",{"_index":2094,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["linear",{"_index":212,"title":{},"body":{"components/AboutComponent.html":{},"components/ColorEditor.html":{}}}],["link",{"_index":894,"title":{},"body":{"classes/CodeArea.html":{},"injectables/LocalStorageService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["links",{"_index":3628,"title":{},"body":{"components/NavbarComponent.html":{}}}],["list",{"_index":2611,"title":{},"body":{"components/IconComponent.html":{},"modules/MaterialModule.html":{},"components/NavbarComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"index.html":{}}}],["listen",{"_index":2445,"title":{},"body":{"components/IconComponent.html":{}}}],["listeners",{"_index":3014,"title":{},"body":{"components/IconComponent.html":{}}}],["listening",{"_index":2737,"title":{},"body":{"components/IconComponent.html":{}}}],["listfieldreport",{"_index":3632,"title":{},"body":{"classes/OpPeriod.html":{}}}],["listopperiods",{"_index":3510,"title":{},"body":{"classes/Mission.html":{}}}],["listrangers",{"_index":3633,"title":{},"body":{"classes/OpPeriod.html":{}}}],["literal",{"_index":2251,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"classes/What3Words.html":{},"miscellaneous/typealiases.html":{}}}],["ll",{"_index":2824,"title":{},"body":{"components/IconComponent.html":{}}}],["llat",{"_index":1815,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{}}}],["llng",{"_index":2822,"title":{},"body":{"components/IconComponent.html":{}}}],["llong",{"_index":1816,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["lmap",{"_index":823,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["lmap'},{'name",{"_index":271,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["lmap/lmap.component",{"_index":707,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/IconComponent.html":{}}}],["lmapcomponent",{"_index":270,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"coverage.html":{},"overview.html":{}}}],["lng",{"_index":1472,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/MarkerService.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"miscellaneous/functions.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["lng\")?.innertext",{"_index":2823,"title":{},"body":{"components/IconComponent.html":{}}}],["lngd",{"_index":2893,"title":{},"body":{"components/IconComponent.html":{}}}],["lngdd",{"_index":2880,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["lngdd.tostring",{"_index":2884,"title":{},"body":{"components/IconComponent.html":{}}}],["lngdms",{"_index":2909,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/Point-1.html":{}}}],["lngdms.deg",{"_index":3744,"title":{},"body":{"classes/PlusCode.html":{}}}],["lngdms.deg.tostring",{"_index":2914,"title":{},"body":{"components/IconComponent.html":{}}}],["lngdms.dir",{"_index":3742,"title":{},"body":{"classes/PlusCode.html":{}}}],["lngdms.dir.tostring",{"_index":2912,"title":{},"body":{"components/IconComponent.html":{}}}],["lngdms.min",{"_index":3746,"title":{},"body":{"classes/PlusCode.html":{}}}],["lngdms.min.tostring",{"_index":2916,"title":{},"body":{"components/IconComponent.html":{}}}],["lngdms.sec",{"_index":3748,"title":{},"body":{"classes/PlusCode.html":{}}}],["lngdms.sec.tostring",{"_index":2918,"title":{},"body":{"components/IconComponent.html":{}}}],["lngi",{"_index":2891,"title":{},"body":{"components/IconComponent.html":{}}}],["lngth",{"_index":331,"title":{},"body":{"components/AlertsComponent.html":{},"classes/Utility.html":{}}}],["load",{"_index":1497,"title":{},"body":{"classes/Coordinate.html":{},"components/IconComponent.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["load(name",{"_index":1464,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"classes/Point.html":{}}}],["loadchildren",{"_index":828,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":3988,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/ThreeWordsService.html":{},"classes/csvImport.html":{}}}],["loadfromjson(file",{"_index":4325,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["loadhardcodedrangers",{"_index":3883,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["loading",{"_index":3991,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["loadrangersfromexcel",{"_index":3884,"title":{},"body":{"injectables/RangerService.html":{}}}],["loadrangersfromexcel(eventtarget",{"_index":3907,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["loadrangersfromexcel2",{"_index":3885,"title":{},"body":{"injectables/RangerService.html":{}}}],["loadrangersfromjson",{"_index":3886,"title":{},"body":{"injectables/RangerService.html":{}}}],["loadrangersfromjson(filename",{"_index":3911,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["loadrangersfromlocalstorage",{"_index":3887,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["loads",{"_index":833,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loc.lat",{"_index":2750,"title":{},"body":{"components/IconComponent.html":{}}}],["loc.lng",{"_index":2751,"title":{},"body":{"components/IconComponent.html":{}}}],["local",{"_index":2066,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/GoogleGeocode.html":{},"injectables/LocalStorageService.html":{},"classes/PlusCode.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["locale",{"_index":3728,"title":{},"body":{"classes/PlusCode.html":{}}}],["locality/focus",{"_index":3692,"title":{},"body":{"classes/PlusCode.html":{}}}],["localstorage",{"_index":1604,"title":{},"body":{"injectables/FieldReportService.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["localstorage.getitem(settingsservice.localstoragefieldreportstatusname",{"_index":4194,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstorage.getitem(settingsservice.storagelocalname",{"_index":4169,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstorage.getitem(this.localstoragerangername",{"_index":3985,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["localstorage.getitem(this.storagelocalname",{"_index":1626,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["localstorage.removeitem(settingsservice.localstoragefieldreportstatusname",{"_index":4203,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstorage.removeitem(settingsservice.storagelocalname",{"_index":4177,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstorage.removeitem(this.storagelocalname",{"_index":1682,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["localstorage.setitem(\"specialrangers",{"_index":3967,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["localstorage.setitem('notes",{"_index":3192,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(settingsservice.localstoragefieldreportstatusname",{"_index":4231,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstorage.setitem(settingsservice.storagelocalname",{"_index":4229,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstorage.setitem(this.localstoragerangername",{"_index":3965,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["localstorage.setitem(this.storagelocalname",{"_index":1684,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["localstoragefieldreports",{"_index":1625,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["localstoragefieldreports.indexof(\"licensee",{"_index":1632,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["localstoragefieldreportstatuses",{"_index":4193,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstoragefieldreportstatuses.indexof(\"status",{"_index":4198,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstoragefieldreportstatuses?.length",{"_index":4196,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstoragefieldreportstatusname",{"_index":4109,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstoragerangername",{"_index":3874,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["localstoragerangers",{"_index":3984,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["localstorageservice",{"_index":3134,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["localstoragesettings",{"_index":4168,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstoragesettings.indexof(\"defpluscode",{"_index":4172,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstoragevoyeur",{"_index":4112,"title":{},"body":{"injectables/SettingsService.html":{}}}],["locate",{"_index":384,"title":{},"body":{"components/AlertsComponent.html":{},"components/IconComponent.html":{}}}],["locatinos",{"_index":4945,"title":{},"body":{"index.html":{}}}],["location",{"_index":837,"title":{},"body":{"classes/CodeArea.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"injectables/SettingsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["location\":{\"lat\":47.4506552,\"lng",{"_index":2324,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["location.reload",{"_index":619,"title":{},"body":{"components/AppComponent.html":{}}}],["location/address",{"_index":2586,"title":{},"body":{"components/IconComponent.html":{}}}],["location_type\":\"rooftop",{"_index":2326,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["locations",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["log",{"_index":824,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LogComponent.html":{},"components/NavbarComponent.html":{}}}],["log'},{'name",{"_index":273,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["log.component.html",{"_index":3317,"title":{},"body":{"components/LogComponent.html":{}}}],["log.component.scss",{"_index":3316,"title":{},"body":{"components/LogComponent.html":{}}}],["log/log.component",{"_index":708,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logcomponent",{"_index":272,"title":{"components/LogComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"coverage.html":{},"overview.html":{}}}],["logevent",{"_index":3319,"title":{},"body":{"components/LogComponent.html":{}}}],["logevent(msg",{"_index":3324,"title":{},"body":{"components/LogComponent.html":{}}}],["logexport",{"_index":3368,"title":{},"body":{"components/LogComponent.html":{}}}],["logtoconsole",{"_index":4148,"title":{},"body":{"injectables/SettingsService.html":{}}}],["logtopanel",{"_index":4147,"title":{},"body":{"injectables/SettingsService.html":{}}}],["lon",{"_index":3408,"title":{},"body":{"injectables/MarkerService.html":{}}}],["long",{"_index":1016,"title":{},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/PlusCode.html":{},"classes/Point.html":{}}}],["long_name\":\"17205\",\"short_name\":\"17205\",\"types\":[\"street_number",{"_index":2304,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["long_name\":\"4674\",\"short_name\":\"4674\",\"types\":[\"postal_code_suffix",{"_index":2318,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["long_name\":\"98070\",\"short_name\":\"98070\",\"types\":[\"postal_code",{"_index":2317,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["long_name\":\"king",{"_index":2311,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["long_name\":\"suite",{"_index":2301,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["long_name\":\"united",{"_index":2315,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["long_name\":\"vashon",{"_index":2305,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["long_name\":\"vashon\",\"short_name\":\"vashon\",\"types\":[\"locality\",\"political",{"_index":2310,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["long_name\":\"washington\",\"short_name\":\"wa\",\"types\":[\"administrative_area_level_1\",\"political",{"_index":2314,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["longer",{"_index":3680,"title":{},"body":{"classes/PlusCode.html":{}}}],["longitude",{"_index":844,"title":{},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"index.html":{}}}],["longitude_max",{"_index":872,"title":{},"body":{"classes/CodeArea.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["longitude_max_",{"_index":934,"title":{},"body":{"classes/CodeArea.html":{}}}],["longitudecenter",{"_index":858,"title":{},"body":{"classes/CodeArea.html":{}}}],["longitudeddd",{"_index":2892,"title":{},"body":{"components/IconComponent.html":{}}}],["longitudeddi",{"_index":2890,"title":{},"body":{"components/IconComponent.html":{}}}],["longitudehi",{"_index":859,"title":{},"body":{"classes/CodeArea.html":{}}}],["longitudehi:number",{"_index":878,"title":{},"body":{"classes/CodeArea.html":{}}}],["longitudelo",{"_index":860,"title":{},"body":{"classes/CodeArea.html":{}}}],["longitudelo:number",{"_index":876,"title":{},"body":{"classes/CodeArea.html":{}}}],["longitudeoutput",{"_index":1133,"title":{},"body":{"classes/CodeArea.html":{}}}],["looking",{"_index":2624,"title":{},"body":{"components/IconComponent.html":{}}}],["looks",{"_index":1264,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["lookup",{"_index":2259,"title":{},"body":{"classes/GoogleGeocode.html":{},"classes/csvImport.html":{},"index.html":{}}}],["lookupcollections",{"_index":2381,"title":{},"body":{"components/IconComponent.html":{}}}],["lower",{"_index":845,"title":{},"body":{"classes/CodeArea.html":{}}}],["lviewblueprint",{"_index":2847,"title":{},"body":{"components/IconComponent.html":{}}}],["m",{"_index":2029,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/Point-1.html":{},"pipes/myUnusedPipe.html":{}}}],["m13,14h11v10h13m13,18h11v16h13m1,21h23l12,2l1,21z",{"_index":2354,"title":{},"body":{"components/IconComponent.html":{}}}],["m2",{"_index":4348,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["m3",{"_index":4354,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["madurai",{"_index":3604,"title":{},"body":{"components/NavbarComponent.html":{}}}],["magenta",{"_index":4276,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["main",{"_index":3595,"title":{},"body":{"components/NavbarComponent.html":{}}}],["main.dbug(\"bad",{"_index":1482,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["main.dbug(\"chkpcodes",{"_index":3764,"title":{},"body":{"classes/PlusCode.html":{}}}],["main.dbug(\"coordinate",{"_index":1478,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["main.dbug(\"ddd",{"_index":4591,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["main.dbug(\"dmstodd",{"_index":3822,"title":{},"body":{"classes/Point-1.html":{}}}],["main.dbug(\"error",{"_index":3799,"title":{},"body":{"classes/Point-1.html":{}}}],["main.dbug(\"got",{"_index":4246,"title":{},"body":{"classes/StreetAddress.html":{}}}],["main.js:302:27",{"_index":597,"title":{},"body":{"components/AppComponent.html":{}}}],["mainly",{"_index":4470,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["make",{"_index":796,"title":{},"body":{"modules/AppModule.html":{},"classes/CodeArea.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["makecapitalcirclemarkers",{"_index":3381,"title":{},"body":{"injectables/MarkerService.html":{}}}],["makecapitalcirclemarkers(map",{"_index":3389,"title":{},"body":{"injectables/MarkerService.html":{}}}],["makerequest",{"_index":4753,"title":{},"body":{"classes/csvImport.html":{}}}],["makerequest(method",{"_index":4763,"title":{},"body":{"classes/csvImport.html":{}}}],["makes",{"_index":3303,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/ThreeWordsService.html":{}}}],["makestationmarkers",{"_index":3382,"title":{},"body":{"injectables/MarkerService.html":{}}}],["makestationmarkers(map",{"_index":3392,"title":{},"body":{"injectables/MarkerService.html":{}}}],["makestationpopup",{"_index":3850,"title":{},"body":{"injectables/PopupService.html":{}}}],["makestationpopup(data",{"_index":3852,"title":{},"body":{"injectables/PopupService.html":{}}}],["manually",{"_index":2142,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["many",{"_index":1076,"title":{},"body":{"classes/CodeArea.html":{}}}],["map",{"_index":561,"title":{"classes/Map.html":{}},"body":{"components/AppComponent.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"index.html":{}}}],["map(callsign",{"_index":2535,"title":{},"body":{"components/IconComponent.html":{}}}],["map(evt",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["map(ranger",{"_index":2539,"title":{},"body":{"components/IconComponent.html":{}}}],["map.nextid",{"_index":3101,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["map2",{"_index":2415,"title":{},"body":{"components/IconComponent.html":{}}}],["mapinfowindow",{"_index":2232,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{}}}],["mapleafletmarkers",{"_index":1762,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["mapmarker",{"_index":2233,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{}}}],["mapping",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["maps",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/SettingsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"dependencies.html":{},"index.html":{}}}],["mapsservererror",{"_index":2348,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["maptype",{"_index":3085,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{},"miscellaneous/enumerations.html":{}}}],["maptypeid",{"_index":2432,"title":{},"body":{"components/IconComponent.html":{}}}],["margin",{"_index":467,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/LogComponent.html":{},"components/NavbarComponent.html":{}}}],["margin:0px",{"_index":636,"title":{},"body":{"components/AppComponent.html":{}}}],["markasdirty",{"_index":2799,"title":{},"body":{"components/IconComponent.html":{}}}],["markaspending",{"_index":2801,"title":{},"body":{"components/IconComponent.html":{}}}],["markaspristine",{"_index":2800,"title":{},"body":{"components/IconComponent.html":{}}}],["markasuntouched",{"_index":2798,"title":{},"body":{"components/IconComponent.html":{}}}],["marker",{"_index":1748,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/MarkerService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["marker.addto(map",{"_index":3411,"title":{},"body":{"injectables/MarkerService.html":{}}}],["markericon",{"_index":4724,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["markers",{"_index":1743,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/MarkerService.html":{}}}],["markers.clearlayers",{"_index":1761,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["markerservice",{"_index":653,"title":{"injectables/MarkerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MarkerService.html":{},"coverage.html":{},"overview.html":{}}}],["markerservice.scaledradius(c.properties.population",{"_index":3417,"title":{},"body":{"injectables/MarkerService.html":{}}}],["markershape",{"_index":4144,"title":{},"body":{"injectables/SettingsService.html":{}}}],["markersize",{"_index":4143,"title":{},"body":{"injectables/SettingsService.html":{}}}],["markertype",{"_index":3387,"title":{},"body":{"injectables/MarkerService.html":{},"miscellaneous/typealiases.html":{}}}],["master\\demos\\angular2\\src\\app\\sheetjs.component.ts",{"_index":3945,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["mat",{"_index":1350,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["mat_banner_default_options",{"_index":791,"title":{},"body":{"modules/AppModule.html":{}}}],["mat_color_formats",{"_index":719,"title":{},"body":{"modules/AppModule.html":{}}}],["mat_snack_bar_default_options",{"_index":723,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompletemodule",{"_index":3438,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbadgemodule",{"_index":3440,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbottomsheetmodule",{"_index":3443,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":3446,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":3448,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":3450,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":1095,"title":{},"body":{"classes/CodeArea.html":{}}}],["matcheckboxmodule",{"_index":3452,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matches",{"_index":3669,"title":{},"body":{"classes/PlusCode.html":{}}}],["matching",{"_index":288,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"components/LazyComponent.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"modules/MaterialModule.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"classes/StreetAddress.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"changelog.html":{},"coverage.html":{},"classes/csvImport.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"pipes/myUnusedPipe.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":3454,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodule",{"_index":709,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{},"modules/MaterialModule.html":{}}}],["matdialogmodule",{"_index":3456,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdividermodule",{"_index":3458,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":716,"title":{},"body":{"modules/AppModule.html":{},"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"dependencies.html":{}}}],["material.module",{"_index":724,"title":{},"body":{"modules/AppModule.html":{}}}],["material/banner",{"_index":347,"title":{},"body":{"components/AlertsComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["material/banner/styles",{"_index":360,"title":{},"body":{"components/AlertsComponent.html":{}}}],["material/button",{"_index":463,"title":{},"body":{"components/AlertsComponent.html":{}}}],["material/button/styles",{"_index":464,"title":{},"body":{"components/AlertsComponent.html":{}}}],["material/slider",{"_index":4889,"title":{},"body":{"dependencies.html":{}}}],["material/snackbar",{"_index":557,"title":{},"body":{"components/AppComponent.html":{}}}],["material/theme",{"_index":457,"title":{},"body":{"components/AlertsComponent.html":{}}}],["materialmodule",{"_index":651,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matero.github.io/extensions/components/datetimepicker/overview",{"_index":2466,"title":{},"body":{"components/IconComponent.html":{}}}],["matexpansionmodule",{"_index":3460,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matformfieldmodule",{"_index":344,"title":{},"body":{"components/AlertsComponent.html":{},"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":3462,"title":{},"body":{"modules/MaterialModule.html":{}}}],["math.abs(date.parse(teamlocations[i].date",{"_index":1804,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["math.floor(latdd)).tostring().slice(0",{"_index":2898,"title":{},"body":{"components/IconComponent.html":{}}}],["math.floor(latdd).tostring",{"_index":2896,"title":{},"body":{"components/IconComponent.html":{}}}],["math.max(...res.features.map((x",{"_index":3413,"title":{},"body":{"injectables/MarkerService.html":{}}}],["math.max(maxlat,llat",{"_index":1811,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["math.max(maxlng,llong",{"_index":1812,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["math.min(editedcode.length",{"_index":1078,"title":{},"body":{"classes/CodeArea.html":{}}}],["math.min(latitudelo",{"_index":881,"title":{},"body":{"classes/CodeArea.html":{}}}],["math.min(longitudelo",{"_index":883,"title":{},"body":{"classes/CodeArea.html":{}}}],["math.min(minlat,llat",{"_index":1808,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["math.min(minlng,llong",{"_index":1810,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["math.pow(openlocationcode.encoding_base_",{"_index":966,"title":{},"body":{"classes/CodeArea.html":{}}}],["math.pow(openlocationcode.grid_columns_",{"_index":987,"title":{},"body":{"classes/CodeArea.html":{}}}],["math.pow(openlocationcode.grid_rows_",{"_index":984,"title":{},"body":{"classes/CodeArea.html":{}}}],["math.round((milliseconds",{"_index":2051,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["math.round(milliseconds",{"_index":2048,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["math.round(this.fieldreports[i].lat",{"_index":1705,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["math.round(this.fieldreports[i].lng",{"_index":1708,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["math.sqrt(dx*dx",{"_index":3814,"title":{},"body":{"classes/Point-1.html":{}}}],["matheo/datepicker",{"_index":710,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{}}}],["matheo/datepicker/core",{"_index":712,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{}}}],["maticonmodule",{"_index":3464,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonregistry",{"_index":2387,"title":{},"body":{"components/IconComponent.html":{}}}],["matinputmodule",{"_index":2358,"title":{},"body":{"components/IconComponent.html":{},"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":3465,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":3467,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":711,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{},"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":3470,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":3472,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":3474,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":3476,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodule",{"_index":3469,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":3478,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":3480,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":3482,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":3484,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":304,"title":{},"body":{"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/IconComponent.html":{}}}],["matsnackbarmodule",{"_index":3486,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodule",{"_index":3487,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":3489,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":3491,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":3493,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":3495,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":3497,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattreemodule",{"_index":3499,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":2709,"title":{},"body":{"components/IconComponent.html":{},"components/NavbarComponent.html":{}}}],["max_digit_count_",{"_index":907,"title":{},"body":{"classes/CodeArea.html":{}}}],["maxdate",{"_index":2477,"title":{},"body":{"components/IconComponent.html":{}}}],["maximum",{"_index":932,"title":{},"body":{"classes/CodeArea.html":{}}}],["maxlat",{"_index":1753,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["maxlat+\",\"+maxlng",{"_index":1819,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["maxlng",{"_index":1755,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["maxpop",{"_index":3412,"title":{},"body":{"injectables/MarkerService.html":{}}}],["maxseperatorwarnings",{"_index":1876,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["maxval",{"_index":3395,"title":{},"body":{"injectables/MarkerService.html":{}}}],["maxwidth",{"_index":1928,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["maxzoom",{"_index":2434,"title":{},"body":{"components/IconComponent.html":{}}}],["maybe",{"_index":2635,"title":{},"body":{"components/IconComponent.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["mazda",{"_index":4352,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["mdc",{"_index":473,"title":{},"body":{"components/AlertsComponent.html":{}}}],["mdcbanner",{"_index":346,"title":{},"body":{"components/AlertsComponent.html":{},"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["mdcbanner(this.alertbanner",{"_index":376,"title":{},"body":{"components/AlertsComponent.html":{}}}],["mdi/js",{"_index":2380,"title":{},"body":{"components/IconComponent.html":{},"dependencies.html":{}}}],["mdiaccount",{"_index":2378,"title":{},"body":{"components/IconComponent.html":{}}}],["mdiinformationoutline",{"_index":2379,"title":{},"body":{"components/IconComponent.html":{}}}],["meaning",{"_index":896,"title":{},"body":{"classes/CodeArea.html":{}}}],["means",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["media",{"_index":3624,"title":{},"body":{"components/NavbarComponent.html":{}}}],["meeting",{"_index":4103,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["members",{"_index":4924,"title":{},"body":{"index.html":{}}}],["memorability",{"_index":913,"title":{},"body":{"classes/CodeArea.html":{}}}],["menu",{"_index":176,"title":{},"body":{"components/AboutComponent.html":{}}}],["menus",{"_index":198,"title":{},"body":{"components/AboutComponent.html":{}}}],["mercedes",{"_index":4344,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["merchantability",{"_index":154,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["merge",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["mergemap",{"_index":527,"title":{},"body":{"classes/AngularComponentOrService.html":{},"injectables/DataService.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/OpPeriod.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["mergemap((key",{"_index":536,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["message",{"_index":328,"title":{},"body":{"components/AlertsComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"pipes/myUnusedPipe.html":{}}}],["meters",{"_index":942,"title":{},"body":{"classes/CodeArea.html":{}}}],["method",{"_index":978,"title":{},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{}}}],["methods",{"_index":296,"title":{},"body":{"components/AlertsComponent.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"components/X404Component.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["middle",{"_index":3617,"title":{},"body":{"components/NavbarComponent.html":{},"classes/PlusCode.html":{}}}],["milliseconds",{"_index":2046,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["milliseconds/minute",{"_index":1800,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["min",{"_index":471,"title":{},"body":{"components/AlertsComponent.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"classes/Point-1.html":{}}}],["min/max",{"_index":1747,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{}}}],["min_trimmable_code_len_",{"_index":996,"title":{},"body":{"classes/CodeArea.html":{}}}],["mindate",{"_index":2476,"title":{},"body":{"components/IconComponent.html":{}}}],["minimap",{"_index":2724,"title":{},"body":{"components/IconComponent.html":{}}}],["minimum",{"_index":994,"title":{},"body":{"classes/CodeArea.html":{}}}],["minlat",{"_index":1807,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["minlat+\",\"+minlng",{"_index":1818,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["minlat=infinity",{"_index":1751,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["minlng",{"_index":1809,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["minlng=infinity",{"_index":1752,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["minutes",{"_index":2050,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"classes/Point-1.html":{},"pipes/myUnusedPipe.html":{}}}],["minutes=\"+filters.minutes",{"_index":1795,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["minwidth",{"_index":1946,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["minzoom",{"_index":2435,"title":{},"body":{"components/IconComponent.html":{}}}],["mis",{"_index":4617,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["misc",{"_index":3003,"title":{},"body":{"components/IconComponent.html":{}}}],["miscellaneous",{"_index":4913,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":3999,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["mission",{"_index":3104,"title":{"classes/Mission.html":{}},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{},"classes/Mission.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"coverage.html":{}}}],["mission.nextid",{"_index":3529,"title":{},"body":{"classes/Mission.html":{}}}],["mit",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{},"license.html":{}}}],["mm",{"_index":2040,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["mode",{"_index":2074,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["model",{"_index":1305,"title":{},"body":{"components/ColorEditor.html":{}}}],["models",{"_index":4343,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["modern",{"_index":4938,"title":{},"body":{"index.html":{}}}],["modifiers",{"_index":2400,"title":{},"body":{"components/IconComponent.html":{}}}],["modify",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["module",{"_index":640,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ThreeWordsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["modules",{"_index":642,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"modules/MaterialModule.html":{},"injectables/ThreeWordsService.html":{},"modules.html":{},"overview.html":{}}}],["modulus",{"_index":1475,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["mon",{"_index":2016,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["monospace",{"_index":3359,"title":{},"body":{"components/LogComponent.html":{}}}],["month",{"_index":2122,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["mood",{"_index":276,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["moodeditor",{"_index":274,"title":{"components/MoodEditor.html":{}},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"coverage.html":{},"overview.html":{}}}],["moodrenderer",{"_index":275,"title":{"components/MoodRenderer.html":{}},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"coverage.html":{},"overview.html":{}}}],["more",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"classes/CodeArea.html":{},"injectables/LocalStorageService.html":{},"injectables/MarkerService.html":{},"classes/PlusCode.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"index.html":{}}}],["mouse",{"_index":1848,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["mouseenter",{"_index":3024,"title":{},"body":{"components/IconComponent.html":{}}}],["mouselatlng",{"_index":2426,"title":{},"body":{"components/IconComponent.html":{}}}],["mouseleave",{"_index":3026,"title":{},"body":{"components/IconComponent.html":{}}}],["move",{"_index":1758,"title":{},"body":{"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{}}}],["ms",{"_index":4403,"title":{},"body":{"classes/Utility.html":{}}}],["msg",{"_index":315,"title":{},"body":{"components/AlertsComponent.html":{},"components/FieldReportsComponent.html":{},"components/LogComponent.html":{},"injectables/RangerService.html":{},"injectables/SettingsService.html":{},"pipes/myUnusedPipe.html":{}}}],["msgs",{"_index":4959,"title":{},"body":{"index.html":{}}}],["much",{"_index":989,"title":{},"body":{"classes/CodeArea.html":{}}}],["multi",{"_index":4957,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":777,"title":{},"body":{"modules/AppModule.html":{},"classes/CodeArea.html":{},"components/FieldReportsComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"pipes/myUnusedPipe.html":{}}}],["multiplier",{"_index":1126,"title":{},"body":{"classes/CodeArea.html":{}}}],["multiply",{"_index":988,"title":{},"body":{"classes/CodeArea.html":{}}}],["mx",{"_index":4353,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["mydategetter",{"_index":1877,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["myfunction(value",{"_index":1775,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["myjson",{"_index":4057,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["myjson2",{"_index":4061,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["myminutegetter",{"_index":1878,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["mypop",{"_index":3021,"title":{},"body":{"components/IconComponent.html":{}}}],["myresolver",{"_index":820,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["myunusedpipe",{"_index":1979,"title":{"pipes/myUnusedPipe.html":{}},"body":{"components/FieldReportsComponent.html":{},"coverage.html":{},"pipes/myUnusedPipe.html":{}}}],["n",{"_index":1425,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"components/LogComponent.html":{},"classes/Point.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["n.b",{"_index":1491,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["n1.callsign",{"_index":1695,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["n1.date",{"_index":1703,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["n1.team",{"_index":1721,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["n2",{"_index":1702,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["n2.callsign",{"_index":1696,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["n2.date",{"_index":1704,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["n2.team",{"_index":1722,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["n3aceq?file=src%2fapp%2fapp.component.ts",{"_index":1987,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["n:${north",{"_index":1719,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["n_focus_results",{"_index":4519,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["na",{"_index":4096,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["name",{"_index":248,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"components/LazyComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"classes/csvImport.html":{},"miscellaneous/functions.html":{},"pipes/myUnusedPipe.html":{}}}],["name.split",{"_index":1442,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["named",{"_index":4002,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{}}}],["nancy",{"_index":1278,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["narrow",{"_index":4624,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["national",{"_index":4136,"title":{},"body":{"injectables/SettingsService.html":{}}}],["native/file/ngx",{"_index":738,"title":{},"body":{"modules/AppModule.html":{},"components/LogComponent.html":{}}}],["nav",{"_index":3596,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":3580,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":278,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["navbar.component.html",{"_index":3582,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":3581,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":725,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":277,"title":{"components/NavbarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":4971,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":342,"title":{},"body":{"components/AlertsComponent.html":{}}}],["nbsp;&nbsp",{"_index":419,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"classes/PlusCode.html":{}}}],["ne",{"_index":1617,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["near",{"_index":2989,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["nearest",{"_index":2987,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["nearestplace",{"_index":2983,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["nearestplace!.innerhtml",{"_index":4609,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["necessary",{"_index":1614,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["need",{"_index":1198,"title":{},"body":{"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"index.html":{}}}],["needed",{"_index":1924,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"pipes/myUnusedPipe.html":{}}}],["needs",{"_index":2956,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["needsettings",{"_index":4170,"title":{},"body":{"injectables/SettingsService.html":{}}}],["neg",{"_index":3827,"title":{},"body":{"classes/Point-1.html":{}}}],["negative",{"_index":3828,"title":{},"body":{"classes/Point-1.html":{}}}],["neighborhood",{"_index":4092,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["nested",{"_index":1209,"title":{},"body":{"components/ColorEditor.html":{}}}],["net::err_connection_refused",{"_index":1670,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["never",{"_index":2634,"title":{},"body":{"components/IconComponent.html":{},"injectables/ThreeWordsService.html":{}}}],["new",{"_index":375,"title":{},"body":{"components/AlertsComponent.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/Utility.html":{},"coverage.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["newaddr",{"_index":2740,"title":{},"body":{"components/IconComponent.html":{}}}],["newaddress",{"_index":2826,"title":{},"body":{"components/IconComponent.html":{}}}],["newfr",{"_index":1587,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["newmapreference",{"_index":2693,"title":{},"body":{"components/IconComponent.html":{}}}],["newmarker",{"_index":1842,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["newreport",{"_index":1660,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{}}}],["newreport).subscribe(res",{"_index":1667,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["newreport.id",{"_index":1662,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{}}}],["newsettings",{"_index":4123,"title":{},"body":{"injectables/SettingsService.html":{}}}],["newstatuses",{"_index":4126,"title":{},"body":{"injectables/SettingsService.html":{}}}],["next",{"_index":183,"title":{},"body":{"components/AboutComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["nextid",{"_index":1526,"title":{},"body":{"injectables/FieldReportService.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["nfakes",{"_index":1879,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["nfocusresults",{"_index":4561,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["ng",{"_index":609,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ng2003",{"_index":3332,"title":{},"body":{"components/LogComponent.html":{}}}],["ngafterviewinit",{"_index":1152,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["ngeupdates",{"_index":2614,"title":{},"body":{"components/IconComponent.html":{}}}],["nginit",{"_index":2059,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["ngmodelchange",{"_index":1304,"title":{},"body":{"components/ColorEditor.html":{}}}],["ngmodule",{"_index":726,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/IconComponent.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"modules/MaterialModule.html":{},"injectables/ThreeWordsService.html":{}}}],["ngondestroy",{"_index":1153,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["ngoninit",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"components/NavbarComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"components/X404Component.html":{},"pipes/myUnusedPipe.html":{}}}],["ngx",{"_index":504,"title":{},"body":{"classes/AngularComponentOrService.html":{},"components/ColorEditor.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"dependencies.html":{}}}],["ngx_mat_color_formats",{"_index":721,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmatcolorcanvascomponent",{"_index":1387,"title":{},"body":{"components/ColorEditor.html":{}}}],["ngxmatcolorcollectioncomponent",{"_index":1389,"title":{},"body":{"components/ColorEditor.html":{}}}],["ngxmatcolorpalettecomponent",{"_index":1386,"title":{},"body":{"components/ColorEditor.html":{}}}],["ngxmatcolorpickercontentcomponent",{"_index":1385,"title":{},"body":{"components/ColorEditor.html":{}}}],["ngxmatcolorpickermodule",{"_index":720,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmatcolortogglecomponent",{"_index":1371,"title":{},"body":{"components/ColorEditor.html":{}}}],["ngxmatdatetimepickermodule",{"_index":713,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{}}}],["ngxmatnativedatemodule",{"_index":714,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{}}}],["ngxmattimepickermodule",{"_index":715,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{}}}],["ngzone",{"_index":2356,"title":{},"body":{"components/IconComponent.html":{}}}],["nice",{"_index":2467,"title":{},"body":{"components/IconComponent.html":{}}}],["nmdp",{"_index":4656,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["node",{"_index":4456,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["node_modules/@what3words/api/dist/lib/constants.js:4:11",{"_index":4477,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["nodejs",{"_index":4968,"title":{},"body":{"index.html":{}}}],["noise_aware",{"_index":2769,"title":{},"body":{"components/IconComponent.html":{}}}],["non",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"components/FieldReportsComponent.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["none",{"_index":1394,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["noninfringement",{"_index":158,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["normal",{"_index":2159,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/LogComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["normallat",{"_index":1072,"title":{},"body":{"classes/CodeArea.html":{}}}],["normallng",{"_index":1073,"title":{},"body":{"classes/CodeArea.html":{}}}],["north",{"_index":1090,"title":{},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"classes/Point.html":{},"miscellaneous/enumerations.html":{}}}],["north_lat",{"_index":4565,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["northeast",{"_index":4443,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["nota",{"_index":394,"title":{},"body":{"components/AlertsComponent.html":{}}}],["notable",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":539,"title":{},"body":{"classes/AngularComponentOrService.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["note.id",{"_index":3181,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["note.id+1",{"_index":3182,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["note.title",{"_index":3195,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["noteinfo",{"_index":3175,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["notes",{"_index":3177,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["notesservice",{"_index":3176,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["notessubject",{"_index":3178,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["notets(2322",{"_index":4001,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["notice",{"_index":142,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["notification",{"_index":450,"title":{},"body":{"components/AlertsComponent.html":{}}}],["notifications",{"_index":444,"title":{},"body":{"components/AlertsComponent.html":{}}}],["now",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["now').afterdismissed",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["now.add(hours",{"_index":3076,"title":{},"body":{"components/IconComponent.html":{}}}],["now.subtract(hours",{"_index":3074,"title":{},"body":{"components/IconComponent.html":{}}}],["npm",{"_index":4181,"title":{},"body":{"injectables/SettingsService.html":{},"index.html":{}}}],["nresults",{"_index":4571,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["null",{"_index":335,"title":{},"body":{"components/AlertsComponent.html":{},"injectables/FieldReportService.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Mission.html":{},"classes/Point-1.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{}}}],["nullinjectorerror",{"_index":817,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["num",{"_index":1566,"title":{},"body":{"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"injectables/MarkerService.html":{}}}],["number",{"_index":326,"title":{},"body":{"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"miscellaneous/functions.html":{},"index.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["number((this.document.getelementbyid(\"enter__where",{"_index":2821,"title":{},"body":{"components/IconComponent.html":{}}}],["number(dateparts[0",{"_index":1731,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["number(dateparts[1",{"_index":1730,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["number(dateparts[2",{"_index":1729,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["number(dms.deg",{"_index":3829,"title":{},"body":{"classes/Point-1.html":{}}}],["number.nan",{"_index":3821,"title":{},"body":{"classes/Point-1.html":{}}}],["numbered",{"_index":1000,"title":{},"body":{"classes/CodeArea.html":{}}}],["numbers",{"_index":928,"title":{},"body":{"classes/CodeArea.html":{},"injectables/FieldReportService.html":{}}}],["numbers.filter(myfunction",{"_index":1774,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["numfakesform",{"_index":1880,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["numfield",{"_index":2185,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["numseperatorwarnings",{"_index":1881,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["numteams",{"_index":1827,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["o",{"_index":4970,"title":{},"body":{"index.html":{}}}],["object",{"_index":1048,"title":{},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["object.keys(columns).foreach((column",{"_index":4826,"title":{},"body":{"classes/csvImport.html":{}}}],["object.prototype.tostring.call(d",{"_index":2081,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["objective",{"_index":4226,"title":{},"body":{"injectables/SettingsService.html":{}}}],["objects",{"_index":3310,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["observable",{"_index":622,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/OpPeriod.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["observable,debouncetime",{"_index":1511,"title":{},"body":{"injectables/DataService.html":{},"injectables/PostService.html":{}}}],["observables",{"_index":1294,"title":{},"body":{"components/ColorEditor.html":{},"injectables/LocalStorageService.html":{}}}],["observe",{"_index":3170,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["observer",{"_index":1581,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/LocalStorageService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["observers",{"_index":3963,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["observrangers",{"_index":3875,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["obtained",{"_index":1236,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["obtaining",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["ocean",{"_index":3723,"title":{},"body":{"classes/PlusCode.html":{}}}],["of('red",{"_index":3225,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["of('schema",{"_index":3247,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["of(this.opts",{"_index":3869,"title":{},"body":{"injectables/PostService.html":{}}}],["offline",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/IconComponent.html":{},"index.html":{}}}],["offset",{"_index":2599,"title":{},"body":{"components/IconComponent.html":{}}}],["ok",{"_index":369,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["olc",{"_index":1104,"title":{},"body":{"classes/CodeArea.html":{},"classes/PlusCode.html":{}}}],["old",{"_index":1739,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/SettingsService.html":{}}}],["older",{"_index":638,"title":{},"body":{"components/AppComponent.html":{}}}],["onbtnclearfieldreports",{"_index":1888,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["onbtnclosealert",{"_index":299,"title":{},"body":{"components/AlertsComponent.html":{}}}],["onbtnclosebottomalert",{"_index":300,"title":{},"body":{"components/AlertsComponent.html":{}}}],["onbtnexport",{"_index":1889,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["onbtnimportfieldreports_unused",{"_index":1890,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["onbtnormal",{"_index":4251,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["onbtnupdatefieldreports",{"_index":1891,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["onbtprinterfriendly",{"_index":4252,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["once",{"_index":1620,"title":{},"body":{"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"index.html":{}}}],["oncha",{"_index":2613,"title":{},"body":{"components/IconComponent.html":{}}}],["onchange",{"_index":1301,"title":{},"body":{"components/ColorEditor.html":{}}}],["onclick",{"_index":1154,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["onclick(event",{"_index":1169,"title":{},"body":{"components/ColorEditor.html":{}}}],["onclick(happy",{"_index":3538,"title":{},"body":{"components/MoodEditor.html":{}}}],["oncolorctrclosed",{"_index":1155,"title":{},"body":{"components/ColorEditor.html":{}}}],["one",{"_index":999,"title":{},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["one\",\"open",{"_index":2209,"title":{},"body":{"components/FooterComponent.html":{}}}],["onfirstdatarendered(params",{"_index":2096,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["onfirstupdate",{"_index":2402,"title":{},"body":{"components/IconComponent.html":{}}}],["onformsubmit(formdata1",{"_index":2663,"title":{},"body":{"components/IconComponent.html":{}}}],["ongridready",{"_index":1882,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/TeamService.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["ongridready(params",{"_index":1990,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"pipes/myUnusedPipe.html":{}}}],["oninfowhere",{"_index":3061,"title":{},"body":{"components/IconComponent.html":{}}}],["oninit",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"classes/Mission.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"pipes/myUnusedPipe.html":{}}}],["onkeydown",{"_index":1156,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["onkeydown(event",{"_index":1172,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["online",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["onlymarker",{"_index":2417,"title":{},"body":{"components/IconComponent.html":{}}}],["onlyself",{"_index":1287,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["onmapclick",{"_index":3108,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["onmapinitialized(newmapreference",{"_index":2690,"title":{},"body":{"components/IconComponent.html":{}}}],["onmapmousemove(event",{"_index":2712,"title":{},"body":{"components/IconComponent.html":{}}}],["onmousedown",{"_index":1157,"title":{},"body":{"components/ColorEditor.html":{}}}],["onmousedown(event",{"_index":1174,"title":{},"body":{"components/ColorEditor.html":{}}}],["onrowclicked",{"_index":1959,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["onseperatorchange",{"_index":1892,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["onsite",{"_index":3932,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["onto",{"_index":1849,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["op",{"_index":3522,"title":{},"body":{"classes/Mission.html":{}}}],["opacity",{"_index":231,"title":{},"body":{"components/AboutComponent.html":{}}}],["open",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"classes/CodeArea.html":{},"injectables/FieldReportService.html":{},"classes/PlusCode.html":{},"index.html":{}}}],["openlocationcode",{"_index":891,"title":{},"body":{"classes/CodeArea.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"coverage.html":{}}}],["openlocationcode.code_alphabet_.indexof(code.charat(1).touppercase",{"_index":1037,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.code_alphabet_.length",{"_index":931,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.decode",{"_index":3713,"title":{},"body":{"classes/PlusCode.html":{}}}],["openlocationcode.decode(codeupper",{"_index":1119,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.decode(pcode",{"_index":2957,"title":{},"body":{"components/IconComponent.html":{}}}],["openlocationcode.decode(this.getcode",{"_index":1041,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.encode",{"_index":2920,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["openlocationcode.encode(codearea.latitudecenter",{"_index":1101,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.encode(latdd",{"_index":2919,"title":{},"body":{"components/IconComponent.html":{}}}],["openlocationcode.encoding_base_",{"_index":1038,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.grid_code_length_",{"_index":985,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.grid_lat_first_place_value_",{"_index":1084,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.grid_lng_first_place_value_",{"_index":1086,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.isfull(code",{"_index":1062,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.isshort(pcode",{"_index":2927,"title":{},"body":{"components/IconComponent.html":{}}}],["openlocationcode.isvalid(pcode",{"_index":2926,"title":{},"body":{"components/IconComponent.html":{}}}],["openlocationcode.latitude_max_",{"_index":1032,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.longitude_max_",{"_index":1039,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.max_digit_count_",{"_index":975,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.pair_code_length_",{"_index":967,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.pair_first_place_value_",{"_index":1081,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.pair_precision_",{"_index":992,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.recovernearest",{"_index":3711,"title":{},"body":{"classes/PlusCode.html":{}}}],["openlocationcode.recovernearest(pcode",{"_index":2929,"title":{},"body":{"components/IconComponent.html":{}}}],["openlocationcode.separator_",{"_index":1021,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.separator_position_",{"_index":1011,"title":{},"body":{"classes/CodeArea.html":{}}}],["openlocationcode.shorten",{"_index":3757,"title":{},"body":{"classes/PlusCode.html":{}}}],["openlocationcode.shorten(fullcode",{"_index":2933,"title":{},"body":{"components/IconComponent.html":{}}}],["opens",{"_index":192,"title":{},"body":{"components/AboutComponent.html":{}}}],["opensnackbar",{"_index":301,"title":{},"body":{"components/AlertsComponent.html":{}}}],["opensnackbar(message",{"_index":324,"title":{},"body":{"components/AlertsComponent.html":{}}}],["operations",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{},"classes/AngularComponentOrService.html":{},"injectables/LocalStorageService.html":{},"index.html":{}}}],["operators",{"_index":4947,"title":{},"body":{"index.html":{}}}],["opperiod",{"_index":3516,"title":{"classes/OpPeriod.html":{}},"body":{"classes/Mission.html":{},"classes/OpPeriod.html":{},"coverage.html":{}}}],["opperiod.nextid",{"_index":3642,"title":{},"body":{"classes/OpPeriod.html":{}}}],["opperiods",{"_index":3526,"title":{},"body":{"classes/Mission.html":{}}}],["opperiods2",{"_index":3527,"title":{},"body":{"classes/Mission.html":{}}}],["opt",{"_index":2104,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["opt).text",{"_index":2109,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["opt).value",{"_index":2107,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["optimization",{"_index":748,"title":{},"body":{"modules/AppModule.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["option",{"_index":4340,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"index.html":{}}}],["optional",{"_index":308,"title":{},"body":{"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"classes/OpPeriod.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"classes/csvImport.html":{},"miscellaneous/functions.html":{},"pipes/myUnusedPipe.html":{}}}],["optionally",{"_index":2252,"title":{},"body":{"classes/GoogleGeocode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options",{"_index":1307,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"pipes/myUnusedPipe.html":{}}}],["options.cliptoboundingbox",{"_index":4641,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.cliptoboundingbox.northeast",{"_index":4645,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.cliptoboundingbox.northeast.lat",{"_index":4646,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.cliptoboundingbox.northeast.lng",{"_index":4647,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.cliptoboundingbox.southwest",{"_index":4642,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.cliptoboundingbox.southwest.lat",{"_index":4643,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.cliptoboundingbox.southwest.lng",{"_index":4644,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.cliptocircle",{"_index":4648,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.cliptocircle.center",{"_index":4649,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.cliptocircle.center.lat",{"_index":4650,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.cliptocircle.center.lng",{"_index":4651,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.cliptocircle.radius",{"_index":4652,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.cliptocountry",{"_index":4640,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.cliptopolygon",{"_index":4653,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.focus",{"_index":4636,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.focus.lat",{"_index":4637,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.focus.lng",{"_index":4638,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.inputtype",{"_index":4654,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.language",{"_index":4659,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.modifiers",{"_index":3016,"title":{},"body":{"components/IconComponent.html":{}}}],["options.nfocusresults",{"_index":4639,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["options.preferlang",{"_index":4660,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["opts",{"_index":3859,"title":{},"body":{"injectables/PostService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["orangered",{"_index":3615,"title":{},"body":{"components/NavbarComponent.html":{}}}],["order",{"_index":4622,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["origin",{"_index":3778,"title":{},"body":{"classes/Point-1.html":{}}}],["original",{"_index":3230,"title":{},"body":{"injectables/LocalStorageService.html":{},"classes/PlusCode.html":{},"injectables/SettingsService.html":{}}}],["os",{"_index":4478,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["ot",{"_index":3340,"title":{},"body":{"components/LogComponent.html":{}}}],["other.png",{"_index":4282,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["others",{"_index":2135,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/SettingsService.html":{}}}],["otherwise",{"_index":170,"title":{},"body":{"components/AboutComponent.html":{},"classes/csvImport.html":{},"license.html":{}}}],["out",{"_index":172,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"classes/CodeArea.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"modules/LazyModule.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ThreeWordsService.html":{},"classes/csvImport.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":3554,"title":{},"body":{"components/MoodEditor.html":{}}}],["outside",{"_index":2973,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["over",{"_index":508,"title":{},"body":{"classes/AngularComponentOrService.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"classes/Point.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{}}}],["over18",{"_index":1773,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["overflow",{"_index":3366,"title":{},"body":{"components/LogComponent.html":{}}}],["overlaymodule",{"_index":3501,"title":{},"body":{"modules/MaterialModule.html":{}}}],["overrun",{"_index":4105,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["overview",{"_index":2532,"title":{"overview.html":{}},"body":{"components/IconComponent.html":{},"index.html":{},"overview.html":{}}}],["overwrite/remove",{"_index":2756,"title":{},"body":{"components/IconComponent.html":{}}}],["p",{"_index":2370,"title":{},"body":{"components/IconComponent.html":{}}}],["p.createpopper",{"_index":2463,"title":{},"body":{"components/IconComponent.html":{}}}],["p.createpopper(this.button",{"_index":2598,"title":{},"body":{"components/IconComponent.html":{}}}],["pacific",{"_index":3722,"title":{},"body":{"classes/PlusCode.html":{}}}],["package",{"_index":4869,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":4139,"title":{},"body":{"injectables/SettingsService.html":{}}}],["packageasjson",{"_index":4185,"title":{},"body":{"injectables/SettingsService.html":{}}}],["packageasjson.version",{"_index":4187,"title":{},"body":{"injectables/SettingsService.html":{}}}],["packageasstring",{"_index":4183,"title":{},"body":{"injectables/SettingsService.html":{}}}],["packagejson",{"_index":4138,"title":{},"body":{"injectables/SettingsService.html":{}}}],["packages/ag",{"_index":1999,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["packet",{"_index":1608,"title":{},"body":{"injectables/FieldReportService.html":{},"miscellaneous/enumerations.html":{}}}],["pad",{"_index":919,"title":{},"body":{"classes/CodeArea.html":{}}}],["padded",{"_index":895,"title":{},"body":{"classes/CodeArea.html":{}}}],["padding",{"_index":495,"title":{},"body":{"components/AlertsComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{}}}],["padding:0",{"_index":1364,"title":{},"body":{"components/ColorEditor.html":{}}}],["padding_character_",{"_index":921,"title":{},"body":{"classes/CodeArea.html":{}}}],["padmatch[0].length",{"_index":1015,"title":{},"body":{"classes/CodeArea.html":{}}}],["page",{"_index":437,"title":{},"body":{"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FieldReportsComponent.html":{},"injectables/SettingsService.html":{},"components/X404Component.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["page/application",{"_index":4963,"title":{},"body":{"index.html":{}}}],["pages",{"_index":4149,"title":{},"body":{"injectables/SettingsService.html":{}}}],["pagination",{"_index":1957,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["painting",{"_index":236,"title":{},"body":{"components/AboutComponent.html":{}}}],["pair",{"_index":937,"title":{},"body":{"classes/CodeArea.html":{},"classes/PlusCode.html":{}}}],["pair_code_length_",{"_index":949,"title":{},"body":{"classes/CodeArea.html":{}}}],["pair_first_place_value_",{"_index":965,"title":{},"body":{"classes/CodeArea.html":{}}}],["pair_precision_",{"_index":971,"title":{},"body":{"classes/CodeArea.html":{}}}],["pair_resolutions_",{"_index":956,"title":{},"body":{"classes/CodeArea.html":{}}}],["paired",{"_index":1082,"title":{},"body":{"classes/CodeArea.html":{}}}],["pairs",{"_index":962,"title":{},"body":{"classes/CodeArea.html":{}}}],["palette",{"_index":1341,"title":{},"body":{"components/ColorEditor.html":{}}}],["panel",{"_index":1200,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["param",{"_index":1003,"title":{},"body":{"classes/CodeArea.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["parameter",{"_index":1229,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{}}}],["parameters",{"_index":307,"title":{},"body":{"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"classes/OpPeriod.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"classes/csvImport.html":{},"miscellaneous/functions.html":{},"pipes/myUnusedPipe.html":{}}}],["params",{"_index":1146,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"injectables/TeamService.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["params.api",{"_index":1992,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["params.api.setrowdata(data",{"_index":1738,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["params.api.sizecolumnstofit",{"_index":2091,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["params.columnapi",{"_index":1994,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["params.columnseparator",{"_index":2125,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["params.data.date",{"_index":2022,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["params.data.date.toisostring",{"_index":2033,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["params.data.status",{"_index":2055,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["params.value",{"_index":1937,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/MoodRenderer.html":{},"pipes/myUnusedPipe.html":{}}}],["parent",{"_index":1208,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["parent.html",{"_index":1212,"title":{},"body":{"components/ColorEditor.html":{}}}],["parent.ts",{"_index":1204,"title":{},"body":{"components/ColorEditor.html":{}}}],["parentitem='some",{"_index":1203,"title":{},"body":{"components/ColorEditor.html":{}}}],["parse",{"_index":2268,"title":{},"body":{"classes/GoogleGeocode.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"classes/csvImport.html":{}}}],["parsefloat(latlngstr[1",{"_index":1471,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"classes/Utility.html":{}}}],["part",{"_index":973,"title":{},"body":{"classes/CodeArea.html":{}}}],["partial_match",{"_index":2230,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{}}}],["partial_match\":true",{"_index":2330,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["particular",{"_index":156,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["parts",{"_index":911,"title":{},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"classes/Point-1.html":{}}}],["parts.length",{"_index":1443,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["parts[0",{"_index":1446,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["parts[1",{"_index":1447,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"classes/Point-1.html":{}}}],["parts[2",{"_index":3844,"title":{},"body":{"classes/Point-1.html":{}}}],["parts[3",{"_index":3845,"title":{},"body":{"classes/Point-1.html":{}}}],["parts[4",{"_index":3846,"title":{},"body":{"classes/Point-1.html":{}}}],["pass",{"_index":1207,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"classes/PlusCode.html":{},"pipes/myUnusedPipe.html":{}}}],["passed",{"_index":1065,"title":{},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["passing",{"_index":2523,"title":{},"body":{"components/IconComponent.html":{},"classes/csvImport.html":{}}}],["patchvalue",{"_index":2546,"title":{},"body":{"components/IconComponent.html":{}}}],["path",{"_index":808,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/IconComponent.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{}}}],["pathmatch",{"_index":811,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pay",{"_index":4080,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["payload",{"_index":3143,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["pc",{"_index":3648,"title":{},"body":{"classes/PlusCode.html":{}}}],["pc.isshort",{"_index":3708,"title":{},"body":{"classes/PlusCode.html":{}}}],["pc.isvalid(pcode",{"_index":3707,"title":{},"body":{"classes/PlusCode.html":{}}}],["pc.recovernearest(pcode",{"_index":3709,"title":{},"body":{"classes/PlusCode.html":{}}}],["pcode",{"_index":2864,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["pcode.isshort",{"_index":3753,"title":{},"body":{"classes/PlusCode.html":{}}}],["pcode.length",{"_index":2925,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["pcode.length!=0",{"_index":3751,"title":{},"body":{"classes/PlusCode.html":{}}}],["pdf",{"_index":4473,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["per",{"_index":4219,"title":{},"body":{"injectables/SettingsService.html":{}}}],["performance",{"_index":1768,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["performance.now",{"_index":2041,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["perhaps",{"_index":4214,"title":{},"body":{"injectables/SettingsService.html":{}}}],["period",{"_index":3523,"title":{},"body":{"classes/Mission.html":{}}}],["period.ts",{"_index":3631,"title":{},"body":{"classes/OpPeriod.html":{},"coverage.html":{}}}],["period.ts:12",{"_index":3637,"title":{},"body":{"classes/OpPeriod.html":{}}}],["period.ts:13",{"_index":3635,"title":{},"body":{"classes/OpPeriod.html":{}}}],["period.ts:14",{"_index":3634,"title":{},"body":{"classes/OpPeriod.html":{}}}],["period.ts:21",{"_index":3636,"title":{},"body":{"classes/OpPeriod.html":{}}}],["period.ts:30",{"_index":3639,"title":{},"body":{"classes/OpPeriod.html":{}}}],["period.ts:36",{"_index":3638,"title":{},"body":{"classes/OpPeriod.html":{}}}],["period.ts:41",{"_index":3641,"title":{},"body":{"classes/OpPeriod.html":{}}}],["period.ts:45",{"_index":3640,"title":{},"body":{"classes/OpPeriod.html":{}}}],["permanent",{"_index":367,"title":{},"body":{"components/AlertsComponent.html":{}}}],["permission",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["permit",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["person",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{},"license.html":{}}}],["persons",{"_index":135,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["pg",{"_index":607,"title":{},"body":{"components/AppComponent.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["phone",{"_index":1216,"title":{},"body":{"components/ColorEditor.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["physical",{"_index":4946,"title":{},"body":{"index.html":{}}}],["pi",{"_index":2043,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["picker",{"_index":718,"title":{},"body":{"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/IconComponent.html":{},"dependencies.html":{}}}],["pipe",{"_index":1976,"title":{"pipes/myUnusedPipe.html":{}},"body":{"components/FieldReportsComponent.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{},"pipes/myUnusedPipe.html":{},"overview.html":{}}}],["pipes",{"_index":773,"title":{},"body":{"modules/AppModule.html":{},"pipes/myUnusedPipe.html":{}}}],["pipetransform",{"_index":1977,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["pl",{"_index":2288,"title":{},"body":{"classes/GoogleGeocode.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["place",{"_index":916,"title":{},"body":{"classes/CodeArea.html":{},"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["place_id\":\"chij6ck8aczfkfqr_yhgzrmtslm",{"_index":2331,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["placeid",{"_index":2226,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{}}}],["placement",{"_index":2396,"title":{},"body":{"components/IconComponent.html":{},"miscellaneous/typealiases.html":{}}}],["plain",{"_index":426,"title":{},"body":{"components/AlertsComponent.html":{},"components/LogComponent.html":{}}}],["platform",{"_index":4382,"title":{},"body":{"injectables/ThreeWordsService.html":{},"index.html":{}}}],["please",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"injectables/SettingsService.html":{},"index.html":{}}}],["plural",{"_index":4619,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["plus",{"_index":2814,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["plus_code",{"_index":2231,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{}}}],["pluscode",{"_index":2923,"title":{"classes/PlusCode.html":{}},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{},"coverage.html":{}}}],["pluscode2",{"_index":3762,"title":{},"body":{"classes/PlusCode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluscodes",{"_index":2935,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["point",{"_index":1060,"title":{"classes/Point.html":{},"classes/Point-1.html":{}},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["point(new",{"_index":3782,"title":{},"body":{"classes/Point-1.html":{}}}],["point(this.lat.dd",{"_index":3801,"title":{},"body":{"classes/Point-1.html":{}}}],["pointdd",{"_index":1460,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["pointdd(0",{"_index":3789,"title":{},"body":{"classes/Point-1.html":{}}}],["pointdd(47.4472",{"_index":3791,"title":{},"body":{"classes/Point-1.html":{}}}],["pointdd.origin",{"_index":3788,"title":{},"body":{"classes/Point-1.html":{}}}],["pointdd.vashon",{"_index":3790,"title":{},"body":{"classes/Point-1.html":{}}}],["pointdms",{"_index":3804,"title":{},"body":{"classes/Point-1.html":{}}}],["pointdms(this.lat.todms(false",{"_index":3805,"title":{},"body":{"classes/Point-1.html":{}}}],["points",{"_index":3660,"title":{},"body":{"classes/PlusCode.html":{}}}],["polygon",{"_index":4628,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["popcorn",{"_index":3056,"title":{},"body":{"components/IconComponent.html":{}}}],["popper",{"_index":3009,"title":{},"body":{"components/IconComponent.html":{}}}],["popper(reference",{"_index":3052,"title":{},"body":{"components/IconComponent.html":{}}}],["popperelement",{"_index":2410,"title":{},"body":{"components/IconComponent.html":{}}}],["popperinstance",{"_index":2461,"title":{},"body":{"components/IconComponent.html":{}}}],["popperjs/core",{"_index":2371,"title":{},"body":{"components/IconComponent.html":{},"dependencies.html":{}}}],["popperoptions",{"_index":3045,"title":{},"body":{"components/IconComponent.html":{}}}],["populate",{"_index":4162,"title":{},"body":{"injectables/SettingsService.html":{}}}],["populategrid",{"_index":4754,"title":{},"body":{"classes/csvImport.html":{}}}],["populategrid(workbook",{"_index":4765,"title":{},"body":{"classes/csvImport.html":{}}}],["population",{"_index":3414,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/PopupService.html":{}}}],["popup",{"_index":1850,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["popup.service",{"_index":3402,"title":{},"body":{"injectables/MarkerService.html":{}}}],["popupanchor",{"_index":5010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["popups",{"_index":1846,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["popupservice",{"_index":654,"title":{"injectables/PopupService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MarkerService.html":{},"injectables/PopupService.html":{},"coverage.html":{},"overview.html":{}}}],["porsche",{"_index":4355,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["portalmodule",{"_index":3503,"title":{},"body":{"modules/MaterialModule.html":{}}}],["portions",{"_index":146,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["pos",{"_index":2755,"title":{},"body":{"components/IconComponent.html":{}}}],["position",{"_index":951,"title":{},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{}}}],["position\":null",{"_index":2296,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["position:absolute",{"_index":3610,"title":{},"body":{"components/NavbarComponent.html":{}}}],["position:google.maps.latlng",{"_index":2335,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["positioning",{"_index":3039,"title":{},"body":{"components/IconComponent.html":{}}}],["positioningstrategy",{"_index":2401,"title":{},"body":{"components/IconComponent.html":{}}}],["positions",{"_index":2894,"title":{},"body":{"components/IconComponent.html":{}}}],["possibilities",{"_index":4625,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["possible",{"_index":1112,"title":{},"body":{"classes/CodeArea.html":{},"injectables/LocalStorageService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["possibly",{"_index":4935,"title":{},"body":{"index.html":{}}}],["post",{"_index":1249,"title":{},"body":{"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"components/MoodEditor.html":{}}}],["postservice",{"_index":2502,"title":{"injectables/PostService.html":{}},"body":{"components/IconComponent.html":{},"injectables/PostService.html":{},"coverage.html":{}}}],["potential",{"_index":3288,"title":{},"body":{"injectables/LocalStorageService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["pre",{"_index":3357,"title":{},"body":{"components/LogComponent.html":{}}}],["precise",{"_index":3681,"title":{},"body":{"classes/PlusCode.html":{}}}],["precision",{"_index":969,"title":{},"body":{"classes/CodeArea.html":{}}}],["precisions",{"_index":1128,"title":{},"body":{"classes/CodeArea.html":{}}}],["preferences",{"_index":4217,"title":{},"body":{"injectables/SettingsService.html":{}}}],["prefix",{"_index":948,"title":{},"body":{"classes/CodeArea.html":{}}}],["prefixed",{"_index":525,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["prefixing",{"_index":3297,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["preloadallmodules",{"_index":800,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloaded",{"_index":826,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":832,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["present",{"_index":3940,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"classes/csvImport.html":{}}}],["presented",{"_index":4610,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["prevents",{"_index":4568,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["previous",{"_index":186,"title":{},"body":{"components/AboutComponent.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{}}}],["primary",{"_index":460,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["primitive",{"_index":3307,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["printer",{"_index":2156,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["prioritizes",{"_index":4569,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["private",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"injectables/MarkerService.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"classes/Point.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["proceed",{"_index":578,"title":{},"body":{"components/AppComponent.html":{}}}],["process",{"_index":1077,"title":{},"body":{"classes/CodeArea.html":{},"injectables/FieldReportService.html":{}}}],["processing",{"_index":1712,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["prod.appspot.com/maps/documentation/utils/geocoder",{"_index":2241,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["produce",{"_index":4615,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["production",{"_index":5005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":4164,"title":{},"body":{"injectables/SettingsService.html":{}}}],["programming",{"_index":3094,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["progressive",{"_index":4932,"title":{},"body":{"index.html":{}}}],["project",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":610,"title":{},"body":{"components/AppComponent.html":{},"components/IconComponent.html":{}}}],["promise",{"_index":588,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{}}}],["promise(resolve",{"_index":4407,"title":{},"body":{"classes/Utility.html":{}}}],["promises",{"_index":3164,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["propagates",{"_index":1308,"title":{},"body":{"components/ColorEditor.html":{}}}],["proper",{"_index":1655,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["properties",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"components/LazyComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/Point-1.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["property",{"_index":620,"title":{},"body":{"components/AppComponent.html":{},"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{}}}],["proposed",{"_index":1087,"title":{},"body":{"classes/CodeArea.html":{}}}],["prototype",{"_index":3787,"title":{},"body":{"classes/Point-1.html":{}}}],["prototyping",{"_index":3866,"title":{},"body":{"injectables/PostService.html":{}}}],["provide",{"_index":390,"title":{},"body":{"components/AlertsComponent.html":{},"modules/AppModule.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["provided",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"injectables/ThreeWordsService.html":{},"license.html":{}}}],["providedin",{"_index":1513,"title":{},"body":{"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"injectables/LocalStorageService.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"injectables/ThreeWordsService.html":{}}}],["provider",{"_index":819,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/FieldReportService.html":{}}}],["providers",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"components/IconComponent.html":{},"modules/LazyModule.html":{}}}],["provides",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"index.html":{}}}],["pt",{"_index":3698,"title":{},"body":{"classes/PlusCode.html":{}}}],["public",{"_index":853,"title":{},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"classes/OpPeriod.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["publish",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"license.html":{}}}],["pull",{"_index":4808,"title":{},"body":{"classes/csvImport.html":{}}}],["pulling",{"_index":4822,"title":{},"body":{"classes/csvImport.html":{}}}],["purpose",{"_index":157,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["purpose/feature",{"_index":3091,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["push",{"_index":4298,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["put",{"_index":1665,"title":{},"body":{"injectables/FieldReportService.html":{},"index.html":{}}}],["pv",{"_index":1080,"title":{},"body":{"classes/CodeArea.html":{}}}],["pwa",{"_index":4934,"title":{},"body":{"index.html":{}}}],["pwa/local",{"_index":505,"title":{},"body":{"classes/AngularComponentOrService.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"dependencies.html":{}}}],["px",{"_index":209,"title":{},"body":{"components/AboutComponent.html":{}}}],["query",{"_index":3668,"title":{},"body":{"classes/PlusCode.html":{}}}],["quick",{"_index":4489,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["r",{"_index":1147,"title":{},"body":{"components/ColorEditor.html":{},"classes/Point-1.html":{}}}],["r\":255,\"g\":243,\"b\":0,\"a\":1,\"rounda\":1,\"hex\":\"fff300\",\"rgba\":\"rgba(255,243,0,1",{"_index":1261,"title":{},"body":{"components/ColorEditor.html":{}}}],["r3injectorerror(appmodule)[settingscomponent",{"_index":818,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["r:number",{"_index":1233,"title":{},"body":{"components/ColorEditor.html":{}}}],["racoons",{"_index":4106,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["radio",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["radius",{"_index":1360,"title":{},"body":{"components/ColorEditor.html":{},"components/LogComponent.html":{},"injectables/MarkerService.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["range",{"_index":1121,"title":{},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["ranger",{"_index":793,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{},"classes/OpPeriod.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["ranger.address",{"_index":3976,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["ranger.callsign",{"_index":2629,"title":{},"body":{"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["ranger.callsign.tolowercase().includes(filtervalue",{"_index":2563,"title":{},"body":{"components/IconComponent.html":{}}}],["ranger.icon",{"_index":3979,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["ranger.image",{"_index":3977,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["ranger.licensee",{"_index":2630,"title":{},"body":{"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["ranger.licensekey",{"_index":3974,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["ranger.note",{"_index":3981,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["ranger.phone",{"_index":2631,"title":{},"body":{"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["ranger.service.ts:60:10",{"_index":3973,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["ranger.service.ts:82:43",{"_index":3972,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["ranger.status",{"_index":3980,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["ranger.team",{"_index":3978,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["ranger1.callsign.tolowercase().includes(filtervalue",{"_index":2558,"title":{},"body":{"components/IconComponent.html":{}}}],["rangers",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"components/NavbarComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"index.html":{}}}],["rangers'},{'name",{"_index":280,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["rangers.2feb22.json",{"_index":3957,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["rangers.3feb22.json",{"_index":4016,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["rangers.json",{"_index":391,"title":{},"body":{"components/AlertsComponent.html":{}}}],["rangers.length",{"_index":1737,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["rangers/rangers.component",{"_index":727,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["rangers2",{"_index":3947,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["rangerscomponent",{"_index":279,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"coverage.html":{},"overview.html":{}}}],["rangerservice",{"_index":655,"title":{"injectables/RangerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"coverage.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{},"overview.html":{}}}],["rangerservice.getrangers",{"_index":2518,"title":{},"body":{"components/IconComponent.html":{}}}],["rangerservice.updatelocalstorage",{"_index":3971,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["rangerssubject",{"_index":3876,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["rangerstatus",{"_index":3930,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["rangertrak",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"injectables/SettingsService.html":{},"components/X404Component.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["rangertrak.org",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{}}}],["rangertrax",{"_index":3142,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["rangertype",{"_index":667,"title":{"interfaces/RangerType.html":{}},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"coverage.html":{}}}],["rangerworkaround",{"_index":4004,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["raw",{"_index":4799,"title":{},"body":{"classes/csvImport.html":{}}}],["reactive",{"_index":1267,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["reactiveformsmodule",{"_index":674,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{}}}],["read",{"_index":456,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"injectables/LocalStorageService.html":{},"components/MoodEditor.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{}}}],["reader",{"_index":4036,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["reader.onload",{"_index":4044,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["reader.readasarraybuffer(target.files[0",{"_index":4069,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["readonly",{"_index":904,"title":{},"body":{"classes/CodeArea.html":{},"components/IconComponent.html":{}}}],["rebuild",{"_index":631,"title":{},"body":{"components/AppComponent.html":{}}}],["recalcfieldbounds",{"_index":1541,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["received",{"_index":1782,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{}}}],["recent",{"_index":2128,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["recommend",{"_index":1271,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["recorded",{"_index":3525,"title":{},"body":{"classes/Mission.html":{},"classes/OpPeriod.html":{}}}],["recording",{"_index":4944,"title":{},"body":{"index.html":{}}}],["recover",{"_index":2928,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["recovernearest",{"_index":3671,"title":{},"body":{"classes/PlusCode.html":{}}}],["recovernearest(pcode",{"_index":3754,"title":{},"body":{"classes/PlusCode.html":{}}}],["rectangles",{"_index":3658,"title":{},"body":{"classes/PlusCode.html":{}}}],["red",{"_index":488,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["red').pipe",{"_index":3221,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["red').subscribe",{"_index":3290,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["redirects",{"_index":813,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirectto",{"_index":809,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refer",{"_index":3655,"title":{},"body":{"classes/PlusCode.html":{}}}],["reference",{"_index":1091,"title":{},"body":{"classes/CodeArea.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"index.html":{}}}],["referencelatitude",{"_index":1098,"title":{},"body":{"classes/CodeArea.html":{}}}],["refinement",{"_index":977,"title":{},"body":{"classes/CodeArea.html":{}}}],["reflect",{"_index":2013,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["reflow",{"_index":2662,"title":{},"body":{"components/IconComponent.html":{}}}],["refresh",{"_index":580,"title":{},"body":{"components/AppComponent.html":{},"components/FieldReportsComponent.html":{},"injectables/LocalStorageService.html":{},"components/MoodRenderer.html":{}}}],["refresh(params",{"_index":3564,"title":{},"body":{"components/MoodRenderer.html":{}}}],["refreshgrid",{"_index":1893,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["reg",{"_index":4501,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["regardless",{"_index":4939,"title":{},"body":{"index.html":{}}}],["regex",{"_index":3661,"title":{},"body":{"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["regex.test(threewords",{"_index":4528,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["regexp",{"_index":1027,"title":{},"body":{"classes/CodeArea.html":{}}}],["regexp(openlocationcode.padding_character_",{"_index":1029,"title":{},"body":{"classes/CodeArea.html":{}}}],["region",{"_index":2256,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["regions",{"_index":3659,"title":{},"body":{"classes/PlusCode.html":{}}}],["register",{"_index":760,"title":{},"body":{"modules/AppModule.html":{}}}],["registering",{"_index":4378,"title":{},"body":{"injectables/ThreeWordsService.html":{}}}],["registers",{"_index":4373,"title":{},"body":{"injectables/ThreeWordsService.html":{}}}],["registerwhenstable:30000",{"_index":770,"title":{},"body":{"modules/AppModule.html":{}}}],["registrationstrategy",{"_index":769,"title":{},"body":{"modules/AppModule.html":{}}}],["regular",{"_index":4885,"title":{},"body":{"dependencies.html":{}}}],["reguritation",{"_index":2585,"title":{},"body":{"components/IconComponent.html":{}}}],["relative",{"_index":1358,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["release",{"_index":4182,"title":{},"body":{"injectables/SettingsService.html":{}}}],["reliably",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["reload",{"_index":601,"title":{},"body":{"components/AppComponent.html":{},"components/FieldReportsComponent.html":{},"index.html":{}}}],["reloadpage",{"_index":1894,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["rely",{"_index":1710,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["remove",{"_index":534,"title":{},"body":{"classes/AngularComponentOrService.html":{},"classes/CodeArea.html":{},"classes/PlusCode.html":{}}}],["removed",{"_index":1108,"title":{},"body":{"classes/CodeArea.html":{},"injectables/LocalStorageService.html":{}}}],["removeitem",{"_index":3199,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removeondestroy",{"_index":3046,"title":{},"body":{"components/IconComponent.html":{}}}],["removing",{"_index":2654,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["renderer.component",{"_index":683,"title":{},"body":{"modules/AppModule.html":{}}}],["renderer.component.ts",{"_index":3558,"title":{},"body":{"components/MoodRenderer.html":{},"coverage.html":{}}}],["renderer.component.ts:10",{"_index":3570,"title":{},"body":{"components/MoodRenderer.html":{}}}],["renderer.component.ts:11",{"_index":3569,"title":{},"body":{"components/MoodRenderer.html":{}}}],["renderer.component.ts:12",{"_index":3568,"title":{},"body":{"components/MoodRenderer.html":{}}}],["renderer.component.ts:14",{"_index":3563,"title":{},"body":{"components/MoodRenderer.html":{}}}],["renderer.component.ts:19",{"_index":3565,"title":{},"body":{"components/MoodRenderer.html":{}}}],["renderer.component.ts:25",{"_index":3567,"title":{},"body":{"components/MoodRenderer.html":{}}}],["rendering",{"_index":2572,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["repeatedly",{"_index":1621,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["replace",{"_index":1647,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["replace(new",{"_index":1028,"title":{},"body":{"classes/CodeArea.html":{}}}],["replaced",{"_index":4274,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["replaces",{"_index":3983,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["replacing",{"_index":2545,"title":{},"body":{"components/IconComponent.html":{}}}],["report",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"injectables/SettingsService.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["report.date",{"_index":1723,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts",{"_index":1519,"title":{},"body":{"injectables/FieldReportService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["report.service.ts:117",{"_index":1572,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:122",{"_index":1584,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:128",{"_index":1558,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:135",{"_index":1556,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:142",{"_index":1588,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:160",{"_index":1563,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:170",{"_index":1577,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:181",{"_index":1578,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:190",{"_index":1574,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:194",{"_index":1573,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:198",{"_index":1576,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:23",{"_index":1602,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:24",{"_index":1595,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:25",{"_index":1598,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:256",{"_index":1586,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:26",{"_index":1600,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:263",{"_index":1569,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:27",{"_index":1599,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:272",{"_index":1579,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:28",{"_index":1597,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:280",{"_index":1560,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:30",{"_index":1593,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:31",{"_index":1589,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:313",{"_index":1565,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:32",{"_index":1551,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:74",{"_index":1582,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:78",{"_index":1575,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:82",{"_index":1555,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["report.service.ts:97",{"_index":1553,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["reportgs",{"_index":2161,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reporting",{"_index":4925,"title":{},"body":{"index.html":{}}}],["reports",{"_index":821,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"injectables/MarkerService.html":{},"components/NavbarComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"pipes/myUnusedPipe.html":{}}}],["reports'},{'name",{"_index":261,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["reports.component",{"_index":696,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["reports.component.html",{"_index":1869,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["reports.component.scss",{"_index":1868,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["reports.component.ts",{"_index":1867,"title":{},"body":{"components/FieldReportsComponent.html":{},"coverage.html":{},"pipes/myUnusedPipe.html":{}}}],["reports.component.ts:124",{"_index":1969,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:135",{"_index":1942,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:178",{"_index":1914,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:202",{"_index":1921,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:206",{"_index":1912,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:223",{"_index":1974,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:233",{"_index":1920,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:243",{"_index":1909,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:262",{"_index":1905,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:270",{"_index":1919,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:277",{"_index":1916,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:287",{"_index":1915,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:293",{"_index":1918,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:297",{"_index":1917,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:301",{"_index":1903,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:313",{"_index":1898,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:322",{"_index":1901,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:45",{"_index":1952,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:46",{"_index":1953,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:47",{"_index":1975,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:49",{"_index":1954,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:50",{"_index":1955,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:51",{"_index":1971,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:52",{"_index":1966,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:53",{"_index":1973,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:54",{"_index":1967,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:55",{"_index":1972,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:56",{"_index":1970,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:59",{"_index":1965,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:71",{"_index":1951,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:79",{"_index":1896,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports.component.ts:9",{"_index":4991,"title":{},"body":{"pipes/myUnusedPipe.html":{}}}],["reports.component.ts:98",{"_index":1968,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["reports/field",{"_index":695,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FieldReportsComponent.html":{},"coverage.html":{},"pipes/myUnusedPipe.html":{}}}],["represents",{"_index":852,"title":{},"body":{"classes/CodeArea.html":{}}}],["reque",{"_index":2342,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["request",{"_index":2343,"title":{},"body":{"classes/GoogleGeocode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["requested",{"_index":469,"title":{},"body":{"components/AlertsComponent.html":{}}}],["requests",{"_index":4493,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["required",{"_index":780,"title":{},"body":{"modules/AppModule.html":{},"classes/CodeArea.html":{},"injectables/LocalStorageService.html":{}}}],["requires",{"_index":454,"title":{},"body":{"components/AlertsComponent.html":{},"components/FieldReportsComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"pipes/myUnusedPipe.html":{}}}],["requiring",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["res",{"_index":4544,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["res.features",{"_index":3406,"title":{},"body":{"injectables/MarkerService.html":{}}}],["rescue",{"_index":4923,"title":{},"body":{"index.html":{}}}],["reset",{"_index":659,"title":{},"body":{"modules/AppModule.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"modules/LazyModule.html":{},"injectables/SettingsService.html":{},"overview.html":{}}}],["reset_animation(element",{"_index":2657,"title":{},"body":{"components/IconComponent.html":{}}}],["resetdefaults",{"_index":4113,"title":{},"body":{"injectables/SettingsService.html":{}}}],["resetfieldreportstatusdefaults",{"_index":4114,"title":{},"body":{"injectables/SettingsService.html":{}}}],["resetform",{"_index":2606,"title":{},"body":{"components/IconComponent.html":{}}}],["resizable",{"_index":1948,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["resize",{"_index":2149,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["resizing",{"_index":2093,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["resolution",{"_index":950,"title":{},"body":{"classes/CodeArea.html":{}}}],["resolve",{"_index":815,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["resolvejsonmodule",{"_index":4013,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["resolves",{"_index":4487,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["response",{"_index":2971,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["response.coordinates.lat",{"_index":4608,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["response.coordinates.lng",{"_index":2985,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["response.nearestplace",{"_index":2990,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["response.results[0",{"_index":2245,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["response.results[0].formatted_address",{"_index":2246,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["response.suggestions[0].words",{"_index":2977,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["responsible",{"_index":4482,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["rest",{"_index":1319,"title":{},"body":{"components/ColorEditor.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ThreeWordsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["restarts",{"_index":3103,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["restriction",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["result",{"_index":518,"title":{},"body":{"classes/AngularComponentOrService.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["result.address",{"_index":2874,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["result.dismissedbyaction",{"_index":617,"title":{},"body":{"components/AppComponent.html":{}}}],["result.partial_match",{"_index":2876,"title":{},"body":{"components/IconComponent.html":{}}}],["result.placeid",{"_index":2875,"title":{},"body":{"components/IconComponent.html":{}}}],["result.plus_code",{"_index":2877,"title":{},"body":{"components/IconComponent.html":{}}}],["result.position",{"_index":2872,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["result.position.lat",{"_index":2953,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["result.position.long",{"_index":3706,"title":{},"body":{"classes/PlusCode.html":{}}}],["result:${json.stringify(result",{"_index":2951,"title":{},"body":{"components/IconComponent.html":{}}}],["result:any",{"_index":606,"title":{},"body":{"components/AppComponent.html":{}}}],["result:google.maps.geocoderresult",{"_index":3001,"title":{},"body":{"components/IconComponent.html":{}}}],["resulting",{"_index":955,"title":{},"body":{"classes/CodeArea.html":{}}}],["results",{"_index":287,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"components/LazyComponent.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"modules/MaterialModule.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"classes/StreetAddress.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"changelog.html":{},"coverage.html":{},"classes/csvImport.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"pipes/myUnusedPipe.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results=5&focus=51.521251%2c",{"_index":2967,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["results[0",{"_index":2276,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["results[0].formatted_address",{"_index":2281,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["results[0].geometry.location",{"_index":2280,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["results[0].partial_match",{"_index":2282,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["results[0].place_id",{"_index":2283,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["results[0].plus_code",{"_index":2284,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["retrieved",{"_index":2065,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["return",{"_index":884,"title":{},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["return(null",{"_index":1941,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["return_coordinates",{"_index":4521,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["returned",{"_index":2265,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["returning",{"_index":2278,"title":{},"body":{"classes/GoogleGeocode.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["returns",{"_index":316,"title":{},"body":{"components/AlertsComponent.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["reversed",{"_index":1700,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["review",{"_index":365,"title":{},"body":{"components/AlertsComponent.html":{},"modules/AppModule.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/Point.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"pipes/myUnusedPipe.html":{}}}],["rew",{"_index":3931,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["rewrite",{"_index":1683,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["rgb(137",{"_index":3592,"title":{},"body":{"components/NavbarComponent.html":{}}}],["rgb(145",{"_index":3598,"title":{},"body":{"components/NavbarComponent.html":{}}}],["rgb(165",{"_index":3619,"title":{},"body":{"components/NavbarComponent.html":{}}}],["rgb(226",{"_index":1397,"title":{},"body":{"components/ColorEditor.html":{},"components/LogComponent.html":{}}}],["rgb(240",{"_index":2178,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["rgb(246",{"_index":2167,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["rgb(57",{"_index":3360,"title":{},"body":{"components/LogComponent.html":{}}}],["rgba",{"_index":1336,"title":{},"body":{"components/ColorEditor.html":{}}}],["rgba(0",{"_index":1396,"title":{},"body":{"components/ColorEditor.html":{}}}],["rgba(252",{"_index":215,"title":{},"body":{"components/AboutComponent.html":{}}}],["rgba(8",{"_index":218,"title":{},"body":{"components/AboutComponent.html":{}}}],["rich",{"_index":3092,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["right",{"_index":191,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"miscellaneous/typealiases.html":{}}}],["rights",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["roadmap",{"_index":4950,"title":{},"body":{"index.html":{}}}],["roadster",{"_index":4351,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["roaming",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["rocket",{"_index":2767,"title":{},"body":{"components/IconComponent.html":{}}}],["root",{"_index":548,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"injectables/LocalStorageService.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"injectables/ThreeWordsService.html":{}}}],["root'},{'name",{"_index":253,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["roudy",{"_index":4089,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["route",{"_index":830,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["routereusestrategy",{"_index":794,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":801,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{}}}],["routermodule.forchild",{"_index":3126,"title":{},"body":{"modules/LazyModule.html":{}}}],["routermodule.forchild(routes",{"_index":3133,"title":{},"body":{"modules/LazyRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":831,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":802,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/LazyRoutingModule.html":{},"routes.html":{}}}],["routine",{"_index":2095,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["routing.module",{"_index":688,"title":{},"body":{"modules/AppModule.html":{},"modules/LazyModule.html":{}}}],["routing.module.ts",{"_index":799,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/LazyRoutingModule.html":{}}}],["row",{"_index":1961,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/NavbarComponent.html":{},"classes/PlusCode.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["row:any",{"_index":4825,"title":{},"body":{"classes/csvImport.html":{}}}],["row[columns[column",{"_index":4857,"title":{},"body":{"classes/csvImport.html":{}}}],["rowdata",{"_index":4366,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/csvImport.html":{},"miscellaneous/variables.html":{}}}],["rowdata.push(row",{"_index":4859,"title":{},"body":{"classes/csvImport.html":{}}}],["rowindex",{"_index":4821,"title":{},"body":{"classes/csvImport.html":{}}}],["rowindex].w",{"_index":4829,"title":{},"body":{"classes/csvImport.html":{}}}],["rowpv",{"_index":1083,"title":{},"body":{"classes/CodeArea.html":{}}}],["rows",{"_index":980,"title":{},"body":{"classes/CodeArea.html":{},"injectables/MarkerService.html":{}}}],["rowselection",{"_index":1956,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["rule",{"_index":1391,"title":{},"body":{"components/ColorEditor.html":{}}}],["run",{"_index":1206,"title":{},"body":{"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/SettingsService.html":{},"index.html":{}}}],["running",{"_index":2743,"title":{},"body":{"components/IconComponent.html":{},"index.html":{}}}],["rxfire",{"_index":4904,"title":{},"body":{"dependencies.html":{}}}],["rxjs",{"_index":528,"title":{},"body":{"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/OpPeriod.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":633,"title":{},"body":{"components/AppComponent.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/OpPeriod.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["s",{"_index":1426,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"components/IconComponent.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["s)([23456789c][23456789cfghjmpqrv][23456789cfghjmpqrvwx]{6}\\+[23456789cfghjmpqrvwx]{2,3})(\\s|$)/?i",{"_index":3662,"title":{},"body":{"classes/PlusCode.html":{}}}],["s)([23456789cfghjmpqrvwx]{4,6}\\+[23456789cfghjmpqrvwx]{2,3})(\\s|$)/?i",{"_index":3667,"title":{},"body":{"classes/PlusCode.html":{}}}],["s*(\\d{0,2})[']?(\\d{0,2})[.,]?(\\d{0,})(?:[\"]|[']{2",{"_index":3839,"title":{},"body":{"classes/Point-1.html":{}}}],["s:${south",{"_index":1720,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["s?[nsew]\\s",{"_index":3836,"title":{},"body":{"classes/Point-1.html":{}}}],["s?[sw]\\s",{"_index":3834,"title":{},"body":{"classes/Point-1.html":{}}}],["sad",{"_index":3548,"title":{},"body":{"components/MoodEditor.html":{}}}],["sad.png",{"_index":3578,"title":{},"body":{"components/MoodRenderer.html":{}}}],["safety",{"_index":1124,"title":{},"body":{"classes/CodeArea.html":{}}}],["sales",{"_index":4023,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["same",{"_index":782,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"classes/PlusCode.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["sample",{"_index":1861,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["sampledata",{"_index":2551,"title":{},"body":{"components/IconComponent.html":{}}}],["sanitizer",{"_index":2500,"title":{},"body":{"components/IconComponent.html":{}}}],["sanitizer.bypasssecuritytrusthtml(thumbup_icon",{"_index":2509,"title":{},"body":{"components/IconComponent.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('icon.svg",{"_index":2507,"title":{},"body":{"components/IconComponent.html":{}}}],["sans",{"_index":2181,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/LogComponent.html":{},"components/NavbarComponent.html":{}}}],["sans\",helvetica",{"_index":2210,"title":{},"body":{"components/FooterComponent.html":{}}}],["sat",{"_index":2021,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["save",{"_index":1461,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"components/FieldReportsComponent.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"classes/Point.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"index.html":{}}}],["saved",{"_index":2137,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/SettingsService.html":{}}}],["saving",{"_index":2986,"title":{},"body":{"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["scaledradius",{"_index":3383,"title":{},"body":{"injectables/MarkerService.html":{}}}],["scaledradius(val",{"_index":3394,"title":{},"body":{"injectables/MarkerService.html":{}}}],["scenarios",{"_index":3313,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["schema",{"_index":3169,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["schemaerror",{"_index":3198,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["scope",{"_index":4379,"title":{},"body":{"injectables/ThreeWordsService.html":{}}}],["scoped",{"_index":788,"title":{},"body":{"modules/AppModule.html":{}}}],["scratch",{"_index":1646,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["screen",{"_index":3625,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SettingsService.html":{}}}],["screenshots",{"_index":4953,"title":{},"body":{"index.html":{}}}],["scrollingmodule",{"_index":3505,"title":{},"body":{"modules/MaterialModule.html":{}}}],["scrollwheel",{"_index":2430,"title":{},"body":{"components/IconComponent.html":{}}}],["sea",{"_index":4664,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["search",{"_index":3583,"title":{},"body":{"components/NavbarComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"index.html":{}}}],["sec",{"_index":1485,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"classes/Point-1.html":{}}}],["second",{"_index":612,"title":{},"body":{"components/AppComponent.html":{},"classes/PlusCode.html":{}}}],["second.callsign",{"_index":4072,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["seconde",{"_index":3842,"title":{},"body":{"classes/Point-1.html":{}}}],["secondes",{"_index":3840,"title":{},"body":{"classes/Point-1.html":{}}}],["seconds",{"_index":765,"title":{},"body":{"modules/AppModule.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"classes/Point-1.html":{},"pipes/myUnusedPipe.html":{}}}],["secrets",{"_index":4110,"title":{},"body":{"injectables/SettingsService.html":{}}}],["secretss",{"_index":3992,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["secrettype",{"_index":4130,"title":{},"body":{"injectables/SettingsService.html":{},"miscellaneous/typealiases.html":{}}}],["secretworkaround",{"_index":4150,"title":{},"body":{"injectables/SettingsService.html":{}}}],["section",{"_index":970,"title":{},"body":{"classes/CodeArea.html":{},"components/FieldReportsComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["secure",{"_index":3280,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["security",{"_index":4191,"title":{},"body":{"injectables/SettingsService.html":{}}}],["see",{"_index":515,"title":{},"body":{"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"changelog.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["seem",{"_index":4294,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["sel",{"_index":2102,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["select",{"_index":1342,"title":{},"body":{"components/ColorEditor.html":{}}}],["selectable/savable",{"_index":4216,"title":{},"body":{"injectables/SettingsService.html":{}}}],["selected",{"_index":3556,"title":{},"body":{"components/MoodEditor.html":{}}}],["selecting",{"_index":2143,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["selection",{"_index":1199,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/MoodEditor.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"pipes/myUnusedPipe.html":{}}}],["selector.options[sel",{"_index":2105,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["selector.selectedindex",{"_index":2103,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["self",{"_index":3609,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sell",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["seltext",{"_index":2108,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["selval",{"_index":2106,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["send",{"_index":1658,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["sense",{"_index":3304,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["separate",{"_index":779,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThreeWordsService.html":{}}}],["separately",{"_index":1054,"title":{},"body":{"classes/CodeArea.html":{}}}],["separator",{"_index":908,"title":{},"body":{"classes/CodeArea.html":{},"components/FieldReportsComponent.html":{}}}],["separator_",{"_index":914,"title":{},"body":{"classes/CodeArea.html":{}}}],["separator_position_",{"_index":917,"title":{},"body":{"classes/CodeArea.html":{}}}],["seperated",{"_index":2154,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["seperator",{"_index":2112,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["seperators",{"_index":2148,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["serialize",{"_index":1498,"title":{},"body":{"classes/Coordinate.html":{},"injectables/LocalStorageService.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{}}}],["serialize(name",{"_index":1463,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/LocalStorageService.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"classes/Point.html":{}}}],["serializing",{"_index":3301,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["serif",{"_index":2182,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/LogComponent.html":{},"components/NavbarComponent.html":{}}}],["serve",{"_index":4220,"title":{},"body":{"injectables/SettingsService.html":{},"index.html":{}}}],["server",{"_index":1640,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"index.html":{}}}],["serves",{"_index":2618,"title":{},"body":{"components/IconComponent.html":{}}}],["service",{"_index":589,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/ShapeService.html":{},"injectables/ThreeWordsService.html":{},"index.html":{}}}],["service').pipe",{"_index":1516,"title":{},"body":{"injectables/DataService.html":{},"injectables/LocalStorageService.html":{}}}],["service/utility",{"_index":2722,"title":{},"body":{"components/IconComponent.html":{}}}],["services",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"classes/OpPeriod.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"index.html":{}}}],["serviceworker",{"_index":761,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule",{"_index":730,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":756,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":922,"title":{},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"injectables/SettingsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{}}}],["set(index",{"_index":3166,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setage(theage",{"_index":3771,"title":{},"body":{"classes/Point.html":{}}}],["setcolor",{"_index":1158,"title":{},"body":{"components/ColorEditor.html":{}}}],["setcolor(color",{"_index":1176,"title":{},"body":{"components/ColorEditor.html":{}}}],["setfullname(name",{"_index":3775,"title":{},"body":{"classes/Point.html":{}}}],["sethappy",{"_index":3534,"title":{},"body":{"components/MoodEditor.html":{}}}],["sethappy(happy",{"_index":3540,"title":{},"body":{"components/MoodEditor.html":{}}}],["setmood",{"_index":3561,"title":{},"body":{"components/MoodRenderer.html":{}}}],["setmood(params",{"_index":3566,"title":{},"body":{"components/MoodRenderer.html":{}}}],["sets",{"_index":4213,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settimeout",{"_index":2543,"title":{},"body":{"components/IconComponent.html":{}}}],["settimeout(resolve",{"_index":4408,"title":{},"body":{"classes/Utility.html":{}}}],["setting",{"_index":4496,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["settings",{"_index":422,"title":{},"body":{"components/AlertsComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"components/NavbarComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"pipes/myUnusedPipe.html":{}}}],["settings'},{'name",{"_index":282,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["settings.component.html",{"_index":3234,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["settings.ts",{"_index":3993,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["settings/color",{"_index":680,"title":{},"body":{"modules/AppModule.html":{}}}],["settings/mood",{"_index":682,"title":{},"body":{"modules/AppModule.html":{}}}],["settings/settings.component",{"_index":728,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["settingscomponent",{"_index":281,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"coverage.html":{},"overview.html":{}}}],["settingservice",{"_index":1549,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["settingsservice",{"_index":13,"title":{"injectables/SettingsService.html":{}},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"injectables/SettingsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"coverage.html":{},"pipes/myUnusedPipe.html":{},"overview.html":{}}}],["settingsservice.defrangerstatus",{"_index":4224,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settingsservice.getfieldreportstatuses",{"_index":2010,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["settingsservice.localstoragefieldreportstatusname",{"_index":4202,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settingsservice.resetdefaults",{"_index":4178,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settingsservice.secrets",{"_index":4152,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settingsservice.settings",{"_index":2199,"title":{},"body":{"components/FooterComponent.html":{},"injectables/SettingsService.html":{}}}],["settingsservice.settings.debugmode",{"_index":4206,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settingsservice.settings.deflat",{"_index":1714,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["settingsservice.settings.deflng",{"_index":1715,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{}}}],["settingsservice.settings.deflong",{"_index":3710,"title":{},"body":{"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["settingsservice.settings.defpluscode",{"_index":2962,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["settingsservice.settings.version",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"injectables/SettingsService.html":{}}}],["settingsservice.version",{"_index":4188,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settingstype",{"_index":668,"title":{},"body":{"modules/AppModule.html":{},"components/FooterComponent.html":{},"injectables/SettingsService.html":{},"miscellaneous/typealiases.html":{}}}],["setts",{"_index":4218,"title":{},"body":{"injectables/SettingsService.html":{}}}],["setup",{"_index":1756,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["setvalue",{"_index":1260,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["shadow",{"_index":1353,"title":{},"body":{"components/ColorEditor.html":{}}}],["shadow.png",{"_index":5018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadowsize",{"_index":5013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadowurl",{"_index":4725,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["shaken",{"_index":4377,"title":{},"body":{"injectables/ThreeWordsService.html":{}}}],["shall",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["shape",{"_index":1821,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["shape/validated",{"_index":1656,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["shape4",{"_index":4269,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["shape5",{"_index":4270,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["shapedas3words",{"_index":4417,"title":{},"body":{"classes/What3Words.html":{}}}],["shapedas3words(threewords",{"_index":4449,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["shapes",{"_index":4248,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["shapeservice",{"_index":656,"title":{"injectables/ShapeService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ShapeService.html":{},"coverage.html":{},"overview.html":{}}}],["share",{"_index":4385,"title":{},"body":{"injectables/ThreeWordsService.html":{}}}],["shared",{"_index":2363,"title":{},"body":{"components/IconComponent.html":{},"components/LogComponent.html":{},"classes/PlusCode.html":{}}}],["shared/services",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"modules/LazyModule.html":{},"components/LogComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["sharpcorner.com/article/formbuilder",{"_index":2542,"title":{},"body":{"components/IconComponent.html":{}}}],["sheet",{"_index":3445,"title":{},"body":{"modules/MaterialModule.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{}}}],["sheetjs",{"_index":3941,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["short",{"_index":1014,"title":{},"body":{"classes/CodeArea.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["shortcut",{"_index":179,"title":{},"body":{"components/AboutComponent.html":{}}}],["shorten",{"_index":1111,"title":{},"body":{"classes/CodeArea.html":{},"classes/PlusCode.html":{}}}],["shorten(code",{"_index":1115,"title":{},"body":{"classes/CodeArea.html":{}}}],["shorten(fullcode",{"_index":3756,"title":{},"body":{"classes/PlusCode.html":{}}}],["shortened",{"_index":995,"title":{},"body":{"classes/CodeArea.html":{}}}],["show",{"_index":1854,"title":{},"body":{"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{}}}],["showed",{"_index":579,"title":{},"body":{"components/AppComponent.html":{}}}],["showevents",{"_index":3023,"title":{},"body":{"components/IconComponent.html":{}}}],["showevents.foreach((event",{"_index":3028,"title":{},"body":{"components/IconComponent.html":{}}}],["shows",{"_index":2490,"title":{},"body":{"components/IconComponent.html":{}}}],["showseconds",{"_index":2472,"title":{},"body":{"components/IconComponent.html":{}}}],["showspinners",{"_index":2471,"title":{},"body":{"components/IconComponent.html":{}}}],["showtooltip",{"_index":4504,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["side",{"_index":3279,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sign",{"_index":4078,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["significant",{"_index":1079,"title":{},"body":{"classes/CodeArea.html":{}}}],["silver",{"_index":4775,"title":{},"body":{"classes/csvImport.html":{},"miscellaneous/variables.html":{}}}],["similar",{"_index":3162,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["simple",{"_index":4809,"title":{},"body":{"classes/csvImport.html":{}}}],["simply",{"_index":4960,"title":{},"body":{"index.html":{}}}],["single",{"_index":2134,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["singleclickedit",{"_index":1926,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["singleton",{"_index":2423,"title":{},"body":{"components/IconComponent.html":{},"injectables/ThreeWordsService.html":{}}}],["singular",{"_index":4620,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["size",{"_index":221,"title":{},"body":{"components/AboutComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"components/NavbarComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["sized",{"_index":3657,"title":{},"body":{"classes/PlusCode.html":{}}}],["sizing/#column",{"_index":1945,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["sizing/#example",{"_index":2092,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["skip",{"_index":2549,"title":{},"body":{"components/IconComponent.html":{}}}],["sleep",{"_index":4399,"title":{},"body":{"classes/Utility.html":{}}}],["sleep(ms",{"_index":4401,"title":{},"body":{"classes/Utility.html":{}}}],["slider",{"_index":2183,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["slower",{"_index":1766,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["small",{"_index":1340,"title":{},"body":{"components/ColorEditor.html":{},"components/FooterComponent.html":{}}}],["smaller",{"_index":1318,"title":{},"body":{"components/ColorEditor.html":{},"classes/PlusCode.html":{}}}],["smart",{"_index":4692,"title":{},"body":{"components/X404Component.html":{}}}],["snackbar",{"_index":554,"title":{},"body":{"components/AppComponent.html":{},"components/IconComponent.html":{}}}],["software",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["solid",{"_index":489,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["something",{"_index":3285,"title":{},"body":{"injectables/LocalStorageService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["soon",{"_index":762,"title":{},"body":{"modules/AppModule.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{}}}],["sort",{"_index":2146,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["sortable",{"_index":1949,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["sorted",{"_index":4077,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["sortfieldreportsbycallsign",{"_index":1542,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["sortfieldreportsbydate",{"_index":1543,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["sortfieldreportsbyteam",{"_index":1544,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["sortrangersbycallsign",{"_index":3888,"title":{},"body":{"injectables/RangerService.html":{}}}],["sortrangersbycallsign_unused",{"_index":3889,"title":{},"body":{"injectables/RangerService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"components/LazyComponent.html":{},"modules/LazyModule.html":{},"modules/LazyRoutingModule.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"modules/MaterialModule.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"classes/StreetAddress.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"classes/csvImport.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["south",{"_index":1096,"title":{},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"classes/Point.html":{},"miscellaneous/enumerations.html":{}}}],["south_lat",{"_index":2975,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["southwest",{"_index":4445,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["southwest\",\"short_name\":\"vashon",{"_index":2307,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["spaces",{"_index":3666,"title":{},"body":{"classes/PlusCode.html":{}}}],["spain",{"_index":4362,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["special",{"_index":3090,"title":{},"body":{"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{}}}],["specific",{"_index":3286,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["specification/#a2",{"_index":2650,"title":{},"body":{"components/IconComponent.html":{}}}],["specified",{"_index":3042,"title":{},"body":{"components/IconComponent.html":{}}}],["specify",{"_index":1232,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{}}}],["spinner",{"_index":3475,"title":{},"body":{"modules/MaterialModule.html":{}}}],["sport",{"_index":4773,"title":{},"body":{"classes/csvImport.html":{},"miscellaneous/variables.html":{}}}],["square",{"_index":4268,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["src/.../coordinate.ts",{"_index":4915,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../csvimport.ts",{"_index":5003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../entry.component.ts",{"_index":4998,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":5000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":5001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../field",{"_index":4916,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../gmap.component.ts",{"_index":5002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../lmap.component.ts",{"_index":4919,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../map.ts",{"_index":4917,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../marker.service.ts",{"_index":4997,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../open",{"_index":5004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../plus",{"_index":4920,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../point.ts",{"_index":4918,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ranger.service.ts",{"_index":4995,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../rangers.component.ts",{"_index":4994,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../settings.service.ts",{"_index":4996,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/alerts/alerts.component.ts",{"_index":289,"title":{},"body":{"components/AlertsComponent.html":{},"coverage.html":{}}}],["src/app/alerts/alerts.component.ts:16",{"_index":338,"title":{},"body":{"components/AlertsComponent.html":{}}}],["src/app/alerts/alerts.component.ts:17",{"_index":336,"title":{},"body":{"components/AlertsComponent.html":{}}}],["src/app/alerts/alerts.component.ts:18",{"_index":306,"title":{},"body":{"components/AlertsComponent.html":{}}}],["src/app/alerts/alerts.component.ts:26",{"_index":321,"title":{},"body":{"components/AlertsComponent.html":{}}}],["src/app/alerts/alerts.component.ts:35",{"_index":314,"title":{},"body":{"components/AlertsComponent.html":{}}}],["src/app/alerts/alerts.component.ts:66",{"_index":327,"title":{},"body":{"components/AlertsComponent.html":{}}}],["src/app/alerts/alerts.component.ts:70",{"_index":322,"title":{},"body":{"components/AlertsComponent.html":{}}}],["src/app/alerts/alerts.component.ts:74",{"_index":323,"title":{},"body":{"components/AlertsComponent.html":{}}}],["src/app/alerts/alerts.component.ts:79",{"_index":320,"title":{},"body":{"components/AlertsComponent.html":{}}}],["src/app/alerts/alerts.component.ts:95",{"_index":332,"title":{},"body":{"components/AlertsComponent.html":{}}}],["src/app/app",{"_index":798,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":547,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":556,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":660,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/entry/entry.component.ts",{"_index":2353,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/entry/entry.component.ts:86",{"_index":2355,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/entry/unsavedchangesguard",{"_index":4389,"title":{},"body":{"guards/UnsavedChangesGuard.html":{},"coverage.html":{}}}],["src/app/field",{"_index":1866,"title":{},"body":{"components/FieldReportsComponent.html":{},"coverage.html":{},"pipes/myUnusedPipe.html":{}}}],["src/app/footer/footer.component.ts",{"_index":2190,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.ts:12",{"_index":2198,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/footer/footer.component.ts:13",{"_index":2196,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/footer/footer.component.ts:21",{"_index":2197,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/gmap/gmap.component.ts",{"_index":4715,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/lazy/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/lazy/about/about.component.ts:14",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/lazy/lazy",{"_index":3127,"title":{},"body":{"modules/LazyRoutingModule.html":{}}}],["src/app/lazy/lazy.component.ts",{"_index":3109,"title":{},"body":{"components/LazyComponent.html":{},"coverage.html":{}}}],["src/app/lazy/lazy.component.ts:10",{"_index":3110,"title":{},"body":{"components/LazyComponent.html":{}}}],["src/app/lazy/lazy.module.ts",{"_index":3120,"title":{},"body":{"modules/LazyModule.html":{}}}],["src/app/lazy/shared/services/three",{"_index":4367,"title":{},"body":{"injectables/ThreeWordsService.html":{},"coverage.html":{}}}],["src/app/lmap/lmap.component.ts",{"_index":4718,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/log/log.component.ts",{"_index":3315,"title":{},"body":{"components/LogComponent.html":{},"coverage.html":{}}}],["src/app/log/log.component.ts:16",{"_index":3321,"title":{},"body":{"components/LogComponent.html":{}}}],["src/app/log/log.component.ts:23:22",{"_index":3331,"title":{},"body":{"components/LogComponent.html":{}}}],["src/app/log/log.component.ts:27",{"_index":3326,"title":{},"body":{"components/LogComponent.html":{}}}],["src/app/log/log.component.ts:32",{"_index":3325,"title":{},"body":{"components/LogComponent.html":{}}}],["src/app/log/log.component.ts:41",{"_index":3323,"title":{},"body":{"components/LogComponent.html":{}}}],["src/app/material.module.ts",{"_index":3422,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":3579,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:10",{"_index":3584,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:13",{"_index":3585,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:15",{"_index":3586,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/rangers/csvimport",{"_index":3927,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["src/app/rangers/csvimport.ts",{"_index":4727,"title":{},"body":{"coverage.html":{},"classes/csvImport.html":{},"miscellaneous/variables.html":{}}}],["src/app/rangers/csvimport.ts:113",{"_index":4766,"title":{},"body":{"classes/csvImport.html":{}}}],["src/app/rangers/csvimport.ts:180",{"_index":4762,"title":{},"body":{"classes/csvImport.html":{}}}],["src/app/rangers/csvimport.ts:37",{"_index":4761,"title":{},"body":{"classes/csvImport.html":{}}}],["src/app/rangers/csvimport.ts:41",{"_index":4756,"title":{},"body":{"classes/csvImport.html":{}}}],["src/app/rangers/csvimport.ts:42",{"_index":4755,"title":{},"body":{"classes/csvImport.html":{}}}],["src/app/rangers/csvimport.ts:73",{"_index":4764,"title":{},"body":{"classes/csvImport.html":{}}}],["src/app/rangers/csvimport.ts:88",{"_index":4757,"title":{},"body":{"classes/csvImport.html":{}}}],["src/app/rangers/csvimport.ts:97",{"_index":4759,"title":{},"body":{"classes/csvImport.html":{}}}],["src/app/rangers/rangers.component.ts",{"_index":4730,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/settings/color",{"_index":1135,"title":{},"body":{"components/ColorEditor.html":{},"coverage.html":{}}}],["src/app/settings/mood",{"_index":3532,"title":{},"body":{"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"coverage.html":{}}}],["src/app/settings/settings.component.ts",{"_index":4734,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/3words.ts",{"_index":4409,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"coverage.html":{}}}],["src/app/shared/3words.ts:107",{"_index":4419,"title":{},"body":{"classes/What3Words.html":{}}}],["src/app/shared/3words.ts:164",{"_index":4431,"title":{},"body":{"classes/What3Words.html":{}}}],["src/app/shared/3words.ts:173",{"_index":4450,"title":{},"body":{"classes/What3Words.html":{}}}],["src/app/shared/3words.ts:185",{"_index":4441,"title":{},"body":{"classes/What3Words.html":{}}}],["src/app/shared/3words.ts:219",{"_index":4447,"title":{},"body":{"classes/What3Words.html":{}}}],["src/app/shared/3words.ts:287",{"_index":4444,"title":{},"body":{"classes/What3Words.html":{}}}],["src/app/shared/3words.ts:336",{"_index":4452,"title":{},"body":{"classes/What3Words.html":{}}}],["src/app/shared/3words.ts:418",{"_index":4438,"title":{},"body":{"classes/What3Words.html":{}}}],["src/app/shared/3words.ts:84",{"_index":4421,"title":{},"body":{"classes/What3Words.html":{}}}],["src/app/shared/3words.ts:88",{"_index":4427,"title":{},"body":{"classes/What3Words.html":{}}}],["src/app/shared/3words.ts:99",{"_index":4434,"title":{},"body":{"classes/What3Words.html":{}}}],["src/app/shared/coordinate.ts",{"_index":1415,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/coordinate.ts:17",{"_index":3768,"title":{},"body":{"classes/Point.html":{}}}],["src/app/shared/coordinate.ts:23",{"_index":3770,"title":{},"body":{"classes/Point.html":{}}}],["src/app/shared/coordinate.ts:27",{"_index":3772,"title":{},"body":{"classes/Point.html":{}}}],["src/app/shared/coordinate.ts:34",{"_index":3774,"title":{},"body":{"classes/Point.html":{}}}],["src/app/shared/coordinate.ts:38",{"_index":3776,"title":{},"body":{"classes/Point.html":{}}}],["src/app/shared/coordinate.ts:48",{"_index":1501,"title":{},"body":{"classes/Coordinate.html":{}}}],["src/app/shared/coordinate.ts:58",{"_index":1504,"title":{},"body":{"classes/Coordinate.html":{}}}],["src/app/shared/coordinate.ts:63",{"_index":1506,"title":{},"body":{"classes/Coordinate.html":{}}}],["src/app/shared/coordinate.ts:70",{"_index":1503,"title":{},"body":{"classes/Coordinate.html":{}}}],["src/app/shared/coordinate.ts:74",{"_index":1502,"title":{},"body":{"classes/Coordinate.html":{}}}],["src/app/shared/coordinate.ts:86",{"_index":1417,"title":{},"body":{"classes/Coord.html":{}}}],["src/app/shared/coordinate.ts:87",{"_index":1418,"title":{},"body":{"classes/Coord.html":{}}}],["src/app/shared/google",{"_index":2214,"title":{},"body":{"classes/GoogleGeocode.html":{},"coverage.html":{}}}],["src/app/shared/map.ts",{"_index":3079,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/map.ts:31",{"_index":3372,"title":{},"body":{"classes/Map.html":{}}}],["src/app/shared/map.ts:32",{"_index":3370,"title":{},"body":{"classes/Map.html":{}}}],["src/app/shared/map.ts:33",{"_index":3371,"title":{},"body":{"classes/Map.html":{}}}],["src/app/shared/map.ts:34",{"_index":3369,"title":{},"body":{"classes/Map.html":{}}}],["src/app/shared/map.ts:46",{"_index":3376,"title":{},"body":{"classes/Map.html":{}}}],["src/app/shared/map.ts:51",{"_index":3374,"title":{},"body":{"classes/Map.html":{}}}],["src/app/shared/map.ts:52",{"_index":3373,"title":{},"body":{"classes/Map.html":{}}}],["src/app/shared/map.ts:54",{"_index":3375,"title":{},"body":{"classes/Map.html":{}}}],["src/app/shared/mission.ts",{"_index":3507,"title":{},"body":{"classes/Mission.html":{},"coverage.html":{}}}],["src/app/shared/mission.ts:12",{"_index":3514,"title":{},"body":{"classes/Mission.html":{}}}],["src/app/shared/mission.ts:13",{"_index":3512,"title":{},"body":{"classes/Mission.html":{}}}],["src/app/shared/mission.ts:14",{"_index":3511,"title":{},"body":{"classes/Mission.html":{}}}],["src/app/shared/mission.ts:21",{"_index":3513,"title":{},"body":{"classes/Mission.html":{}}}],["src/app/shared/mission.ts:28",{"_index":3517,"title":{},"body":{"classes/Mission.html":{}}}],["src/app/shared/mission.ts:32",{"_index":3518,"title":{},"body":{"classes/Mission.html":{}}}],["src/app/shared/mission.ts:37",{"_index":3520,"title":{},"body":{"classes/Mission.html":{}}}],["src/app/shared/mission.ts:41",{"_index":3519,"title":{},"body":{"classes/Mission.html":{}}}],["src/app/shared/op",{"_index":3630,"title":{},"body":{"classes/OpPeriod.html":{},"coverage.html":{}}}],["src/app/shared/open",{"_index":836,"title":{},"body":{"classes/CodeArea.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/plus",{"_index":3645,"title":{},"body":{"classes/PlusCode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/point.ts",{"_index":3777,"title":{},"body":{"classes/Point-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/point.ts:10",{"_index":3781,"title":{},"body":{"classes/Point-1.html":{}}}],["src/app/shared/point.ts:3",{"_index":3785,"title":{},"body":{"classes/Point-1.html":{}}}],["src/app/shared/point.ts:4",{"_index":3780,"title":{},"body":{"classes/Point-1.html":{}}}],["src/app/shared/post.service.ts",{"_index":3858,"title":{},"body":{"injectables/PostService.html":{},"coverage.html":{}}}],["src/app/shared/post.service.ts:10",{"_index":3861,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/shared/post.service.ts:14",{"_index":3863,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/shared/post.service.ts:16",{"_index":3862,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/shared/services",{"_index":3147,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["src/app/shared/services/data.service.ts",{"_index":1508,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/shared/services/data.service.ts:12",{"_index":1510,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/services/field",{"_index":1518,"title":{},"body":{"injectables/FieldReportService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/services/local",{"_index":3135,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/shared/services/marker.service.ts",{"_index":3377,"title":{},"body":{"injectables/MarkerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/services/marker.service.ts:16",{"_index":3385,"title":{},"body":{"injectables/MarkerService.html":{}}}],["src/app/shared/services/marker.service.ts:21",{"_index":3396,"title":{},"body":{"injectables/MarkerService.html":{}}}],["src/app/shared/services/marker.service.ts:25",{"_index":3393,"title":{},"body":{"injectables/MarkerService.html":{}}}],["src/app/shared/services/marker.service.ts:37",{"_index":3391,"title":{},"body":{"injectables/MarkerService.html":{}}}],["src/app/shared/services/marker.service.ts:56",{"_index":3399,"title":{},"body":{"injectables/MarkerService.html":{}}}],["src/app/shared/services/marker.service.ts:58",{"_index":3388,"title":{},"body":{"injectables/MarkerService.html":{}}}],["src/app/shared/services/popup.service.ts",{"_index":3849,"title":{},"body":{"injectables/PopupService.html":{},"coverage.html":{}}}],["src/app/shared/services/popup.service.ts:11",{"_index":3853,"title":{},"body":{"injectables/PopupService.html":{}}}],["src/app/shared/services/popup.service.ts:7",{"_index":3851,"title":{},"body":{"injectables/PopupService.html":{}}}],["src/app/shared/services/ranger.service.ts",{"_index":3872,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/services/ranger.service.ts:111",{"_index":3914,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:123",{"_index":3912,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:187",{"_index":3908,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:238",{"_index":3900,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:249",{"_index":3910,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:259",{"_index":3904,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:264",{"_index":3920,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:270",{"_index":3898,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:277",{"_index":3895,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:293",{"_index":3902,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:301",{"_index":3896,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:309",{"_index":3915,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:321",{"_index":3916,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:345",{"_index":3906,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:40",{"_index":3923,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:42",{"_index":3924,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:44",{"_index":3922,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:45",{"_index":3925,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:47",{"_index":3921,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:48",{"_index":3893,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:66",{"_index":3905,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:72",{"_index":3917,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/ranger.service.ts:78",{"_index":3918,"title":{},"body":{"injectables/RangerService.html":{}}}],["src/app/shared/services/settings.service.ts",{"_index":4107,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/services/settings.service.ts:112",{"_index":4119,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/services/settings.service.ts:139",{"_index":4120,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/services/settings.service.ts:152",{"_index":4122,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/services/settings.service.ts:158",{"_index":4117,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/services/settings.service.ts:162",{"_index":4125,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/services/settings.service.ts:169",{"_index":4118,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/services/settings.service.ts:37",{"_index":4134,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/services/settings.service.ts:38",{"_index":4131,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/services/settings.service.ts:39",{"_index":4132,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/services/settings.service.ts:40",{"_index":4127,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/services/settings.service.ts:41",{"_index":4129,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/services/settings.service.ts:42",{"_index":4128,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/services/settings.service.ts:43",{"_index":4116,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/services/shape.service.ts",{"_index":4234,"title":{},"body":{"injectables/ShapeService.html":{},"coverage.html":{}}}],["src/app/shared/services/shape.service.ts:12",{"_index":4238,"title":{},"body":{"injectables/ShapeService.html":{}}}],["src/app/shared/services/shape.service.ts:8",{"_index":4236,"title":{},"body":{"injectables/ShapeService.html":{}}}],["src/app/shared/services/storagemap.ts",{"_index":499,"title":{},"body":{"classes/AngularComponentOrService.html":{},"coverage.html":{}}}],["src/app/shared/services/storagemap.ts:4",{"_index":502,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["src/app/shared/services/team.service.ts",{"_index":4247,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"coverage.html":{}}}],["src/app/shared/services/team.service.ts:102",{"_index":4255,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/shared/services/team.service.ts:19",{"_index":4266,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/shared/services/team.service.ts:20",{"_index":4267,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/shared/services/team.service.ts:22",{"_index":4271,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/shared/services/team.service.ts:31",{"_index":4272,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/shared/services/team.service.ts:35",{"_index":4265,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/shared/services/team.service.ts:58",{"_index":4259,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/shared/services/team.service.ts:66",{"_index":4258,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/shared/services/team.service.ts:74",{"_index":4260,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/shared/services/team.service.ts:77",{"_index":4253,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/shared/services/team.service.ts:90",{"_index":4257,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/shared/services/team.service.ts:96",{"_index":4256,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/shared/street",{"_index":4243,"title":{},"body":{"classes/StreetAddress.html":{},"coverage.html":{}}}],["src/app/shared/utility.ts",{"_index":4398,"title":{},"body":{"classes/Utility.html":{},"coverage.html":{}}}],["src/app/shared/utility.ts:13",{"_index":4406,"title":{},"body":{"classes/Utility.html":{}}}],["src/app/shared/utility.ts:4",{"_index":4402,"title":{},"body":{"classes/Utility.html":{}}}],["src/app/shared/utility.ts:8",{"_index":4404,"title":{},"body":{"classes/Utility.html":{}}}],["src/app/x404/x404.component.ts",{"_index":4686,"title":{},"body":{"components/X404Component.html":{},"coverage.html":{}}}],["src/app/x404/x404.component.ts:13",{"_index":4690,"title":{},"body":{"components/X404Component.html":{}}}],["src/app/x404/x404.component.ts:9",{"_index":4689,"title":{},"body":{"components/X404Component.html":{}}}],["src/assets/imgs/alpinemarmot.png",{"_index":205,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":4747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":4748,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src\\docs\\rangertrak.png",{"_index":4983,"title":{},"body":{"index.html":{}}}],["st",{"_index":4085,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["stable",{"_index":763,"title":{},"body":{"modules/AppModule.html":{}}}],["stack",{"_index":2346,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/NavbarComponent.html":{}}}],["stackblitz",{"_index":2505,"title":{},"body":{"components/IconComponent.html":{}}}],["standard",{"_index":3160,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SettingsService.html":{},"changelog.html":{}}}],["star",{"_index":1349,"title":{},"body":{"components/ColorEditor.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["start",{"_index":1103,"title":{},"body":{"classes/CodeArea.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/csvImport.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":2566,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"components/IconComponent.html":{}}}],["starting",{"_index":531,"title":{},"body":{"classes/AngularComponentOrService.html":{},"components/IconComponent.html":{}}}],["startwith",{"_index":1512,"title":{},"body":{"injectables/DataService.html":{},"components/IconComponent.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["state",{"_index":2447,"title":{},"body":{"components/IconComponent.html":{}}}],["statement",{"_index":2544,"title":{},"body":{"components/IconComponent.html":{}}}],["statements",{"_index":4707,"title":{},"body":{"coverage.html":{}}}],["states\",\"short_name\":\"us\",\"types\":[\"country\",\"political",{"_index":2316,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["static",{"_index":903,"title":{},"body":{"classes/CodeArea.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"classes/Point-1.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{}}}],["station",{"_index":3854,"title":{},"body":{"injectables/PopupService.html":{}}}],["stations",{"_index":3379,"title":{},"body":{"injectables/MarkerService.html":{}}}],["status",{"_index":1296,"title":{},"body":{"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"pipes/myUnusedPipe.html":{}}}],["statuschanges",{"_index":1292,"title":{},"body":{"components/ColorEditor.html":{}}}],["statuses",{"_index":2612,"title":{},"body":{"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{}}}],["statustext",{"_index":1675,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["std",{"_index":2683,"title":{},"body":{"components/IconComponent.html":{}}}],["step",{"_index":1057,"title":{},"body":{"classes/CodeArea.html":{}}}],["stephour",{"_index":2478,"title":{},"body":{"components/IconComponent.html":{}}}],["stepminute",{"_index":2479,"title":{},"body":{"components/IconComponent.html":{}}}],["steps",{"_index":3687,"title":{},"body":{"classes/PlusCode.html":{}}}],["stepsecond",{"_index":2480,"title":{},"body":{"components/IconComponent.html":{}}}],["stick",{"_index":3305,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["still",{"_index":1113,"title":{},"body":{"classes/CodeArea.html":{},"components/IconComponent.html":{},"guards/UnsavedChangesGuard.html":{},"index.html":{}}}],["storage",{"_index":503,"title":{},"body":{"classes/AngularComponentOrService.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"dependencies.html":{},"pipes/myUnusedPipe.html":{}}}],["storage.service.ts",{"_index":3136,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:14",{"_index":3139,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:24",{"_index":3144,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:37",{"_index":3141,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/blob/main/docs/collision.md",{"_index":3298,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/blob/main/docs/errors.md",{"_index":3291,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/blob/main/docs/map_operations.md",{"_index":3294,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/blob/main/docs/serialization.md",{"_index":3314,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/blob/main/docs/validation.md",{"_index":3281,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/blob/main/docs/watching.md",{"_index":3271,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/discussions/840",{"_index":3173,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storagelocalname",{"_index":1527,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/SettingsService.html":{}}}],["storagemap",{"_index":501,"title":{},"body":{"classes/AngularComponentOrService.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["store",{"_index":3299,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["stored",{"_index":521,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["storing",{"_index":3302,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["str",{"_index":4405,"title":{},"body":{"classes/Utility.html":{},"miscellaneous/functions.html":{}}}],["str.split",{"_index":1469,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"classes/Utility.html":{}}}],["strategy",{"_index":2398,"title":{},"body":{"components/IconComponent.html":{},"miscellaneous/typealiases.html":{}}}],["street",{"_index":2285,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/StreetAddress.html":{},"index.html":{}}}],["streetaddress",{"_index":4242,"title":{"classes/StreetAddress.html":{}},"body":{"classes/StreetAddress.html":{},"coverage.html":{}}}],["streets",{"_index":4083,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["strg",{"_index":430,"title":{},"body":{"components/AlertsComponent.html":{},"classes/Utility.html":{}}}],["strg.length",{"_index":432,"title":{},"body":{"components/AlertsComponent.html":{},"classes/Utility.html":{}}}],["strictmodifiers",{"_index":2373,"title":{},"body":{"components/IconComponent.html":{}}}],["string",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"components/LazyComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"components/MoodRenderer.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"injectables/ThreeWordsService.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{},"miscellaneous/functions.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["string.fromcharcode(data[i",{"_index":4804,"title":{},"body":{"classes/csvImport.html":{}}}],["string|undefined",{"_index":358,"title":{},"body":{"components/AlertsComponent.html":{}}}],["strip",{"_index":1024,"title":{},"body":{"classes/CodeArea.html":{}}}],["strippedcode",{"_index":1025,"title":{},"body":{"classes/CodeArea.html":{}}}],["strippedcode.length",{"_index":1031,"title":{},"body":{"classes/CodeArea.html":{}}}],["strtolatlng",{"_index":4400,"title":{},"body":{"classes/Utility.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["strtolatlng(str",{"_index":1467,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"classes/Utility.html":{},"miscellaneous/functions.html":{}}}],["structure",{"_index":2843,"title":{},"body":{"components/IconComponent.html":{},"injectables/LocalStorageService.html":{}}}],["structures",{"_index":3312,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["stuff",{"_index":2411,"title":{},"body":{"components/IconComponent.html":{}}}],["style",{"_index":3590,"title":{},"body":{"components/NavbarComponent.html":{},"dependencies.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["stylesheet",{"_index":2057,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"pipes/myUnusedPipe.html":{}}}],["sub",{"_index":190,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{}}}],["subject",{"_index":137,"title":{},"body":{"components/AboutComponent.html":{},"injectables/LocalStorageService.html":{},"license.html":{}}}],["sublicense",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["submit",{"_index":2494,"title":{},"body":{"components/IconComponent.html":{}}}],["submited",{"_index":2665,"title":{},"body":{"components/IconComponent.html":{}}}],["submitinfo",{"_index":2456,"title":{},"body":{"components/IconComponent.html":{}}}],["submitted",{"_index":4210,"title":{},"body":{"injectables/SettingsService.html":{}}}],["subscribe",{"_index":538,"title":{},"body":{"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/RangerService.html":{},"pipes/myUnusedPipe.html":{}}}],["subscribe((data",{"_index":2001,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["subscribe((result",{"_index":3206,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["subscribe(data",{"_index":4330,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["subscribe(observer",{"_index":1580,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/LocalStorageService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["subscribe(res",{"_index":1651,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["subscribers",{"_index":1666,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["subscription",{"_index":1641,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{}}}],["subscription/observables",{"_index":4163,"title":{},"body":{"injectables/SettingsService.html":{}}}],["subscriptions",{"_index":2587,"title":{},"body":{"components/IconComponent.html":{}}}],["subsequent",{"_index":3686,"title":{},"body":{"classes/PlusCode.html":{}}}],["substantial",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["subuscription",{"_index":2062,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["succeed",{"_index":2344,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["succeeds",{"_index":3276,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["success",{"_index":543,"title":{},"body":{"classes/AngularComponentOrService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{}}}],["success(httprequest.response",{"_index":4795,"title":{},"body":{"classes/csvImport.html":{}}}],["such",{"_index":939,"title":{},"body":{"classes/CodeArea.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["sufficient",{"_index":3673,"title":{},"body":{"classes/PlusCode.html":{}}}],["suggested",{"_index":4551,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["suggestions",{"_index":4599,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["suitable",{"_index":944,"title":{},"body":{"classes/CodeArea.html":{},"components/ColorEditor.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{}}}],["suite",{"_index":2320,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["sun",{"_index":2015,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"pipes/myUnusedPipe.html":{}}}],["sunrise",{"_index":4088,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["supplied",{"_index":1290,"title":{},"body":{"components/ColorEditor.html":{}}}],["supply",{"_index":3223,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["support",{"_index":4987,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":592,"title":{},"body":{"components/AppComponent.html":{}}}],["supporting",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["supports",{"_index":4943,"title":{},"body":{"index.html":{}}}],["supposed",{"_index":3022,"title":{},"body":{"components/IconComponent.html":{}}}],["sure",{"_index":1019,"title":{},"body":{"classes/CodeArea.html":{}}}],["svg",{"_index":2377,"title":{},"body":{"components/IconComponent.html":{},"components/NavbarComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["sw",{"_index":1616,"title":{},"body":{"injectables/FieldReportService.html":{},"classes/GoogleGeocode.html":{}}}],["sw\",\"types\":[\"route",{"_index":2309,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["switch",{"_index":2115,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"classes/Point-1.html":{},"pipes/myUnusedPipe.html":{}}}],["switchmap",{"_index":562,"title":{},"body":{"components/AppComponent.html":{},"components/IconComponent.html":{}}}],["swupdate",{"_index":553,"title":{},"body":{"components/AppComponent.html":{}}}],["swupdate.activateupdate",{"_index":594,"title":{},"body":{"components/AppComponent.html":{}}}],["swupdate.available",{"_index":621,"title":{},"body":{"components/AppComponent.html":{}}}],["swupdate.versionupdates.pipe",{"_index":634,"title":{},"body":{"components/AppComponent.html":{}}}],["symbol.iterator",{"_index":2999,"title":{},"body":{"components/IconComponent.html":{}}}],["sync",{"_index":2627,"title":{},"body":{"components/IconComponent.html":{}}}],["t",{"_index":2117,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["t0",{"_index":2608,"title":{},"body":{"components/IconComponent.html":{}}}],["t1",{"_index":2577,"title":{},"body":{"components/IconComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t1.png",{"_index":4275,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t10",{"_index":4313,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t11",{"_index":4314,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t12",{"_index":4315,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t13",{"_index":4316,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t14",{"_index":4317,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t15",{"_index":4318,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t16",{"_index":4319,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t17",{"_index":4320,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t18",{"_index":4321,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t19",{"_index":4322,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t2",{"_index":4278,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t2.png",{"_index":4279,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t20",{"_index":4323,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t21",{"_index":4324,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t3",{"_index":4300,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t3.png",{"_index":4301,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t4",{"_index":4302,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t4.png",{"_index":4303,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t5",{"_index":4304,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t5.png",{"_index":4305,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t6",{"_index":4307,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t6.png",{"_index":4308,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t7",{"_index":4310,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t8",{"_index":4311,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["t9",{"_index":4312,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["tab",{"_index":2116,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["table",{"_index":4750,"title":{},"body":{"coverage.html":{},"classes/csvImport.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4749,"title":{},"body":{"coverage.html":{}}}],["tail",{"_index":4100,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["tap",{"_index":3864,"title":{},"body":{"injectables/PostService.html":{}}}],["target",{"_index":3038,"title":{},"body":{"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["target.files.length",{"_index":4038,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["target.files[0].name",{"_index":4042,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["team",{"_index":792,"title":{},"body":{"modules/AppModule.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"pipes/myUnusedPipe.html":{}}}],["team.nextid",{"_index":4336,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["teamblue').pipe",{"_index":3228,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["teamlocations",{"_index":1763,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["teamlocations[i].callsign",{"_index":1834,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["teamlocations[i].callsign!=filters.callsign",{"_index":1790,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["teamlocations[i].date",{"_index":1793,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["teamlocations[i].date.replace(\"t",{"_index":1836,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["teamlocations[i].fieldreports",{"_index":1837,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["teamlocations[i].licensee",{"_index":1835,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["teamlocations[i].team",{"_index":1830,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["teamlocations[i].team!=filters.team",{"_index":1785,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["teams",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"injectables/FieldReportService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"index.html":{}}}],["teams.length",{"_index":1828,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["teams[teamsindex].icon",{"_index":1840,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["teamservice",{"_index":657,"title":{"injectables/TeamService.html":{}},"body":{"modules/AppModule.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"coverage.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{},"overview.html":{}}}],["teamservice.shapes",{"_index":4264,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["teamsindex",{"_index":1829,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["teamsindex=0",{"_index":1832,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["teamtype",{"_index":669,"title":{"interfaces/TeamType.html":{}},"body":{"modules/AppModule.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"coverage.html":{}}}],["temp",{"_index":1628,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"pipes/myUnusedPipe.html":{}}}],["temporary",{"_index":368,"title":{},"body":{"components/AlertsComponent.html":{}}}],["term",{"_index":4634,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["test",{"_index":2565,"title":{},"body":{"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"index.html":{}}}],["test').pipe",{"_index":3250,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["test2",{"_index":3200,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["testbed",{"_index":3201,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["tested",{"_index":4296,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["testing",{"_index":3865,"title":{},"body":{"injectables/PostService.html":{},"index.html":{}}}],["tests",{"_index":3210,"title":{},"body":{"injectables/LocalStorageService.html":{},"index.html":{}}}],["testyyyyyy').pipe",{"_index":3203,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["text",{"_index":427,"title":{},"body":{"components/AlertsComponent.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["text:\"${seltext",{"_index":2113,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["textcolor",{"_index":4505,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["thank",{"_index":2648,"title":{},"body":{"components/IconComponent.html":{}}}],["that.lat.coord",{"_index":3810,"title":{},"body":{"classes/Point-1.html":{}}}],["that.lng.coord",{"_index":3813,"title":{},"body":{"classes/Point-1.html":{}}}],["theage",{"_index":1434,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["themepalette",{"_index":1182,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["then((res",{"_index":4540,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["then((response",{"_index":2244,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["then(function",{"_index":4546,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["thereafter",{"_index":4966,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":953,"title":{},"body":{"classes/CodeArea.html":{}}}],["third",{"_index":4614,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["this._age",{"_index":1432,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["this._filterrangers(callsign",{"_index":2536,"title":{},"body":{"components/IconComponent.html":{}}}],["this._filterrangers(ranger",{"_index":2540,"title":{},"body":{"components/IconComponent.html":{}}}],["this._firstname",{"_index":1439,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["this._lastname",{"_index":1440,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["this._lat",{"_index":1457,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["this._long",{"_index":1458,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["this._setmaxdate",{"_index":3069,"title":{},"body":{"components/IconComponent.html":{}}}],["this._setmaxdate(1",{"_index":2515,"title":{},"body":{"components/IconComponent.html":{}}}],["this._setmindate",{"_index":3066,"title":{},"body":{"components/IconComponent.html":{}}}],["this._setmindate(10",{"_index":2512,"title":{},"body":{"components/IconComponent.html":{}}}],["this._snackbar.open(message",{"_index":402,"title":{},"body":{"components/AlertsComponent.html":{}}}],["this.addressctrl.valuechanges.pipe(debouncetime(700)).subscribe(newaddr",{"_index":2529,"title":{},"body":{"components/IconComponent.html":{}}}],["this.addressctrlchanged('lat",{"_index":2943,"title":{},"body":{"components/IconComponent.html":{}}}],["this.addressctrlchanged2(newaddr",{"_index":2530,"title":{},"body":{"components/IconComponent.html":{}}}],["this.addrinfo",{"_index":2778,"title":{},"body":{"components/IconComponent.html":{}}}],["this.addrinfo.innerhtml",{"_index":2781,"title":{},"body":{"components/IconComponent.html":{}}}],["this.alert",{"_index":2520,"title":{},"body":{"components/IconComponent.html":{}}}],["this.alert.opensnackbar(`entry",{"_index":2681,"title":{},"body":{"components/IconComponent.html":{}}}],["this.alertbanner",{"_index":352,"title":{},"body":{"components/AlertsComponent.html":{}}}],["this.apppopper",{"_index":3049,"title":{},"body":{"components/IconComponent.html":{}}}],["this.b",{"_index":1241,"title":{},"body":{"components/ColorEditor.html":{}}}],["this.backuprowdata",{"_index":2004,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.begdate",{"_index":3530,"title":{},"body":{"classes/Mission.html":{},"classes/OpPeriod.html":{}}}],["this.button",{"_index":2593,"title":{},"body":{"components/IconComponent.html":{}}}],["this.button.addeventlistener(event",{"_index":3029,"title":{},"body":{"components/IconComponent.html":{}}}],["this.callinfo",{"_index":2621,"title":{},"body":{"components/IconComponent.html":{}}}],["this.callinfo.innerhtml",{"_index":2628,"title":{},"body":{"components/IconComponent.html":{}}}],["this.callsignchanged(callsign",{"_index":2640,"title":{},"body":{"components/IconComponent.html":{}}}],["this.callsignchanged(newcall",{"_index":2526,"title":{},"body":{"components/IconComponent.html":{}}}],["this.callsignctrl.valuechanges.pipe",{"_index":2534,"title":{},"body":{"components/IconComponent.html":{}}}],["this.callsignctrl.valuechanges.pipe(debouncetime(700)).subscribe(newcall",{"_index":2592,"title":{},"body":{"components/IconComponent.html":{}}}],["this.chk3words(addrtext",{"_index":2869,"title":{},"body":{"components/IconComponent.html":{}}}],["this.chkaddresses",{"_index":2813,"title":{},"body":{"components/IconComponent.html":{}}}],["this.chkpcodes(addrtext",{"_index":2865,"title":{},"body":{"components/IconComponent.html":{}}}],["this.chkstreetaddress(addrtext",{"_index":2870,"title":{},"body":{"components/IconComponent.html":{}}}],["this.clear",{"_index":3211,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.code",{"_index":893,"title":{},"body":{"classes/CodeArea.html":{}}}],["this.code.indexof(openlocationcode.padding_character_",{"_index":902,"title":{},"body":{"classes/CodeArea.html":{}}}],["this.color",{"_index":1246,"title":{},"body":{"components/ColorEditor.html":{}}}],["this.colorctr",{"_index":1242,"title":{},"body":{"components/ColorEditor.html":{}}}],["this.colorctr.setvalue(\"green",{"_index":1286,"title":{},"body":{"components/ColorEditor.html":{}}}],["this.colorctr.setvalue(color",{"_index":1324,"title":{},"body":{"components/ColorEditor.html":{}}}],["this.colorctr.value.hex",{"_index":1245,"title":{},"body":{"components/ColorEditor.html":{}}}],["this.colorctr.value.rgba",{"_index":1316,"title":{},"body":{"components/ColorEditor.html":{}}}],["this.config",{"_index":4437,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["this.container.element.nativeelement.focus",{"_index":1254,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["this.convertdatatoworkbook(data",{"_index":4867,"title":{},"body":{"classes/csvImport.html":{}}}],["this.coord",{"_index":1496,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["this.data",{"_index":1514,"title":{},"body":{"injectables/DataService.html":{},"injectables/LocalStorageService.html":{}}}],["this.dataservice.data",{"_index":3260,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.date",{"_index":2600,"title":{},"body":{"components/IconComponent.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["this.date=this.datectrl.value",{"_index":2667,"title":{},"body":{"components/IconComponent.html":{}}}],["this.datectrl.value",{"_index":2669,"title":{},"body":{"components/IconComponent.html":{}}}],["this.decode(pcode",{"_index":3712,"title":{},"body":{"classes/PlusCode.html":{}}}],["this.defaultconfig",{"_index":3054,"title":{},"body":{"components/IconComponent.html":{}}}],["this.detailsdata",{"_index":4020,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.displayhide(\"enter__fake",{"_index":2075,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.displayhide(\"enter__frm",{"_index":2584,"title":{},"body":{"components/IconComponent.html":{}}}],["this.displaymarker(loc",{"_index":2752,"title":{},"body":{"components/IconComponent.html":{}}}],["this.displayrangers(`excel",{"_index":4067,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.displayshow(\"enter__fake",{"_index":2076,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.displaysmallmap(latdd",{"_index":2946,"title":{},"body":{"components/IconComponent.html":{}}}],["this.document",{"_index":2522,"title":{},"body":{"components/IconComponent.html":{}}}],["this.document.addeventlistener(\"domcontentloaded",{"_index":4784,"title":{},"body":{"classes/csvImport.html":{}}}],["this.document.getelementbyid(\"addresslabel",{"_index":2831,"title":{},"body":{"components/IconComponent.html":{}}}],["this.document.getelementbyid(\"derivedaddress",{"_index":2747,"title":{},"body":{"components/IconComponent.html":{}}}],["this.document.getelementbyid(\"enter__callsign",{"_index":2622,"title":{},"body":{"components/IconComponent.html":{}}}],["this.document.getelementbyid(\"enter__submit",{"_index":2583,"title":{},"body":{"components/IconComponent.html":{}}}],["this.document.getelementbyid(\"enter__where",{"_index":2779,"title":{},"body":{"components/IconComponent.html":{}}}],["this.document.getelementbyid(\"log",{"_index":3327,"title":{},"body":{"components/LogComponent.html":{}}}],["this.document.getelementbyid('columnseparator",{"_index":2101,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.document.getelementbyid(htmlelementid",{"_index":3005,"title":{},"body":{"components/IconComponent.html":{}}}],["this.document.queryselector('#popcorn",{"_index":3057,"title":{},"body":{"components/IconComponent.html":{}}}],["this.document.queryselector('#tooltip",{"_index":3059,"title":{},"body":{"components/IconComponent.html":{}}}],["this.document.queryselector('.mdc",{"_index":353,"title":{},"body":{"components/AlertsComponent.html":{}}}],["this.document.queryselector(inputselector",{"_index":2099,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.el.nativeelement",{"_index":3050,"title":{},"body":{"components/IconComponent.html":{}}}],["this.emoji",{"_index":364,"title":{},"body":{"components/AlertsComponent.html":{}}}],["this.entrydetailsform",{"_index":2576,"title":{},"body":{"components/IconComponent.html":{}}}],["this.entrydetailsform.controls['derivedaddress'].setvalue('new",{"_index":2745,"title":{},"body":{"components/IconComponent.html":{}}}],["this.entrydetailsform.controls['ranger'].setvalue(filtervalue",{"_index":2559,"title":{},"body":{"components/IconComponent.html":{}}}],["this.entrydetailsform.get",{"_index":2744,"title":{},"body":{"components/IconComponent.html":{}}}],["this.entrydetailsform.get(\"address\")?.valuechanges.pipe(debouncetime(700)).subscribe(x",{"_index":2591,"title":{},"body":{"components/IconComponent.html":{}}}],["this.entrydetailsform.get(\"lat\")?.valuechanges.pipe(debouncetime(700)).subscribe(x",{"_index":2588,"title":{},"body":{"components/IconComponent.html":{}}}],["this.entrydetailsform.get(\"lng\")?.valuechanges.pipe(debouncetime(700)).subscribe(x",{"_index":2590,"title":{},"body":{"components/IconComponent.html":{}}}],["this.entrydetailsform.get('address')?.dirty",{"_index":2811,"title":{},"body":{"components/IconComponent.html":{}}}],["this.entrydetailsform.get('address')?.markaspristine",{"_index":2812,"title":{},"body":{"components/IconComponent.html":{}}}],["this.entrydetailsform.get('address')?.markasuntouched",{"_index":2810,"title":{},"body":{"components/IconComponent.html":{}}}],["this.entrydetailsform.get('address')?.touched",{"_index":2808,"title":{},"body":{"components/IconComponent.html":{}}}],["this.entrydetailsform.get('keywords')).controls",{"_index":2689,"title":{},"body":{"components/IconComponent.html":{}}}],["this.entrydetailsform.markaspristine",{"_index":2615,"title":{},"body":{"components/IconComponent.html":{}}}],["this.entrydetailsform.markasuntouched",{"_index":2616,"title":{},"body":{"components/IconComponent.html":{}}}],["this.entrydetailsform.reset",{"_index":2682,"title":{},"body":{"components/IconComponent.html":{}}}],["this.entrydetailsform.value.callsign",{"_index":2556,"title":{},"body":{"components/IconComponent.html":{}}}],["this.entrydetailsform.value.date",{"_index":2668,"title":{},"body":{"components/IconComponent.html":{}}}],["this.fieldreports",{"_index":1627,"title":{},"body":{"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.fieldreports.length",{"_index":1624,"title":{},"body":{"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.fieldreports.push(newreport",{"_index":1663,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["this.fieldreports.sort((n1",{"_index":1701,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["this.fieldreports.splice(index",{"_index":1680,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["this.fieldreports[i].lat",{"_index":1707,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["this.fieldreports[i].lng",{"_index":1709,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["this.fieldreports[index",{"_index":1678,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["this.fieldreportservice.addfieldreport(formdata",{"_index":2671,"title":{},"body":{"components/IconComponent.html":{}}}],["this.fieldreportservice.filterfieldreportsbydate(date",{"_index":2087,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.fieldreportservice.getfieldreports",{"_index":2063,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.fieldreportssubject.next(this.fieldreports.map",{"_index":1686,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["this.fieldreportssubject.subscribe(observer",{"_index":1638,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["this.fieldreportstatuses",{"_index":1630,"title":{},"body":{"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"injectables/SettingsService.html":{},"pipes/myUnusedPipe.html":{}}}],["this.fieldreportstatuses.foreach(function(value",{"_index":1936,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.fieldreportstatuses.length",{"_index":4195,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.fieldreportstatuses[this.settings.defrangerstatus",{"_index":2609,"title":{},"body":{"components/IconComponent.html":{}}}],["this.fieldreportstatuses[this.settings.defrangerstatus].status",{"_index":2581,"title":{},"body":{"components/IconComponent.html":{}}}],["this.filteredrangers",{"_index":2533,"title":{},"body":{"components/IconComponent.html":{}}}],["this.findindex(id",{"_index":1677,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/LocalStorageService.html":{}}}],["this.findindex(report.id",{"_index":1679,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["this.form.markaspristine",{"_index":2806,"title":{},"body":{"components/IconComponent.html":{}}}],["this.form.markasuntouched",{"_index":2807,"title":{},"body":{"components/IconComponent.html":{}}}],["this.formbuilder.group",{"_index":2070,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.g",{"_index":1240,"title":{},"body":{"components/ColorEditor.html":{}}}],["this.geocoder.getaddressfromlatlng(ll",{"_index":2827,"title":{},"body":{"components/IconComponent.html":{}}}],["this.geocoder.getlatlngandaddressfromplaceid",{"_index":2815,"title":{},"body":{"components/IconComponent.html":{}}}],["this.geocoder.getlatlngandaddressfromplaceid(pcode",{"_index":2949,"title":{},"body":{"components/IconComponent.html":{}}}],["this.geocoder.isvalidaddress(addrtext",{"_index":3002,"title":{},"body":{"components/IconComponent.html":{}}}],["this.getfaketeams(this.teams",{"_index":4293,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["this.getitem",{"_index":3235,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.getlatlngandaddressfromplaceid(pcode",{"_index":3703,"title":{},"body":{"classes/PlusCode.html":{}}}],["this.getparams",{"_index":2124,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.getvalue('columnseparator",{"_index":2118,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.gmap",{"_index":2692,"title":{},"body":{"components/IconComponent.html":{}}}],["this.gmap.getzoom",{"_index":2695,"title":{},"body":{"components/IconComponent.html":{}}}],["this.gmap?.fitbounds(this.fieldreportservice.bounds.extend",{"_index":2707,"title":{},"body":{"components/IconComponent.html":{}}}],["this.gmap?.setcenter(latlng",{"_index":2705,"title":{},"body":{"components/IconComponent.html":{}}}],["this.gmap?.setcenter(pos",{"_index":2762,"title":{},"body":{"components/IconComponent.html":{}}}],["this.gmap?.setzoom(17",{"_index":2710,"title":{},"body":{"components/IconComponent.html":{}}}],["this.gridapi",{"_index":1991,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["this.gridapi.refreshcells",{"_index":2077,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.gridapi.setdomlayout('print",{"_index":4289,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["this.gridapi.setdomlayout(null",{"_index":4292,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["this.gridapi.setrowdata",{"_index":4862,"title":{},"body":{"classes/csvImport.html":{}}}],["this.gridapi.setrowdata(rowdata",{"_index":4863,"title":{},"body":{"classes/csvImport.html":{}}}],["this.gridapi.sizecolumnstofit",{"_index":2097,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.gridcolumnapi",{"_index":1993,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["this.happy",{"_index":3547,"title":{},"body":{"components/MoodEditor.html":{}}}],["this.has",{"_index":3226,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.hide",{"_index":3032,"title":{},"body":{"components/IconComponent.html":{}}}],["this.http",{"_index":1995,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.http.get('https://jsonplaceholder.typicode.com/users').pipe(tap(data",{"_index":3870,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.get(file",{"_index":4241,"title":{},"body":{"injectables/ShapeService.html":{}}}],["this.http.get(this.stations).subscribe((res",{"_index":3405,"title":{},"body":{"injectables/MarkerService.html":{}}}],["this.httpclient.get('/team/123",{"_index":4329,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["this.httpclient.get(filename",{"_index":3995,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.httpclient.post(`${this.uri}/add",{"_index":1650,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["this.id",{"_index":3100,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["this.imgformood",{"_index":3574,"title":{},"body":{"components/MoodRenderer.html":{}}}],["this.initmap",{"_index":3106,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{}}}],["this.isalerthidden",{"_index":349,"title":{},"body":{"components/AlertsComponent.html":{}}}],["this.isvaliddate(d",{"_index":2038,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.keys",{"_index":3219,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.labels.length",{"_index":2765,"title":{},"body":{"components/IconComponent.html":{}}}],["this.labels[this.labelindex",{"_index":2764,"title":{},"body":{"components/IconComponent.html":{}}}],["this.lat",{"_index":1453,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"classes/Point-1.html":{}}}],["this.lat.coord",{"_index":3809,"title":{},"body":{"classes/Point-1.html":{}}}],["this.latitudecenter",{"_index":880,"title":{},"body":{"classes/CodeArea.html":{}}}],["this.latitudehi",{"_index":885,"title":{},"body":{"classes/CodeArea.html":{}}}],["this.latitudelo",{"_index":886,"title":{},"body":{"classes/CodeArea.html":{}}}],["this.length",{"_index":3253,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.lng",{"_index":3797,"title":{},"body":{"classes/Point-1.html":{}}}],["this.lng.coord",{"_index":3812,"title":{},"body":{"classes/Point-1.html":{}}}],["this.lng.dd",{"_index":3802,"title":{},"body":{"classes/Point-1.html":{}}}],["this.lng.todms(true",{"_index":3806,"title":{},"body":{"classes/Point-1.html":{}}}],["this.loadfromjson('teams.json",{"_index":4295,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["this.loadhardcodedrangers",{"_index":3954,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.loadrangersfromjson",{"_index":3950,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.loadrangersfromlocalstorage",{"_index":3949,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.localstorage.clear",{"_index":3204,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.getitem('clear",{"_index":3205,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.getitem('getitemtest",{"_index":3237,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.getitem('removeitem",{"_index":3252,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.getitem('schemaerror",{"_index":3246,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.length",{"_index":3218,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.removeitem('removeitem",{"_index":3251,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem('clear",{"_index":3202,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem('getitemtest",{"_index":3236,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem('has",{"_index":3257,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem('removeitem",{"_index":3249,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem('rngr_markersize",{"_index":3215,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem('rngr_markersize2",{"_index":3217,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem('rngr_team",{"_index":3227,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem('schemaerror",{"_index":3239,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem('size1",{"_index":3254,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem('size2",{"_index":3255,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.log",{"_index":3334,"title":{},"body":{"components/LogComponent.html":{}}}],["this.log!.innerhtml",{"_index":3345,"title":{},"body":{"components/LogComponent.html":{}}}],["this.log.clientheight",{"_index":3342,"title":{},"body":{"components/LogComponent.html":{}}}],["this.log.scrollheight",{"_index":3341,"title":{},"body":{"components/LogComponent.html":{}}}],["this.log.scrolltop",{"_index":3343,"title":{},"body":{"components/LogComponent.html":{}}}],["this.log.textcontent",{"_index":3339,"title":{},"body":{"components/LogComponent.html":{}}}],["this.log?.innerhtml",{"_index":3344,"title":{},"body":{"components/LogComponent.html":{}}}],["this.long",{"_index":1455,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["this.longitudecenter",{"_index":882,"title":{},"body":{"classes/CodeArea.html":{}}}],["this.longitudehi",{"_index":887,"title":{},"body":{"classes/CodeArea.html":{}}}],["this.longitudelo",{"_index":888,"title":{},"body":{"classes/CodeArea.html":{}}}],["this.makerequest('get",{"_index":4864,"title":{},"body":{"classes/csvImport.html":{}}}],["this.map",{"_index":2412,"title":{},"body":{"components/IconComponent.html":{}}}],["this.maxdate",{"_index":3070,"title":{},"body":{"components/IconComponent.html":{}}}],["this.mindate",{"_index":3067,"title":{},"body":{"components/IconComponent.html":{}}}],["this.mkrsize",{"_index":3214,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.mood",{"_index":3573,"title":{},"body":{"components/MoodRenderer.html":{}}}],["this.mouselatlng",{"_index":2715,"title":{},"body":{"components/IconComponent.html":{}}}],["this.mydategetter",{"_index":1931,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.myminutegetter",{"_index":1934,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.myreactiveform.reset(this.myreactiveform.value",{"_index":2602,"title":{},"body":{"components/IconComponent.html":{}}}],["this.myservice.getresponsedata().then((value",{"_index":4018,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.name",{"_index":3105,"title":{},"body":{"interfaces/LayerType.html":{},"classes/Map.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["this.nextid",{"_index":1635,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/LocalStorageService.html":{}}}],["this.nfakes",{"_index":1904,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["this.note",{"_index":4338,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["this.notes",{"_index":3179,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.notes++[++index",{"_index":3188,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.notes.push(note",{"_index":3186,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.notes.splice(index",{"_index":3191,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.notessubject.next(this.notes.map",{"_index":3194,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.notessubject.subscribe(observer",{"_index":3184,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.now",{"_index":2008,"title":{},"body":{"components/FieldReportsComponent.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["this.numfakesform",{"_index":2069,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.numseperatorwarnings",{"_index":2126,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.observrangers",{"_index":3994,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.onlymarker.setmap(this.gmap",{"_index":2757,"title":{},"body":{"components/IconComponent.html":{}}}],["this.onlymarker.setposition(pos",{"_index":2760,"title":{},"body":{"components/IconComponent.html":{}}}],["this.onlymarker.settitle(title",{"_index":2761,"title":{},"body":{"components/IconComponent.html":{}}}],["this.opensnackbar(`imported",{"_index":397,"title":{},"body":{"components/AlertsComponent.html":{}}}],["this.opensnackbar(`no",{"_index":385,"title":{},"body":{"components/AlertsComponent.html":{}}}],["this.opperiods.push(...items",{"_index":3531,"title":{},"body":{"classes/Mission.html":{}}}],["this.opts",{"_index":3871,"title":{},"body":{"injectables/PostService.html":{}}}],["this.opts.length",{"_index":3868,"title":{},"body":{"injectables/PostService.html":{}}}],["this.params",{"_index":1283,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{}}}],["this.params.api.stopediting",{"_index":1317,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["this.picker.cancel",{"_index":3072,"title":{},"body":{"components/IconComponent.html":{}}}],["this.popper",{"_index":3051,"title":{},"body":{"components/IconComponent.html":{}}}],["this.popper.destroy",{"_index":3055,"title":{},"body":{"components/IconComponent.html":{}}}],["this.popperinstance",{"_index":2597,"title":{},"body":{"components/IconComponent.html":{}}}],["this.popperinstance.setoptions((options",{"_index":3015,"title":{},"body":{"components/IconComponent.html":{}}}],["this.popperinstance.update",{"_index":3018,"title":{},"body":{"components/IconComponent.html":{}}}],["this.populategrid(workbook",{"_index":4868,"title":{},"body":{"classes/csvImport.html":{}}}],["this.r",{"_index":1238,"title":{},"body":{"components/ColorEditor.html":{}}}],["this.rangers",{"_index":2517,"title":{},"body":{"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.rangers.filter((ranger1",{"_index":2557,"title":{},"body":{"components/IconComponent.html":{}}}],["this.rangers.filter(ranger",{"_index":2562,"title":{},"body":{"components/IconComponent.html":{}}}],["this.rangers.length",{"_index":398,"title":{},"body":{"components/AlertsComponent.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.rangers.map",{"_index":3970,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.rangers.slice",{"_index":2537,"title":{},"body":{"components/IconComponent.html":{}}}],["this.rangers[this.findindex(callsign",{"_index":2625,"title":{},"body":{"components/IconComponent.html":{}}}],["this.rangerservice",{"_index":4782,"title":{},"body":{"classes/csvImport.html":{}}}],["this.rangerservice.getranger(callsign",{"_index":2626,"title":{},"body":{"components/IconComponent.html":{}}}],["this.rangerservice.getrangers",{"_index":1736,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.rangerssubject.next(this.rangers.map",{"_index":3975,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.rangerssubject.subscribe(observer",{"_index":3962,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.reactiveform.get(\"firstname\").setvalue",{"_index":2797,"title":{},"body":{"components/IconComponent.html":{}}}],["this.reactiveform.get(\"firstname\").valuechanges.subscribe(selectedvalue",{"_index":2791,"title":{},"body":{"components/IconComponent.html":{}}}],["this.recalcfieldbounds",{"_index":1637,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["this.registrationform.patchvalue(this.sampledata",{"_index":2547,"title":{},"body":{"components/IconComponent.html":{}}}],["this.removeitem",{"_index":3248,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.reset_animation(this.submitinfo",{"_index":2680,"title":{},"body":{"components/IconComponent.html":{}}}],["this.resetfieldreportstatusdefaults",{"_index":4204,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.resetform",{"_index":2686,"title":{},"body":{"components/IconComponent.html":{}}}],["this.rowdata",{"_index":2005,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.schemaerror",{"_index":3238,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.service",{"_index":3259,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.setcolor('green",{"_index":1285,"title":{},"body":{"components/ColorEditor.html":{}}}],["this.setcolor(this.colorctr.value.hex",{"_index":1326,"title":{},"body":{"components/ColorEditor.html":{}}}],["this.sethappy(!this.happy",{"_index":3549,"title":{},"body":{"components/MoodEditor.html":{}}}],["this.sethappy(happy",{"_index":3550,"title":{},"body":{"components/MoodEditor.html":{}}}],["this.sethappy(params.value",{"_index":3546,"title":{},"body":{"components/MoodEditor.html":{}}}],["this.setmood(params",{"_index":3572,"title":{},"body":{"components/MoodRenderer.html":{}}}],["this.settings",{"_index":2009,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.settings.application",{"_index":2574,"title":{},"body":{"components/IconComponent.html":{}}}],["this.settings.debugmode",{"_index":2071,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["this.settings.deflat",{"_index":2578,"title":{},"body":{"components/IconComponent.html":{}}}],["this.settings.deflng",{"_index":2580,"title":{},"body":{"components/IconComponent.html":{}}}],["this.settings.version",{"_index":2575,"title":{},"body":{"components/IconComponent.html":{}}}],["this.settingservice.getfieldreportstatuses",{"_index":1631,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["this.shapes[1",{"_index":4277,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["this.shapes[2",{"_index":4281,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["this.show",{"_index":3030,"title":{},"body":{"components/IconComponent.html":{}}}],["this.snackbar.open('a",{"_index":604,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sortrangersbycallsign",{"_index":3961,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.storage.clear().subscribe",{"_index":3270,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storage.delete('user').subscribe",{"_index":3269,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storage.delete(key",{"_index":537,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["this.storage.get('color').pipe",{"_index":3224,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storage.get('notexisting').subscribe((data",{"_index":3277,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storage.get('test",{"_index":3282,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storage.get('user').subscribe((user",{"_index":3273,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storage.has('someindex').subscribe((result",{"_index":517,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["this.storage.keys().pipe",{"_index":529,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["this.storage.keys().subscribe",{"_index":510,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["this.storage.set('color",{"_index":3289,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storage.set('user",{"_index":3156,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storage.size.subscribe((size",{"_index":522,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["this.storagemap.get('rangersettings",{"_index":1517,"title":{},"body":{"injectables/DataService.html":{}}}],["this.storagemap.get(name",{"_index":3152,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storagemap.has('has",{"_index":3258,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storagemap.has('rngr_team",{"_index":3229,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storagemap.keys",{"_index":3222,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storagemap.set('keys",{"_index":3256,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storagemap.set('rangersettings",{"_index":1515,"title":{},"body":{"injectables/DataService.html":{}}}],["this.storagemap.set('rangertrax",{"_index":3148,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storagemap.set('rngr_markercolor",{"_index":3220,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storagemap.set(name",{"_index":3151,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.submitinfo",{"_index":2582,"title":{},"body":{"components/IconComponent.html":{}}}],["this.submitinfo.innertext",{"_index":2679,"title":{},"body":{"components/IconComponent.html":{}}}],["this.swupdate.activateupdate",{"_index":598,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swupdate.activateupdate().then",{"_index":618,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swupdate.available.pipe",{"_index":614,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swupdate.versionupdates.pipe",{"_index":566,"title":{},"body":{"components/AppComponent.html":{}}}],["this.target",{"_index":3053,"title":{},"body":{"components/IconComponent.html":{}}}],["this.teams",{"_index":4297,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["this.teamservice",{"_index":4781,"title":{},"body":{"classes/csvImport.html":{}}}],["this.teamservice.getteams",{"_index":1735,"title":{},"body":{"injectables/FieldReportService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.togglemood",{"_index":1333,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["this.tooltip",{"_index":2595,"title":{},"body":{"components/IconComponent.html":{}}}],["this.tooltip.removeattribute('data",{"_index":3020,"title":{},"body":{"components/IconComponent.html":{}}}],["this.tooltip.setattribute('data",{"_index":3013,"title":{},"body":{"components/IconComponent.html":{}}}],["this.transport",{"_index":4497,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["this.ts",{"_index":4337,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["this.ts.getteams().push",{"_index":4342,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["this.update",{"_index":3183,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.updatecoords(coord.latitudecenter",{"_index":2960,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["this.updatecoords(lat,lng",{"_index":2994,"title":{},"body":{"components/IconComponent.html":{}}}],["this.updatecoords(llat",{"_index":2829,"title":{},"body":{"components/IconComponent.html":{}}}],["this.updatecoords(response.coordinates.lat",{"_index":2984,"title":{},"body":{"components/IconComponent.html":{}}}],["this.updatefieldreportbounds(newreport",{"_index":1664,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["this.updatefieldreports",{"_index":1636,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["this.updatelocalstorage",{"_index":3959,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["this.updatelocation",{"_index":2835,"title":{},"body":{"components/IconComponent.html":{}}}],["this.updateoverviewmap",{"_index":2696,"title":{},"body":{"components/IconComponent.html":{}}}],["this.version",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"injectables/SettingsService.html":{}}}],["this.w3w.converttocoordinates(verifiedwords).then((response",{"_index":2982,"title":{},"body":{"components/IconComponent.html":{}}}],["this.w3w.getlatlngfrom3words(verifiedwords",{"_index":2981,"title":{},"body":{"components/IconComponent.html":{}}}],["this.zerofill(dt.gethours",{"_index":412,"title":{},"body":{"components/AlertsComponent.html":{}}}],["this.zerofill(dt.getmilliseconds",{"_index":416,"title":{},"body":{"components/AlertsComponent.html":{}}}],["this.zerofill(dt.getminutes",{"_index":414,"title":{},"body":{"components/AlertsComponent.html":{}}}],["this.zerofill(dt.getseconds",{"_index":415,"title":{},"body":{"components/AlertsComponent.html":{}}}],["this.zoom",{"_index":2720,"title":{},"body":{"components/IconComponent.html":{}}}],["those",{"_index":4165,"title":{},"body":{"injectables/SettingsService.html":{}}}],["though",{"_index":2706,"title":{},"body":{"components/IconComponent.html":{}}}],["threaded",{"_index":4958,"title":{},"body":{"index.html":{}}}],["three",{"_index":4529,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["threewords",{"_index":4448,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["threewords.length",{"_index":4558,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["threewordsservice",{"_index":3119,"title":{"injectables/ThreeWordsService.html":{}},"body":{"modules/LazyModule.html":{},"injectables/ThreeWordsService.html":{},"coverage.html":{},"overview.html":{}}}],["throw",{"_index":1063,"title":{},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"classes/Point.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{}}}],["throws",{"_index":1050,"title":{},"body":{"classes/CodeArea.html":{}}}],["thu",{"_index":2019,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["thumbup_icon",{"_index":2394,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["thus",{"_index":4375,"title":{},"body":{"injectables/ThreeWordsService.html":{}}}],["tie",{"_index":4573,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["time",{"_index":411,"title":{},"body":{"components/AlertsComponent.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["timer",{"_index":2619,"title":{},"body":{"components/IconComponent.html":{}}}],["times",{"_index":2510,"title":{},"body":{"components/IconComponent.html":{}}}],["tips",{"_index":2127,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["title",{"_index":551,"title":{},"body":{"components/AppComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["title=\"\").bindpopup",{"_index":1845,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["to/from",{"_index":929,"title":{},"body":{"classes/CodeArea.html":{}}}],["toarray",{"_index":3084,"title":{},"body":{"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/OpPeriod.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["toaster",{"_index":449,"title":{},"body":{"components/AlertsComponent.html":{}}}],["today",{"_index":2194,"title":{},"body":{"components/FooterComponent.html":{}}}],["todd",{"_index":3800,"title":{},"body":{"classes/Point-1.html":{}}}],["todms",{"_index":3803,"title":{},"body":{"classes/Point-1.html":{}}}],["todms(lng",{"_index":1494,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["todms(ptdd",{"_index":1459,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["todo",{"_index":421,"title":{},"body":{"components/AlertsComponent.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["together",{"_index":4786,"title":{},"body":{"classes/csvImport.html":{}}}],["toggle",{"_index":3449,"title":{},"body":{"modules/MaterialModule.html":{}}}],["togglemaxdate(evt",{"_index":3068,"title":{},"body":{"components/IconComponent.html":{}}}],["togglemindate(evt",{"_index":3064,"title":{},"body":{"components/IconComponent.html":{}}}],["togglemood",{"_index":3535,"title":{},"body":{"components/MoodEditor.html":{}}}],["token",{"_index":1228,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{}}}],["tools",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["tooltip",{"_index":2459,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["tooltipanchor",{"_index":5011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tooltipfield",{"_index":1925,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["tooltiplocation",{"_index":4506,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["top",{"_index":404,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/NavbarComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"miscellaneous/typealiases.html":{}}}],["top3wa",{"_index":4600,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["top3wa!.innerhtml",{"_index":4602,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["tort",{"_index":169,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["tostring",{"_index":1456,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["total",{"_index":4777,"title":{},"body":{"classes/csvImport.html":{},"miscellaneous/variables.html":{}}}],["touched",{"_index":2731,"title":{},"body":{"components/IconComponent.html":{}}}],["touchui",{"_index":1148,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["touppercase",{"_index":1068,"title":{},"body":{"classes/CodeArea.html":{}}}],["towards",{"_index":4662,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["town",{"_index":3675,"title":{},"body":{"classes/PlusCode.html":{}}}],["track",{"_index":424,"title":{},"body":{"components/AlertsComponent.html":{},"injectables/FieldReportService.html":{},"index.html":{}}}],["tracked",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["tracking",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["transform",{"_index":4990,"title":{},"body":{"pipes/myUnusedPipe.html":{}}}],["transform(val",{"_index":1980,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["transition",{"_index":1352,"title":{},"body":{"components/ColorEditor.html":{},"injectables/SettingsService.html":{}}}],["transitions",{"_index":2646,"title":{},"body":{"components/IconComponent.html":{}}}],["transparent",{"_index":3555,"title":{},"body":{"components/MoodEditor.html":{}}}],["transport",{"_index":4411,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["transportresponse",{"_index":4488,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"injectables/ThreeWordsService.html":{},"components/X404Component.html":{}}}],["tricks.com/controlling",{"_index":2644,"title":{},"body":{"components/IconComponent.html":{}}}],["tricks.com/restart",{"_index":2655,"title":{},"body":{"components/IconComponent.html":{}}}],["tried",{"_index":2275,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["trigerred",{"_index":545,"title":{},"body":{"classes/AngularComponentOrService.html":{}}}],["trigger",{"_index":2661,"title":{},"body":{"components/IconComponent.html":{}}}],["triggers",{"_index":1300,"title":{},"body":{"components/ColorEditor.html":{}}}],["trim",{"_index":2932,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["true",{"_index":350,"title":{},"body":{"components/AlertsComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["truncated",{"_index":1487,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["try",{"_index":581,"title":{},"body":{"components/AppComponent.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"components/FieldReportsComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"pipes/myUnusedPipe.html":{}}}],["ts",{"_index":4334,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"guards/UnsavedChangesGuard.html":{},"coverage.html":{}}}],["ts:8",{"_index":4392,"title":{},"body":{"guards/UnsavedChangesGuard.html":{}}}],["tsconfig.json",{"_index":4014,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["tslib",{"_index":4907,"title":{},"body":{"dependencies.html":{}}}],["tt",{"_index":4350,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["tue",{"_index":2017,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["tutorial",{"_index":1643,"title":{},"body":{"injectables/FieldReportService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["tview",{"_index":2845,"title":{},"body":{"components/IconComponent.html":{}}}],["two",{"_index":910,"title":{},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["twords",{"_index":2853,"title":{},"body":{"components/IconComponent.html":{}}}],["twords.length",{"_index":2867,"title":{},"body":{"components/IconComponent.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"classes/AngularComponentOrService.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"components/LazyComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"injectables/PopupService.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ShapeService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"guards/UnsavedChangesGuard.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"coverage.html":{},"classes/csvImport.html":{},"miscellaneous/functions.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.ts",{"_index":1218,"title":{},"body":{"components/ColorEditor.html":{}}}],["type:${object.prototype.tostring.call(d",{"_index":2083,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["typeahead_delay",{"_index":4522,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["typealiases",{"_index":4992,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":4618,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["typeerror",{"_index":2840,"title":{},"body":{"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{}}}],["typeof",{"_index":2462,"title":{},"body":{"components/IconComponent.html":{},"classes/Point-1.html":{}}}],["types",{"_index":3308,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["types\":[\"establishment\",\"health\",\"point_of_interest\",\"spa",{"_index":2332,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["types/google",{"_index":4893,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":890,"title":{},"body":{"classes/CodeArea.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{}}}],["uint8array(data1",{"_index":4801,"title":{},"body":{"classes/csvImport.html":{}}}],["uk",{"_index":4361,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["ul",{"_index":232,"title":{},"body":{"components/AboutComponent.html":{},"components/NavbarComponent.html":{}}}],["un",{"_index":3607,"title":{},"body":{"components/NavbarComponent.html":{}}}],["unable",{"_index":2878,"title":{},"body":{"components/IconComponent.html":{},"components/LogComponent.html":{},"classes/PlusCode.html":{},"injectables/SettingsService.html":{}}}],["uncaught",{"_index":587,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["undefined",{"_index":312,"title":{},"body":{"components/AlertsComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/SettingsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["under",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{},"index.html":{}}}],["unimplemented",{"_index":3587,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["unique",{"_index":3528,"title":{},"body":{"classes/Mission.html":{},"classes/OpPeriod.html":{}}}],["unit",{"_index":4973,"title":{},"body":{"index.html":{}}}],["university.io/angular",{"_index":2408,"title":{},"body":{"components/IconComponent.html":{}}}],["unknown",{"_index":1481,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"classes/Point.html":{},"pipes/myUnusedPipe.html":{}}}],["unknown_error",{"_index":2341,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["unsafe",{"_index":3244,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["unsaved",{"_index":4396,"title":{},"body":{"guards/UnsavedChangesGuard.html":{}}}],["unsavedchangesguard",{"_index":803,"title":{"guards/UnsavedChangesGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/UnsavedChangesGuard.html":{},"coverage.html":{}}}],["unsubscribe",{"_index":3283,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["until",{"_index":4209,"title":{},"body":{"injectables/SettingsService.html":{}}}],["unused",{"_index":2416,"title":{},"body":{"components/IconComponent.html":{}}}],["up",{"_index":185,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{}}}],["update",{"_index":388,"title":{},"body":{"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"classes/PlusCode.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"pipes/myUnusedPipe.html":{}}}],["update(newsettings",{"_index":4121,"title":{},"body":{"injectables/SettingsService.html":{}}}],["update_available",{"_index":572,"title":{},"body":{"components/AppComponent.html":{}}}],["updateavailableevent",{"_index":624,"title":{},"body":{"components/AppComponent.html":{}}}],["updatecoords(coord.latitudecenter",{"_index":3766,"title":{},"body":{"classes/PlusCode.html":{}}}],["updatecoords(latdd",{"_index":2879,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{}}}],["updated",{"_index":1297,"title":{},"body":{"components/ColorEditor.html":{}}}],["updatefieldreport",{"_index":1545,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["updatefieldreport(report",{"_index":1583,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["updatefieldreportbounds",{"_index":1546,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["updatefieldreportbounds(newfr",{"_index":1585,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["updatefieldreports",{"_index":1547,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["updatefieldreportstatus",{"_index":4115,"title":{},"body":{"injectables/SettingsService.html":{}}}],["updatefieldreportstatus(newstatuses",{"_index":4124,"title":{},"body":{"injectables/SettingsService.html":{}}}],["updatelocalstorage",{"_index":3890,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["updatelocation(loc",{"_index":2741,"title":{},"body":{"components/IconComponent.html":{}}}],["updatenote(id",{"_index":3189,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["updateoverviewmap",{"_index":2697,"title":{},"body":{"components/IconComponent.html":{}}}],["updateranger",{"_index":3891,"title":{},"body":{"injectables/RangerService.html":{}}}],["updateranger(ranger",{"_index":3919,"title":{},"body":{"injectables/RangerService.html":{}}}],["updates",{"_index":439,"title":{},"body":{"components/AlertsComponent.html":{},"components/AppComponent.html":{},"injectables/FieldReportService.html":{}}}],["updatesavailable",{"_index":565,"title":{},"body":{"components/AppComponent.html":{}}}],["updatevalueandvalidity",{"_index":1311,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["upper",{"_index":846,"title":{},"body":{"classes/CodeArea.html":{}}}],["upshot",{"_index":2623,"title":{},"body":{"components/IconComponent.html":{}}}],["urgent",{"_index":2056,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/SettingsService.html":{},"pipes/myUnusedPipe.html":{}}}],["uri",{"_index":1528,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["url",{"_index":1676,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"injectables/SettingsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{}}}],["url(\"../../../assets/imgs/alpinemarmot.png",{"_index":220,"title":{},"body":{"components/AboutComponent.html":{}}}],["urlhandlingstrategy",{"_index":4454,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["us/docs/web/api/urlsearchparams/urlsearchparams",{"_index":2263,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["us/docs/web/css/background",{"_index":234,"title":{},"body":{"components/AboutComponent.html":{}}}],["us/docs/web/javascript/reference/global_objects/map#objects_vs._maps",{"_index":4223,"title":{},"body":{"injectables/SettingsService.html":{}}}],["usa",{"_index":2322,"title":{},"body":{"classes/GoogleGeocode.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["use",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"components/MoodEditor.html":{},"classes/PlusCode.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/ThreeWordsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{},"index.html":{},"license.html":{},"pipes/myUnusedPipe.html":{}}}],["useclass",{"_index":795,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":775,"title":{},"body":{"modules/AppModule.html":{},"classes/CodeArea.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"injectables/ThreeWordsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["user",{"_index":3102,"title":{},"body":{"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"classes/Map.html":{},"classes/PlusCode.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["user's",{"_index":4273,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["user).subscribe",{"_index":3157,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["users",{"_index":1862,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["user’s",{"_index":4633,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["uses",{"_index":1105,"title":{},"body":{"classes/CodeArea.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["usevalue",{"_index":789,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LogComponent.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"injectables/ThreeWordsService.html":{},"index.html":{}}}],["utcoffset",{"_index":2485,"title":{},"body":{"components/IconComponent.html":{}}}],["utility",{"_index":1466,"title":{"classes/Utility.html":{}},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"components/LogComponent.html":{},"classes/Point.html":{},"classes/Utility.html":{},"coverage.html":{}}}],["utility.zerofill(dt.gethours",{"_index":3335,"title":{},"body":{"components/LogComponent.html":{}}}],["utility.zerofill(dt.getmilliseconds",{"_index":3338,"title":{},"body":{"components/LogComponent.html":{}}}],["utility.zerofill(dt.getminutes",{"_index":3336,"title":{},"body":{"components/LogComponent.html":{}}}],["utility.zerofill(dt.getseconds",{"_index":3337,"title":{},"body":{"components/LogComponent.html":{}}}],["v2",{"_index":2240,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["v3",{"_index":4426,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["v4",{"_index":2817,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["vague",{"_index":2988,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["val",{"_index":3397,"title":{},"body":{"injectables/MarkerService.html":{},"pipes/myUnusedPipe.html":{}}}],["val.touppercase",{"_index":1981,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["val:\"${selval",{"_index":2114,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["valid",{"_index":899,"title":{},"body":{"classes/CodeArea.html":{},"components/FieldReportsComponent.html":{},"injectables/LocalStorageService.html":{},"classes/PlusCode.html":{},"pipes/myUnusedPipe.html":{}}}],["validate",{"_index":2446,"title":{},"body":{"components/IconComponent.html":{}}}],["validation",{"_index":2734,"title":{},"body":{"components/IconComponent.html":{},"interfaces/LayerType.html":{},"classes/Map.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["validators",{"_index":675,"title":{},"body":{"modules/AppModule.html":{},"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["validators.minlength(4",{"_index":2579,"title":{},"body":{"components/IconComponent.html":{}}}],["validators.required",{"_index":1225,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["value",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"classes/CodeArea.html":{},"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point-1.html":{},"injectables/PostService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"pipes/myUnusedPipe.html":{},"miscellaneous/variables.html":{}}}],["value.color",{"_index":1940,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["value.status",{"_index":1938,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["value.tolowercase",{"_index":2555,"title":{},"body":{"components/IconComponent.html":{}}}],["valuechanges",{"_index":1293,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["valuegetter",{"_index":1930,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["values",{"_index":924,"title":{},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"components/IconComponent.html":{},"classes/Point.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"classes/csvImport.html":{}}}],["var",{"_index":245,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/PlusCode.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/Utility.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"components/X404Component.html":{},"pipes/myUnusedPipe.html":{}}}],["variable",{"_index":3656,"title":{},"body":{"classes/PlusCode.html":{},"coverage.html":{}}}],["variables",{"_index":4999,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":4523,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["variety",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["various",{"_index":4215,"title":{},"body":{"injectables/SettingsService.html":{}}}],["vashon",{"_index":2289,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/Point-1.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["vashoncallsigns",{"_index":4011,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["vault",{"_index":4159,"title":{},"body":{"injectables/SettingsService.html":{}}}],["vendor.js:280128:29",{"_index":595,"title":{},"body":{"components/AppComponent.html":{}}}],["verbally",{"_index":4926,"title":{},"body":{"index.html":{}}}],["verified",{"_index":2980,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["verifiedwords",{"_index":2976,"title":{},"body":{"components/IconComponent.html":{}}}],["verify",{"_index":1654,"title":{},"body":{"injectables/FieldReportService.html":{},"components/IconComponent.html":{},"injectables/LocalStorageService.html":{},"classes/Mission.html":{},"classes/OpPeriod.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["verse.moving.miles",{"_index":4386,"title":{},"body":{"injectables/ThreeWordsService.html":{}}}],["version",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"injectables/SettingsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"changelog.html":{}}}],["version_ready",{"_index":570,"title":{},"body":{"components/AppComponent.html":{}}}],["versionreadyevent",{"_index":558,"title":{},"body":{"components/AppComponent.html":{}}}],["versions",{"_index":4936,"title":{},"body":{"index.html":{}}}],["versionupdates",{"_index":628,"title":{},"body":{"components/AppComponent.html":{}}}],["vertical",{"_index":3616,"title":{},"body":{"components/NavbarComponent.html":{}}}],["verticalposition",{"_index":403,"title":{},"body":{"components/AlertsComponent.html":{}}}],["very",{"_index":2060,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["via",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FieldReportService.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"index.html":{}}}],["view",{"_index":1302,"title":{},"body":{"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{}}}],["viewchild",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"components/ColorEditor.html":{},"components/IconComponent.html":{},"components/MoodEditor.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["viewchild('container",{"_index":1220,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["viewchild('picker",{"_index":2406,"title":{},"body":{"components/IconComponent.html":{}}}],["viewchild(googlemap",{"_index":2414,"title":{},"body":{"components/IconComponent.html":{}}}],["viewcontainerref",{"_index":1189,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["viewport\":{\"south\":47.4493062197085,\"west",{"_index":2327,"title":{},"body":{"classes/GoogleGeocode.html":{}}}],["violet",{"_index":4306,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["visibility",{"_index":3612,"title":{},"body":{"components/NavbarComponent.html":{}}}],["visible",{"_index":3008,"title":{},"body":{"components/IconComponent.html":{}}}],["visit",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["vm12981:1",{"_index":1668,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["vocon",{"_index":4655,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["voice",{"_index":1607,"title":{},"body":{"injectables/FieldReportService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"miscellaneous/enumerations.html":{}}}],["void",{"_index":317,"title":{},"body":{"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"interfaces/LayerType.html":{},"injectables/LocalStorageService.html":{},"components/LogComponent.html":{},"classes/Map.html":{},"injectables/MarkerService.html":{},"classes/Mission.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"classes/OpPeriod.html":{},"classes/PlusCode.html":{},"classes/Point.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{},"classes/What3Words.html":{},"components/X404Component.html":{},"classes/csvImport.html":{},"pipes/myUnusedPipe.html":{}}}],["vs",{"_index":2384,"title":{},"body":{"components/IconComponent.html":{},"interfaces/LayerType.html":{},"modules/LazyModule.html":{},"classes/Map.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w",{"_index":1423,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"components/IconComponent.html":{},"classes/Point.html":{},"classes/Point-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["w3w",{"_index":2441,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3w.apiversion",{"_index":4481,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3w.apiversion.version3",{"_index":4425,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3w.autosuggest(\"fun.with.code",{"_index":4666,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3w.autosuggest(threewords",{"_index":4560,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3w.convertto3waclient",{"_index":4536,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3w.convertto3waclient.convertto3wa",{"_index":4545,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3w.convertto3waclient.init(what3words.apikey",{"_index":4537,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3w.convertto3waoptions",{"_index":4538,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3w.converttocoordinates(\"filled.count.soap",{"_index":4556,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3w.converttocoordinatesclient",{"_index":4552,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3w.converttocoordinatesclient.init(what3words.apikey",{"_index":4553,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3w.converttocoordinatesoptions",{"_index":4554,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3w.gridsection",{"_index":4585,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3w.what3wordsservice",{"_index":4435,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3w_regex",{"_index":4468,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3wauto",{"_index":4418,"title":{},"body":{"classes/What3Words.html":{}}}],["w3wauto(w3wsuggestion",{"_index":4451,"title":{},"body":{"classes/What3Words.html":{}}}],["w3wlocale",{"_index":4142,"title":{},"body":{"injectables/SettingsService.html":{}}}],["w3wservice",{"_index":4412,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w3wsuggestion",{"_index":4453,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["w:${west",{"_index":1718,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["w=${worksheet[column",{"_index":4828,"title":{},"body":{"classes/csvImport.html":{}}}],["w=0",{"_index":4845,"title":{},"body":{"classes/csvImport.html":{}}}],["w=1",{"_index":4847,"title":{},"body":{"classes/csvImport.html":{}}}],["w=12/8/12",{"_index":4841,"title":{},"body":{"classes/csvImport.html":{}}}],["w=2012",{"_index":4839,"title":{},"body":{"classes/csvImport.html":{}}}],["w=25",{"_index":4835,"title":{},"body":{"classes/csvImport.html":{}}}],["w=27",{"_index":4852,"title":{},"body":{"classes/csvImport.html":{}}}],["w=athletics",{"_index":4854,"title":{},"body":{"classes/csvImport.html":{}}}],["w=china",{"_index":4837,"title":{},"body":{"classes/csvImport.html":{}}}],["w=cycling",{"_index":4843,"title":{},"body":{"classes/csvImport.html":{}}}],["w=gong",{"_index":4831,"title":{},"body":{"classes/csvImport.html":{}}}],["w=olga",{"_index":4850,"title":{},"body":{"classes/csvImport.html":{}}}],["w=russia",{"_index":4853,"title":{},"body":{"classes/csvImport.html":{}}}],["w=vavrinec",{"_index":4855,"title":{},"body":{"classes/csvImport.html":{}}}],["wa",{"_index":2290,"title":{},"body":{"classes/GoogleGeocode.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"injectables/SettingsService.html":{}}}],["wait",{"_index":4783,"title":{},"body":{"classes/csvImport.html":{}}}],["waiting",{"_index":3207,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["want",{"_index":546,"title":{},"body":{"classes/AngularComponentOrService.html":{},"modules/AppModule.html":{},"classes/CodeArea.html":{},"components/IconComponent.html":{},"injectables/ThreeWordsService.html":{},"guards/UnsavedChangesGuard.html":{},"classes/csvImport.html":{}}}],["warn",{"_index":3982,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["warning",{"_index":1338,"title":{},"body":{"components/ColorEditor.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["warranties",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["warranty",{"_index":148,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["washington",{"_index":3725,"title":{},"body":{"classes/PlusCode.html":{},"injectables/SettingsService.html":{}}}],["watch",{"_index":3272,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["watch(index",{"_index":3171,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["water_drop",{"_index":2770,"title":{},"body":{"components/IconComponent.html":{}}}],["way",{"_index":2653,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["ways",{"_index":4929,"title":{},"body":{"index.html":{}}}],["wb",{"_index":4049,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["wb.sheetnames[0",{"_index":4053,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["wb.sheets[wsname",{"_index":4056,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["we're",{"_index":1120,"title":{},"body":{"classes/CodeArea.html":{},"classes/csvImport.html":{}}}],["web",{"_index":4933,"title":{},"body":{"index.html":{}}}],["webpack",{"_index":3934,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["wed",{"_index":2018,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["weekday",{"_index":2014,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["weekday[d.getday",{"_index":2027,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["weight",{"_index":2165,"title":{},"body":{"components/FieldReportsComponent.html":{},"components/LogComponent.html":{},"components/NavbarComponent.html":{}}}],["weight:bold",{"_index":240,"title":{},"body":{"components/AboutComponent.html":{}}}],["welcome",{"_index":438,"title":{},"body":{"components/AlertsComponent.html":{}}}],["west",{"_index":1424,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"injectables/FieldReportService.html":{},"classes/Point.html":{},"miscellaneous/enumerations.html":{}}}],["west_lng",{"_index":4564,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["wgs84",{"_index":3678,"title":{},"body":{"classes/PlusCode.html":{}}}],["what3words",{"_index":2364,"title":{"classes/What3Words.html":{}},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"coverage.html":{},"index.html":{}}}],["what3words(what3words.apikey",{"_index":4436,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["what3words.api.autosuggest(\"freshen.overlook.clo",{"_index":4594,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["what3words.api.autosuggest(\"fun",{"_index":4681,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["what3words.api.autosuggest(\"fun.with.code",{"_index":4668,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["what3words.api.converttocoordinates(what3words.api.verifiedwords).then(function",{"_index":4574,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["what3words.api.converttocoordinates(words).then(function",{"_index":4603,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["what3words.api.updatecoords(response.coordinates.lat",{"_index":4575,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["what3words.api.verifiedwords",{"_index":4572,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["what3words.apikey",{"_index":4429,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["what3words/api",{"_index":4467,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"dependencies.html":{}}}],["what3words/javascript",{"_index":4458,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["what3wordsaddress",{"_index":4502,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["what3wordsaddress33",{"_index":4683,"title":{"interfaces/What3wordsAddress33.html":{}},"body":{"interfaces/What3wordsAddress33.html":{},"coverage.html":{}}}],["what3wordsautosuggest",{"_index":4508,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["what3wordsautosuggest33",{"_index":4684,"title":{"interfaces/What3wordsAutosuggest33.html":{}},"body":{"interfaces/What3wordsAutosuggest33.html":{},"coverage.html":{}}}],["what3wordsservice",{"_index":4459,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["what3wordssymbol",{"_index":4524,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["what3wordssymbol33",{"_index":4685,"title":{"interfaces/What3wordsSymbol33.html":{}},"body":{"interfaces/What3wordsSymbol33.html":{},"coverage.html":{}}}],["whenever",{"_index":625,"title":{},"body":{"components/AppComponent.html":{}}}],["whether",{"_index":166,"title":{},"body":{"components/AboutComponent.html":{},"classes/CodeArea.html":{},"injectables/ThreeWordsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{},"license.html":{}}}],["whichever",{"_index":766,"title":{},"body":{"modules/AppModule.html":{}}}],["white",{"_index":1412,"title":{},"body":{"components/ColorEditor.html":{},"components/NavbarComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["width",{"_index":491,"title":{},"body":{"components/AlertsComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/NavbarComponent.html":{},"classes/PlusCode.html":{}}}],["width(90",{"_index":484,"title":{},"body":{"components/AlertsComponent.html":{}}}],["width[height_width",{"_index":3683,"title":{},"body":{"classes/PlusCode.html":{}}}],["window",{"_index":741,"title":{},"body":{"modules/AppModule.html":{},"classes/GoogleGeocode.html":{}}}],["window.confirm(\"you",{"_index":4395,"title":{},"body":{"guards/UnsavedChangesGuard.html":{}}}],["window.location.reload",{"_index":599,"title":{},"body":{"components/AppComponent.html":{},"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["window.settimeout",{"_index":1253,"title":{},"body":{"components/ColorEditor.html":{},"components/MoodEditor.html":{}}}],["wire",{"_index":4035,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["wise",{"_index":4339,"title":{},"body":{"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["with\"post",{"_index":1649,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["within",{"_index":3693,"title":{},"body":{"classes/PlusCode.html":{},"injectables/ThreeWordsService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["without",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"injectables/LocalStorageService.html":{},"index.html":{},"license.html":{}}}],["won't",{"_index":2012,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["word",{"_index":2728,"title":{},"body":{"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["words",{"_index":2868,"title":{},"body":{"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["words.service.ts",{"_index":4369,"title":{},"body":{"injectables/ThreeWordsService.html":{},"coverage.html":{}}}],["words.service.ts:14",{"_index":4371,"title":{},"body":{"injectables/ThreeWordsService.html":{}}}],["words/three",{"_index":4368,"title":{},"body":{"injectables/ThreeWordsService.html":{},"coverage.html":{}}}],["work",{"_index":1034,"title":{},"body":{"classes/CodeArea.html":{},"classes/Coord.html":{},"classes/Coordinate.html":{},"components/FieldReportsComponent.html":{},"injectables/LocalStorageService.html":{},"classes/Point.html":{},"index.html":{},"pipes/myUnusedPipe.html":{}}}],["workaround",{"_index":2636,"title":{},"body":{"components/IconComponent.html":{},"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"injectables/SettingsService.html":{}}}],["workbook",{"_index":4045,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{}}}],["workbook.sheetnames[0",{"_index":4812,"title":{},"body":{"classes/csvImport.html":{}}}],["workbook.sheets[firstsheetname",{"_index":4814,"title":{},"body":{"classes/csvImport.html":{}}}],["worker",{"_index":560,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":757,"title":{},"body":{"modules/AppModule.html":{}}}],["worker/swupdate",{"_index":564,"title":{},"body":{"components/AppComponent.html":{}}}],["workers",{"_index":590,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["working",{"_index":2527,"title":{},"body":{"components/IconComponent.html":{}}}],["works",{"_index":2132,"title":{},"body":{"components/FieldReportsComponent.html":{}}}],["worksheet",{"_index":4813,"title":{},"body":{"classes/csvImport.html":{}}}],["worksheet['a",{"_index":4824,"title":{},"body":{"classes/csvImport.html":{}}}],["worksheet[column",{"_index":4858,"title":{},"body":{"classes/csvImport.html":{}}}],["world",{"_index":1986,"title":{},"body":{"components/FieldReportsComponent.html":{},"injectables/LocalStorageService.html":{},"pipes/myUnusedPipe.html":{}}}],["worrying",{"_index":3300,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["wow",{"_index":4095,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["wrapper",{"_index":1366,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["wrapper#grid",{"_index":4584,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["wrapper/issues/40",{"_index":4471,"title":{},"body":{"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["write",{"_index":3165,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["writing",{"_index":3287,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["wrong",{"_index":3240,"title":{},"body":{"injectables/LocalStorageService.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["ws",{"_index":4054,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["wsname",{"_index":4052,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["www.stackoverflow.com/questions/5786025",{"_index":1493,"title":{},"body":{"classes/Coord.html":{},"classes/Coordinate.html":{},"classes/Point.html":{}}}],["www.stackoverflow.com/questions/5970961",{"_index":3818,"title":{},"body":{"classes/Point-1.html":{}}}],["x",{"_index":452,"title":{},"body":{"components/AlertsComponent.html":{},"components/IconComponent.html":{},"classes/PlusCode.html":{},"classes/What3Words.html":{},"interfaces/What3wordsAddress33.html":{},"interfaces/What3wordsAutosuggest33.html":{},"interfaces/What3wordsSymbol33.html":{}}}],["x${this.colorctr.value.hex",{"_index":1315,"title":{},"body":{"components/ColorEditor.html":{}}}],["x.properties.population",{"_index":3415,"title":{},"body":{"injectables/MarkerService.html":{}}}],["x404",{"_index":284,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{}}}],["x404.component.html",{"_index":4688,"title":{},"body":{"components/X404Component.html":{}}}],["x404.component.scss",{"_index":4687,"title":{},"body":{"components/X404Component.html":{}}}],["x404/x404.component",{"_index":729,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["x404component",{"_index":283,"title":{"components/X404Component.html":{}},"body":{"components/AboutComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ColorEditor.html":{},"components/FieldReportsComponent.html":{},"components/FooterComponent.html":{},"components/IconComponent.html":{},"components/LazyComponent.html":{},"components/LogComponent.html":{},"components/MoodEditor.html":{},"components/MoodRenderer.html":{},"components/NavbarComponent.html":{},"components/X404Component.html":{},"coverage.html":{},"overview.html":{}}}],["x:';//{{colorctr.value.hex",{"_index":1405,"title":{},"body":{"components/ColorEditor.html":{}}}],["xlsx",{"_index":3937,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{},"classes/csvImport.html":{},"dependencies.html":{}}}],["xlsx.js",{"_index":3938,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["xlsx.read(ab",{"_index":4051,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["xlsx.read(bstr",{"_index":4807,"title":{},"body":{"classes/csvImport.html":{}}}],["xlsx.workbook",{"_index":4050,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["xlsx.worksheet",{"_index":4055,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["xmlhttprequest",{"_index":4788,"title":{},"body":{"classes/csvImport.html":{}}}],["xxx",{"_index":1622,"title":{},"body":{"injectables/FieldReportService.html":{}}}],["y",{"_index":1764,"title":{},"body":{"injectables/FieldReportService.html":{},"components/FooterComponent.html":{}}}],["ybimprhh",{"_index":4420,"title":{},"body":{"classes/What3Words.html":{}}}],["year",{"_index":4771,"title":{},"body":{"classes/csvImport.html":{},"miscellaneous/variables.html":{}}}],["yellow",{"_index":1377,"title":{},"body":{"components/ColorEditor.html":{},"components/NavbarComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamType.html":{}}}],["yields",{"_index":742,"title":{},"body":{"modules/AppModule.html":{}}}],["you're",{"_index":1265,"title":{},"body":{"components/ColorEditor.html":{},"components/IconComponent.html":{}}}],["yyy",{"_index":4015,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["yyy.primarymain",{"_index":4017,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["yyyy",{"_index":2039,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["zero",{"_index":2123,"title":{},"body":{"components/FieldReportsComponent.html":{},"pipes/myUnusedPipe.html":{}}}],["zerofill",{"_index":302,"title":{},"body":{"components/AlertsComponent.html":{},"classes/Utility.html":{}}}],["zerofill(integ",{"_index":330,"title":{},"body":{"components/AlertsComponent.html":{},"classes/Utility.html":{}}}],["zip",{"_index":4076,"title":{},"body":{"injectables/RangerService.html":{},"interfaces/RangerType.html":{}}}],["zone",{"_index":2501,"title":{},"body":{"components/IconComponent.html":{}}}],["zone.js",{"_index":4911,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":658,"title":{},"body":{"modules/AppModule.html":{},"components/IconComponent.html":{},"modules/LazyModule.html":{},"overview.html":{}}}],["zoomcontrol",{"_index":2429,"title":{},"body":{"components/IconComponent.html":{}}}],["zoomed",{"_index":2719,"title":{},"body":{"components/IconComponent.html":{}}}],["zooms",{"_index":2708,"title":{},"body":{"components/IconComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lazy/about/about.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                SettingsService\n                \n            \n\n\n            \n                selector\n                rangertrak-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lazy/about/about.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/lazy/about/about.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit, ViewChild, isDevMode } from '@angular/core'\n\nimport {  SettingsService } from '../../shared/services'\n\n@Component({\n  selector: 'rangertrak-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss'],\n  providers: [SettingsService]\n})\nexport class AboutComponent {  //implements OnInit {\n\n  version = \"\"\n\n  constructor(\n    //private settingsService: SettingsService\n  ) {\n    console.log(\"AboutComponent getting constructed\")\n    this.version = SettingsService.Settings.version\n  }\n\n  //ngOnInit() {  }\n}\n\n    \n\n    \n        \n  RangerTrak.org\n  About\n  \n    Version {{version}}\n    This is an open-source application for tracking & mapping CERT, ACS, other\n      teams, rangers & individuals roaming around, who are only reliably\n      connected via HAM radio or other non-data supporting means. They can\n      radio in their locations - in a variety of formats, and be centrally tracked.\n     This should be able to function (with some degredation) even if the person\n      using this is offline also.\n\n     Items requiring online access: \n    \n      GeoCoding an address\n      All maps (for now)\n      3Word functionality (for now)\n    \n\n\n    eoc.online provides free tools for Emergency Operations Centers and\n      emergency services. For more information and to report\n        issues please visit https://github.com/EOCOnline/RangerTrak.\n\n    \n      ©2022 eoc.online, under the MIT License\n      \n        Permission is hereby granted, free of charge, to any person obtaining a copy of this\n          software\n          and associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n          without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n          of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following\n          conditions:\n        The above copyright notice and this permission notice shall be included in all copies or\n          substantial portions of the Software.\n        THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n          EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n          FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\n          OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n          IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n          WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n        -- from https://opensource.org/licenses/MIT\n      \n    \n\n  \n\n  Menu Keyboard interaction\n    Keyboard shortcut - Action\n    Down Arrow - Focus the next menu item.\n    Up Arrow - Focus the previous menu item.\n    Left Arrow - Close the current menu if it is a sub-menu.\n    Right Arrow - Opens the current menu item's sub-menu.\n    Enter - Activate the focused menu item.\n    Escape - Close all open menus.\n  \n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                \n#AboutBody {\n  //display: inline-block;\n  //background-image: './src/assets/imgs/AlpineMarmot.png' !important;\n  //height: 650 px;\n  color: black;\n  background-image: linear-gradient(to bottom, rgba(252, 252, 252, 0.5), rgba(8, 8, 8, 0.5)), url(\"../../../assets/imgs/AlpineMarmot.png\") ;\n  //color: black;\n  //background-image: url(\"../../../assets/imgs/AlpineMarmot.png\") ;\n  //background-size: 100%;\n  //background-size: contain;\n  background-size: cover;\n}\n\n// https://dev.to/nazanin_ashrafi/how-to-darken-an-image-with-css-4f5h\n/*\nfilter: brightness(30%);\n  opacity: 0.5;\n  ul {\n    background-color: black;\n    }\n*/\n// https://developer.mozilla.org/en-US/docs/Web/CSS/background-image\n//https://rapidapi.com/guides/css-painting-api\n\n.bold{\n  font-weight:bold\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  RangerTrak.org  About      Version {{version}}    This is an open-source application for tracking & mapping CERT, ACS, other      teams, rangers & individuals roaming around, who are only reliably      connected via HAM radio or other non-data supporting means. They can      radio in their locations - in a variety of formats, and be centrally tracked.     This should be able to function (with some degredation) even if the person      using this is offline also.     Items requiring online access:           GeoCoding an address      All maps (for now)      3Word functionality (for now)        eoc.online provides free tools for Emergency Operations Centers and      emergency services. For more information and to report        issues please visit https://github.com/EOCOnline/RangerTrak.          ©2022 eoc.online, under the MIT License              Permission is hereby granted, free of charge, to any person obtaining a copy of this          software          and associated documentation files (the \"Software\"), to deal in the Software without restriction, including          without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies          of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following          conditions:        The above copyright notice and this permission notice shall be included in all copies or          substantial portions of the Software.        THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,          EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,          FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS          OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER          IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION          WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.        -- from https://opensource.org/licenses/MIT              Menu Keyboard interaction    Keyboard shortcut - Action    Down Arrow - Focus the next menu item.    Up Arrow - Focus the previous menu item.    Left Arrow - Close the current menu if it is a sub-menu.    Right Arrow - Opens the current menu item\\'s sub-menu.    Enter - Activate the focused menu item.    Escape - Close all open menus.  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'rangertrak-about'},{'name': 'AlertsComponent', 'selector': 'rangertrak-alerts'},{'name': 'AppComponent', 'selector': 'rangertrak-root'},{'name': 'ColorEditor', 'selector': 'editor-cell'},{'name': 'EntryComponent', 'selector': 'rangertrak-entry'},{'name': 'FieldReportsComponent', 'selector': 'rangertrak-field-reports'},{'name': 'FooterComponent', 'selector': 'rangertrak-footer'},{'name': 'GmapComponent', 'selector': 'rangertrak-gmap'},{'name': 'IconComponent', 'selector': 'icon'},{'name': 'LazyComponent', 'selector': 'lazy'},{'name': 'LmapComponent', 'selector': 'rangertrak-lmap'},{'name': 'LogComponent', 'selector': 'rangertrak-log'},{'name': 'MoodEditor', 'selector': 'editor-cell'},{'name': 'MoodRenderer', 'selector': 'mood-cell'},{'name': 'NavbarComponent', 'selector': 'rangertrak-navbar'},{'name': 'RangersComponent', 'selector': 'rangertrak-rangers'},{'name': 'SettingsComponent', 'selector': 'rangertrak-settings'},{'name': 'X404Component', 'selector': 'rangertrak-x404'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertsComponent.html":{"url":"components/AlertsComponent.html","title":"component - AlertsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/alerts/alerts.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rangertrak-alerts\n            \n\n            \n                styleUrls\n                ./alerts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alerts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alertBanner\n                            \n                            \n                                emoji\n                            \n                            \n                                isAlertHidden\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Banner\n                            \n                            \n                                dbug\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBtnCloseAlert\n                            \n                            \n                                onBtnCloseBottomAlert\n                            \n                            \n                                OpenSnackBar\n                            \n                            \n                                zeroFill\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_snackBar: MatSnackBar, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/alerts/alerts.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Banner\n                        \n                    \n                \n            \n            \n                \nBanner(msg: string, action1: string | undefined, action2: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/alerts/alerts.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    action1\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Close'\n                                    \n\n                                \n                                \n                                    action2\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"Close\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dbug\n                        \n                    \n                \n            \n            \n                \ndbug(msg: string, alerts: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/alerts/alerts.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    alerts\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/alerts/alerts.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBtnCloseAlert\n                        \n                    \n                \n            \n            \n                \nonBtnCloseAlert()\n                \n            \n\n\n            \n                \n                    Defined in src/app/alerts/alerts.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBtnCloseBottomAlert\n                        \n                    \n                \n            \n            \n                \nonBtnCloseBottomAlert()\n                \n            \n\n\n            \n                \n                    Defined in src/app/alerts/alerts.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OpenSnackBar\n                        \n                    \n                \n            \n            \n                \nOpenSnackBar(message: string, action: string, duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/alerts/alerts.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zeroFill\n                        \n                    \n                \n            \n            \n                \nzeroFill(integ: number, lngth: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/alerts/alerts.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    integ\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lngth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alertBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/alerts/alerts.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emoji\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'emoji_people'\n                    \n                \n                    \n                        \n                                Defined in src/app/alerts/alerts.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAlertHidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/alerts/alerts.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar'\nimport { NavigationEnd } from '@angular/router';\n\n//import { MatFormFieldModule } from '@angular/material/form-field';\nimport { MDCBanner } from '@material/banner';\n\n@Component({\n  selector: 'rangertrak-alerts',\n  templateUrl: './alerts.component.html',\n  styleUrls: ['./alerts.component.scss']\n})\nexport class AlertsComponent implements OnInit {\n\n  isAlertHidden: boolean\n  private alertBanner: HTMLElement | null = null\n  emoji = 'emoji_people'\n\n  constructor(\n    private _snackBar: MatSnackBar,\n    @Inject(DOCUMENT) private document: Document) {\n    this.isAlertHidden = true;\n  }\n\n  ngOnInit(): void {\n    console.log('AlertComponent.ngInit')\n\n    this.alertBanner = this.document.querySelector('.mdc-banner')\n    if (this.alertBanner == null) {\n      console.log(\"Alerts:ngInit() couldn't find alert Banner!\")\n    }\n  }\n\n  Banner(msg: string, action1: string|undefined = 'Close', action2: string|undefined = \"Close\") {\n    // https://material.io/components/banners#usage  //@use \"@material/banner/styles\";\n\n    //console.log(`BANNER Called with ${msg}`)\n\n    /*if (emoj != null) {\n      this.emoji = emoj // REVIEW: Change to emoji is permanent, not temporary: OK?\n    }*/\n\n    if (this.alertBanner == null) {\n      console.log('REVIEW: AlertComponent.Banner() called BEFORE AlertComponent.ngInit!')\n      this.alertBanner = this.document.querySelector('.mdc-banner')\n    }\n\n    if (this.alertBanner != null) {\n      const banner = new MDCBanner(this.alertBanner)\n      banner.open()\n      banner.setText(msg)\n      banner.setPrimaryActionText(action1)\n      banner.setSecondaryActionText(action2)\n      //banner.layout()\n      console.log(`BANNER displayed with ${msg}`)\n    } else {\n      console.log(\"Could not locate alertBanner !!!!\")\n    }\n    //this.openSnackBar(`No Rangers found. Please enter them into the grid and then use the Update button,  or provide a Rangers.JSON file to import from or FUTUREE: Import them from an Excel file.`, `Nota Bene`, 1000)\n    //  this.openSnackBar(`Imported \"${this.rangers.length}\" rangers.`, `Nota Bene`, 2000)\n\n  }\n\n  // https://v5.material.angular.io/components/snack-bar/overview\n  OpenSnackBar(message: string, action: string, duration = 0) {\n    this._snackBar.open(message, action, { duration: duration, verticalPosition: 'top' })\n  }\n\n  onBtnCloseAlert() {\n    console.log(`onBtnCloseAlert() called`)\n  }\n\n  onBtnCloseBottomAlert() {\n    console.log(`onBtnCloseBottomAlert() called`)\n    this.isAlertHidden = true;\n  }\n\n  dbug(msg: string, alerts: boolean) {\n    var dt = new Date();\n    var dbugLog = document.getElementById(\"dbugLog\")\n    var time = this.zeroFill(dt.getHours(), 2) + \":\" + this.zeroFill(dt.getMinutes(), 2) + \":\" + this.zeroFill(dt.getSeconds(), 2) + \":\" + this.zeroFill(dt.getMilliseconds(), 4);\n    if (dbugLog) {\n      var dbugMsg = time + \"-  &nbsp;&nbsp;\" + msg + \"\" + dbugLog.innerHTML;\n      dbugLog.innerHTML = dbugMsg;\n    }\n    // TODO: Only if settings say to do this!\n    // console.log(\"Ranger Track: \" + dbugMsg); // Convert dbugLog from HTML to plain text...\n    if (alerts == true) {\n      //document.getElementById('#alerts').html(\"Alert! \"+time + \"-  &nbsp;&nbsp;\" + msg);\n      //document.getElementById('#alerts').fadeIn().delay(2500).fadeOut();\n    }\n  }\n\n  zeroFill(integ: number, lngth: number) {\n    var strg = integ.toString();\n    while (strg.length \n    \n\n    \n        \n\n\n  \n    \n      \n\n        \n        {{emoji}}\n        \n        \n        \n      \n      \n\n        \n          \n          done\n          Ignore\n        \n\n        \n          \n            \n            build\n            Go to Rangers Page\n          \n        \n\n      \n    \n  \n\n\n\n\n\n  \n    Welcome to RangerTrak! Updates and alerts will appear here.\n\n    \n      https://jasonwatmore.com/post/2020/07/16/angular-10-alert-notifications-example &\n      https://material.angular.io/components/snack-bar/overview\n      https://www.tutsmake.com/angular-11-toaster-notification-example/\n      https://www.w3schools.com/bootstrap4/bootstrap_alerts.asp\n    \n    \n\n      Close\n      X\n      \n      X Icon\n\n    \n  \n\n  \n    Requires Bootstrap4! You should read this message.\n  \n\n  \n\n\n    \n\n    \n                \n                    ./alerts.component.scss\n                \n                @use \"@material/theme\"\nwith (\n  //$level: 0,\n  //$color: green,\n  $primary: #962f10,\n  $on-primary: #442C2E\n);\n@use \"@material/button\";\n//@use \"@material/button/styles\";\n@use \"@material/banner\";\n@use \"@material/banner/styles\";\n// https://material.io/components/buttons/web#api\n\n.Alerts__Close {\n  margin-bottom: 10px;  // as requested by Lighthouse...\n  min-height: 50px;\n}\n\n.mdc-banner {\n  //  @include fill-color(yellow);\n  @include banner.fill-color(rgb(226, 226, 136));\n  //@include banner.divider-color(aqua);\n  @include banner.max-width(90%);\n\n  //@include banner.  .level(0);\n  //border       : 1px red solid;\n  //margin-left: -1em;\n  //width: 70em;\n  //height: 15%;\n  //margin-left: -150px;\n  //padding      : -30px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{emoji}}                                                                done          Ignore                                                  build            Go to Rangers Page                                    Welcome to RangerTrak! Updates and alerts will appear here.          https://jasonwatmore.com/post/2020/07/16/angular-10-alert-notifications-example &      https://material.angular.io/components/snack-bar/overview      https://www.tutsmake.com/angular-11-toaster-notification-example/      https://www.w3schools.com/bootstrap4/bootstrap_alerts.asp              Close      X            X Icon            Requires Bootstrap4! You should read this message.    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'rangertrak-about'},{'name': 'AlertsComponent', 'selector': 'rangertrak-alerts'},{'name': 'AppComponent', 'selector': 'rangertrak-root'},{'name': 'ColorEditor', 'selector': 'editor-cell'},{'name': 'EntryComponent', 'selector': 'rangertrak-entry'},{'name': 'FieldReportsComponent', 'selector': 'rangertrak-field-reports'},{'name': 'FooterComponent', 'selector': 'rangertrak-footer'},{'name': 'GmapComponent', 'selector': 'rangertrak-gmap'},{'name': 'IconComponent', 'selector': 'icon'},{'name': 'LazyComponent', 'selector': 'lazy'},{'name': 'LmapComponent', 'selector': 'rangertrak-lmap'},{'name': 'LogComponent', 'selector': 'rangertrak-log'},{'name': 'MoodEditor', 'selector': 'editor-cell'},{'name': 'MoodRenderer', 'selector': 'mood-cell'},{'name': 'NavbarComponent', 'selector': 'rangertrak-navbar'},{'name': 'RangersComponent', 'selector': 'rangertrak-rangers'},{'name': 'SettingsComponent', 'selector': 'rangertrak-settings'},{'name': 'X404Component', 'selector': 'rangertrak-x404'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AngularComponentOrService.html":{"url":"classes/AngularComponentOrService.html","title":"class - AngularComponentOrService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AngularComponentOrService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/storagemap.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: StorageMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/storagemap.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        StorageMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StorageMap } from '@ngx-pwa/local-storage';\n\nexport class AngularComponentOrService {\n\n  constructor(private storage: StorageMap) { }\n\n// iterate over keys in storage\nthis.storage.keys().subscribe({\n    next: (key) => {\n      console.log(key);\n    },\n    complete: () => {\n      console.log('Done');\n    },\n  });\n\n// See if key exists in storage:\nthis.storage.has('someindex').subscribe((result) => {\n\n  if (result) {\n    console.log('The key exists :)');\n  } else {\n    console.log('The key does not exist :(');\n  }\n\n});\n\n// Get number of items stored in storage\nthis.storage.size.subscribe((size) => {\n\n  console.log(size);\n\n});\n\n// Delete ONLY data prefixed with \"app_\"\nimport { filter, mergeMap} from 'rxjs'\n\nthis.storage.keys().pipe(\n\n  /* Keep only keys starting with 'app_' */\n  filter((key) => key.startsWith('app_')),\n\n  /* Remove the item for each key */\n  mergeMap((key) => this.storage.delete(key))\n\n).subscribe({\n  complete: () => {\n\n    /* Note we don't act in the classic success callback as it will be trigerred for each key,\n     * while we want to act only when all the operations are done */\n    console.log('Done!');\n\n  }\n});\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rangertrak-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(swUpdate: SwUpdate, snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        swUpdate\n                                                  \n                                                        \n                                                                        SwUpdate\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'rangertrak'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n//import { MatSnackBar } from '@material/snackbar'\nimport { SwUpdate, VersionReadyEvent } from '@angular/service-worker'\nimport { filter, map, switchMap } from 'rxjs'\n\n@Component({\n  selector: 'rangertrak-root',\n\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'rangertrak';\n\n  constructor(\n    private swUpdate: SwUpdate,\n    private snackbar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n\n\n    //https://angular.io/api/service-worker/SwUpdate\n    const updatesAvailable = this.swUpdate.versionUpdates.pipe(\n      filter((evt): evt is VersionReadyEvent => evt.type === 'VERSION_READY'),\n      map(evt => ({\n        type: 'UPDATE_AVAILABLE',\n        current: evt.currentVersion,\n        available: evt.latestVersion,\n      })));\n\n\n    if (updatesAvailable) {\n      // if( confirm(`Reload the page to update from current version ${evt.currentVersion} to latest version ${evt.latestVersion}. Proceed now?`)) { //TODO:\n      //if( confirm(`Reload the page to update from the current to the latest version. Proceed now?`)) { // TODO: This showed up for every page refresh!!! (Try CNTRL-F5?)\n      /* BUG: Gets: Error: Uncaught (in promise): Error: Service workers are disabled or not supported by this browser\n        Error: Service workers are disabled or not supported by this browser\n        at SwUpdate.activateUpdate (vendor.js:280128:29)\n        at AppComponent.ngOnInit (main.js:302:27) */\n      //this.swUpdate.activateUpdate()\n      // TODO: OR????\n      // window.location.reload()\n      console.log(`App Updates ARE Available!  Reload page to install next version????`)\n      //  } else {\n      //    console.log(`Don't update YET...`)\n      //  }\n    }\n\n    /*\n\n\n\n        const updatesAvailable = this.swUpdate.versionUpdates.pipe(\n          filter((evt): evt is VersionReadyEvent => evt.type === 'VERSION_READY'),\n          map(evt => ({\n            type: 'UPDATE_AVAILABLE',\n            current: evt.currentVersion,\n            available: evt.latestVersion,\n          })\n          ) => this.snackbar.open('A new version is available!', 'Update now').afterDismissed()\n        ).subscribe()\n\n\n        let result:any\n    // from pg 115 ng projects\n    // https://github.com/PacktPublishing/Angular-Projects-Second-Edition/issues/7\n    this.swUpdate.available.pipe(\n      //switchMap(() => this.snackbar.open('A new version is available!', 'Refresh Page to Update now',  {duration: 5000})).afterDismissed(),\n      switchMap(() => this.snackbar.open('A new version is available!', 'Update now').afterDismissed()),\n      filter(result => result.dismissedByAction),\n      map(() => this.swUpdate.activateUpdate().then(() => location.reload()))\n    ).subscribe();\n    */\n  }\n}\n\n/*\n(property) SwUpdate.available: Observable\nEmits an UpdateAvailableEvent event whenever a new app version is available.\n\n@deprecated\nUse versionUpdates instead.\n\nThe of behavior available can be rebuild by filtering for the VersionReadyEvent:\n\nimport {filter, map} from 'rxjs/operators';\n// ...\nconst updatesAvailable = swUpdate.versionUpdates.pipe(\nfilter((evt): evt is VersionReadyEvent => evt.type === 'VERSION_READY'),\nmap(evt => ({\ntype: 'UPDATE_AVAILABLE',\ncurrent: evt.currentVersion,\navailable: evt.latestVersion,\n})));\n\n*/\n\n    \n\n    \n        \n\n  \n  \n\n  \n    \n  \n\n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n.content {margin:0px 1em;}\n\n// see https://developers.google.com/maps/documentation/javascript/overview#HTML5 for older browsers\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'rangertrak-about'},{'name': 'AlertsComponent', 'selector': 'rangertrak-alerts'},{'name': 'AppComponent', 'selector': 'rangertrak-root'},{'name': 'ColorEditor', 'selector': 'editor-cell'},{'name': 'EntryComponent', 'selector': 'rangertrak-entry'},{'name': 'FieldReportsComponent', 'selector': 'rangertrak-field-reports'},{'name': 'FooterComponent', 'selector': 'rangertrak-footer'},{'name': 'GmapComponent', 'selector': 'rangertrak-gmap'},{'name': 'IconComponent', 'selector': 'icon'},{'name': 'LazyComponent', 'selector': 'lazy'},{'name': 'LmapComponent', 'selector': 'rangertrak-lmap'},{'name': 'LogComponent', 'selector': 'rangertrak-log'},{'name': 'MoodEditor', 'selector': 'editor-cell'},{'name': 'MoodRenderer', 'selector': 'mood-cell'},{'name': 'NavbarComponent', 'selector': 'rangertrak-navbar'},{'name': 'RangersComponent', 'selector': 'rangertrak-rangers'},{'name': 'SettingsComponent', 'selector': 'rangertrak-settings'},{'name': 'X404Component', 'selector': 'rangertrak-x404'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAlertsComponent\n\nAlertsComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAlertsComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nColorEditor\n\nColorEditor\n\nAppModule -->\n\nColorEditor->AppModule\n\n\n\n\n\nEntryComponent\n\nEntryComponent\n\nAppModule -->\n\nEntryComponent->AppModule\n\n\n\n\n\nFieldReportsComponent\n\nFieldReportsComponent\n\nAppModule -->\n\nFieldReportsComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGmapComponent\n\nGmapComponent\n\nAppModule -->\n\nGmapComponent->AppModule\n\n\n\n\n\nLmapComponent\n\nLmapComponent\n\nAppModule -->\n\nLmapComponent->AppModule\n\n\n\n\n\nLogComponent\n\nLogComponent\n\nAppModule -->\n\nLogComponent->AppModule\n\n\n\n\n\nMoodEditor\n\nMoodEditor\n\nAppModule -->\n\nMoodEditor->AppModule\n\n\n\n\n\nMoodRenderer\n\nMoodRenderer\n\nAppModule -->\n\nMoodRenderer->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nRangersComponent\n\nRangersComponent\n\nAppModule -->\n\nRangersComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nX404Component\n\nX404Component\n\nAppModule -->\n\nX404Component->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLazyModule\n\nLazyModule\n\nAppModule -->\n\nLazyModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nFieldReportService\n\nFieldReportService\n\nAppModule -->\n\nFieldReportService->AppModule\n\n\n\n\n\nMarkerService\n\nMarkerService\n\nAppModule -->\n\nMarkerService->AppModule\n\n\n\n\n\nPopupService\n\nPopupService\n\nAppModule -->\n\nPopupService->AppModule\n\n\n\n\n\nRangerService\n\nRangerService\n\nAppModule -->\n\nRangerService->AppModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nAppModule -->\n\nSettingsService->AppModule\n\n\n\n\n\nShapeService\n\nShapeService\n\nAppModule -->\n\nShapeService->AppModule\n\n\n\n\n\nTeamService\n\nTeamService\n\nAppModule -->\n\nTeamService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AlertsComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ColorEditor\n                        \n                        \n                            EntryComponent\n                        \n                        \n                            FieldReportsComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            GmapComponent\n                        \n                        \n                            LmapComponent\n                        \n                        \n                            LogComponent\n                        \n                        \n                            MoodEditor\n                        \n                        \n                            MoodRenderer\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            RangersComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            X404Component\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FieldReportService\n                        \n                        \n                            MarkerService\n                        \n                        \n                            PopupService\n                        \n                        \n                            RangerService\n                        \n                        \n                            SettingsService\n                        \n                        \n                            ShapeService\n                        \n                        \n                            TeamService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            LazyModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { FieldReportService, FieldReportSource, FieldReportStatusType, FieldReportType, MarkerService, PopupService, RangerService, RangerType, SettingsService, SettingsType, ShapeService, TeamService, TeamType } from './shared/services/';\nimport { FormArray, FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\n\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ColorEditor } from './settings/color-editor.component';\nimport { MoodEditor } from './settings/mood-editor.component';\nimport { MoodRenderer } from './settings/mood-renderer.component';\n//import { AgmCoreModule } from '@agm/core';\nimport { AlertsComponent } from './alerts/alerts.component';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { EntryComponent } from './entry/entry.component';\nimport { FieldReportsComponent } from './field-reports/field-reports.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FooterComponent } from './footer/footer.component';\nimport { GmapComponent } from './gmap/gmap.component';\nimport { GoogleMapsModule } from '@angular/google-maps'\nimport { HttpClientModule } from '@angular/common/http';\nimport { LazyModule } from './lazy/lazy.module'\nimport { LmapComponent } from './lmap/lmap.component';\nimport { LogComponent } from './log/log.component';\n//import { MatDatepickerModule } from '@matheo/datepicker';\n//import { MatNativeDateModule } from '@matheo/datepicker/core';\nimport { NgxMatDatetimePickerModule, NgxMatNativeDateModule, NgxMatTimepickerModule } from '@angular-material-components/datetime-picker'\nimport { MAT_COLOR_FORMATS, NgxMatColorPickerModule, NGX_MAT_COLOR_FORMATS } from '@angular-material-components/color-picker'\nimport { MDCBanner } from '@material/banner'\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\nimport { MaterialModule } from './material.module';\n\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { NgModule } from '@angular/core';\nimport { RangersComponent } from './rangers/rangers.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { X404Component } from './x404/x404.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n// from ionic-app.module.ts\n//import { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n//import { File } from '@ionic-native/file/ngx';\n\n//import { AgmSnazzyInfoWindowModule } from '@agm/snazzy-info-window';\n// REVIEW: import of AgmSnazzyInfoWindowModule yields: D:\\Projects\\RangerTrak\\rangertrak\\src\\app\\app.module.ts depends on '@agm/snazzy-info-window'. CommonJS or AMD dependencies can cause optimization bailouts.\n// https://angular.io/guide/build#configuring-commonjs-dependencies\n\n@NgModule({\n\n  // Import sub-modules\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    GoogleMapsModule,\n    HttpClientModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    FontAwesomeModule,\n    AgGridModule.withComponents([\n      MoodEditor,\n      MoodRenderer,\n    ]),\n    //AgmCoreModule.forRoot({ apiKey: 'AIzaSyDDPgrn2iLu2p4II4H1Ww27dx6pVycHVs4' }),\n    // AgmSnazzyInfoWindowModule, // BUG: API_KEY\n    LazyModule,\n    NgxMatColorPickerModule,\n   // MatNativeDateModule,\n   // MatDatepickerModule,\n    NgxMatDatetimePickerModule,\n    NgxMatTimepickerModule,\n    NgxMatNativeDateModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n    //, IonicModule.forRoot()\n  ],\n\n  // Define all the components, directives and pipes, that are declared and used inside this module.\n  // If you want to use any of these in multiple modules, bundle it into a separate module & import that in the module\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    AlertsComponent,\n    GmapComponent,\n    LmapComponent,\n    EntryComponent,\n    FieldReportsComponent,\n    SettingsComponent,\n    ColorEditor,\n    MoodEditor,\n    MoodRenderer,\n    RangersComponent,\n    X404Component,\n    LogComponent\n  ],\n\n  // Define any required @Injectables. Any sub-components or modules can get the same @Injectable instance via dependency injection.\n  // In the case of the AppModule, these @Injectables are application-scoped\n  providers: [\n    TeamService, RangerService, FieldReportService, MarkerService, PopupService, SettingsService, ShapeService,\n    { provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: { duration: 2500 } },\n    { provide: MAT_COLOR_FORMATS, useValue: NGX_MAT_COLOR_FORMATS }\n  ],\n  //{provide: MAT_BANNER_DEFAULT_OPTIONS}],\n  // Team, Ranger,\n  // providers: [File, { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n\n  bootstrap: [AppComponent]//,\n\n  // Make components, directives or pipes available to other modules...\n  // , exports: [\n  //   SettingsComponent\n  // ]\n})\nexport class AppModule { }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nimport { EntryComponent } from './entry/entry.component';\nimport { FieldReportsComponent } from './field-reports/field-reports.component';\nimport { GmapComponent } from './gmap/gmap.component';\nimport { LazyModule } from './lazy/lazy.module';\nimport { LmapComponent } from './lmap/lmap.component';\nimport { LogComponent } from './log/log.component';\nimport { NgModule } from '@angular/core';\nimport { RangersComponent } from './rangers/rangers.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { X404Component } from './x404/x404.component';\n\n//import { UnsavedChangesGuard } from './entry/unsavedChangesGuard ';\n\n//import { UnsavedChangesGuard } from './entry/unsavedChangesGuard'\n//import { AboutComponent } from './lazy/about/about.component';\n\n// https://angular.io/guide/router\n\nconst routes: Routes = [\n  // EAGER Routes\n\n  //{ path: '',   redirectTo: '/entry', pathMatch: 'full' }, // redirects\n  { path: '',   component: EntryComponent},//, pathMatch: 'full' }, // redirects\n  //{ path: 'entry', component: EntryComponent}, //, canActivate: [UnsavedChangesGuard] },\n  // , resolve: {SettingsComponent} // causes: Error: Uncaught (in promise): NullInjectorError: R3InjectorError(AppModule)[SettingsComponent -> SettingsComponent -> SettingsComponent]:\n  //NullInjectorError: No provider for SettingsComponent!\n // { path: 'entry', component: EntryComponent, resolve: {SettingsComponent: myResolver }}, //, canActivate: [UnsavedChangesGuard] },\n  { path: 'reports', component: FieldReportsComponent },\n  { path: 'gmap', component: GmapComponent },\n  { path: 'lmap', component: LmapComponent },\n  { path: 'rangers', component: RangersComponent },\n  { path: 'settings', component: SettingsComponent },\n  { path: 'log', component: LogComponent },\n\n\n\n  // LAZY Routes: preloaded right after root app module (via dynamic import module)\n  {\n    path: 'about',\n    loadChildren: () => LazyModule // WAS import('./lazy/lazy.module').then(module => module.\n  },\n\n  // Page not found route\n  { path: '**', component: X404Component }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],  // lazy loads ASAP!\n  exports: [RouterModule]\n  //, bootstrap: [SettingsComponent]\n})\nexport class AppRoutingModule { }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CodeArea.html":{"url":"classes/CodeArea.html","title":"class - CodeArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CodeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/open-location-code.ts\n        \n\n\n            \n                Description\n            \n            \n                Coordinates of a decoded Open Location Code.\nThe coordinates include the latitude and longitude of the lower left and\nupper right corners and the center of the bounding box for the area the\ncode represents.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                codeLength\n                            \n                            \n                                    Public\n                                latitudeCenter\n                            \n                            \n                                    Public\n                                latitudeHi\n                            \n                            \n                                    Public\n                                latitudeLo\n                            \n                            \n                                    Public\n                                longitudeCenter\n                            \n                            \n                                    Public\n                                longitudeHi\n                            \n                            \n                                    Public\n                                longitudeLo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getLatitudeHeight\n                            \n                            \n                                    Public\n                                getLongitudeWidth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(latitudeLo: number, longitudeLo: number, latitudeHi: number, longitudeHi: number, codeLength: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/open-location-code.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latitudeLo\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        longitudeLo\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        latitudeHi\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        longitudeHi\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        codeLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        codeLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/open-location-code.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        latitudeCenter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/open-location-code.ts:28\n                        \n                    \n\n            \n                \n                    The latitude of the center in degrees.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        latitudeHi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/open-location-code.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        latitudeLo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/open-location-code.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        longitudeCenter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/open-location-code.ts:32\n                        \n                    \n\n            \n                \n                    The longitude of the center in degrees.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        longitudeHi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/open-location-code.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        longitudeLo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/open-location-code.ts:34\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getLatitudeHeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLatitudeHeight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/open-location-code.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getLongitudeWidth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLongitudeWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/open-location-code.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        const LATITUDE_MAX = 90;\nconst LONGITUDE_MAX = 180;\n\n/**\n * Coordinates of a decoded Open Location Code.\n *\n * The coordinates include the latitude and longitude of the lower left and\n * upper right corners and the center of the bounding box for the area the\n * code represents.\n *\n * @constructor\n */\nexport class CodeArea {\n  /**\n   * The latitude of the center in degrees.\n   */\n  public latitudeCenter: number;\n  /**\n   * The longitude of the center in degrees.\n   */\n  public longitudeCenter: number;\n\n  constructor(public latitudeLo:number, public longitudeLo:number, public latitudeHi:number, public longitudeHi:number, public codeLength:number) {\n    this.latitudeCenter = Math.min(latitudeLo + (latitudeHi - latitudeLo) / 2, LATITUDE_MAX);\n    this.longitudeCenter = Math.min(longitudeLo + (longitudeHi - longitudeLo) / 2, LONGITUDE_MAX);\n  }\n\n  public getLatitudeHeight(): number {\n    return this.latitudeHi - this.latitudeLo;\n  }\n\n  public getLongitudeWidth(): number {\n    return this.longitudeHi - this.longitudeLo;\n  }\n}\n\n/**\n * Open Location Code implementation for TypeScript\n */\nexport  class OpenLocationCode {   // TODO: default\n\n  public constructor(public code: string) {\n  }\n\n  public getCode(): string {\n    return this.code;\n  }\n\n  /**\n   * Returns whether this {@link OpenLocationCode} is a padded Open Location Code, meaning that it\n   * contains less than 8 valid digits.\n   */\n  public isPadded(): boolean {\n    return this.code.indexOf(OpenLocationCode.PADDING_CHARACTER_) >= 0;\n  }\n\n  private static readonly CODE_PRECISION_NORMAL = 10;\n  private static readonly CODE_PRECISION_EXTRA = 11;\n  private static readonly MAX_DIGIT_COUNT_ = 15;\n\n  // A separator used to break the code into two parts to aid memorability.\n  private static readonly SEPARATOR_ = \"+\";\n\n  // The number of characters to place before the separator.\n  private static readonly SEPARATOR_POSITION_ = 8;\n\n  // The character used to pad codes.\n  private static readonly PADDING_CHARACTER_ = \"0\";\n\n  // The character set used to encode the values.\n  private static readonly CODE_ALPHABET_ = \"23456789CFGHJMPQRVWX\";\n\n  // The base to use to convert numbers to/from.\n  private static readonly ENCODING_BASE_ = OpenLocationCode.CODE_ALPHABET_.length;\n\n  // The maximum value for latitude in degrees.\n  static readonly LATITUDE_MAX_ = LATITUDE_MAX;\n\n  // The maximum value for longitude in degrees.\n  static readonly LONGITUDE_MAX_ = LONGITUDE_MAX;\n\n  // Maximum code length using lat/lng pair encoding. The area of such a\n  // code is approximately 13x13 meters (at the equator), and should be suitable\n  // for identifying buildings. This excludes prefix and separator characters.\n  private static readonly PAIR_CODE_LENGTH_ = 10;\n\n  // The resolution values in degrees for each position in the lat/lng pair\n  // encoding. These give the place value of each position, and therefore the\n  // dimensions of the resulting area.\n  private static readonly PAIR_RESOLUTIONS_ = [20.0, 1.0, .05, .0025, .000125];\n\n  // First place value of the pairs (if the last pair value is 1).\n  private static readonly PAIR_FIRST_PLACE_VALUE_ = Math.pow(OpenLocationCode.ENCODING_BASE_, (OpenLocationCode.PAIR_CODE_LENGTH_ / 2 - 1));\n\n  // Inverse of the precision of the pair section of the code.\n  private static readonly PAIR_PRECISION_ = Math.pow(OpenLocationCode.ENCODING_BASE_, 3);\n\n  // Number of digits in the grid precision part of the code.\n  private static readonly GRID_CODE_LENGTH_ = OpenLocationCode.MAX_DIGIT_COUNT_ - OpenLocationCode.PAIR_CODE_LENGTH_;\n\n  // Number of columns in the grid refinement method.\n  private static readonly GRID_COLUMNS_ = 4;\n\n  // Number of rows in the grid refinement method.\n  private static readonly GRID_ROWS_ = 5;\n\n  // First place value of the latitude grid (if the last place is 1).\n  private static readonly GRID_LAT_FIRST_PLACE_VALUE_ = Math.pow(OpenLocationCode.GRID_ROWS_, (OpenLocationCode.GRID_CODE_LENGTH_ - 1));\n\n  // First place value of the longitude grid (if the last place is 1).\n  private static readonly GRID_LNG_FIRST_PLACE_VALUE_ = Math.pow(OpenLocationCode.GRID_COLUMNS_, (OpenLocationCode.GRID_CODE_LENGTH_ - 1));\n\n  // Multiply latitude by this much to make it a multiple of the finest\n  // precision.\n  private static readonly FINAL_LAT_PRECISION_ = OpenLocationCode.PAIR_PRECISION_ *\n      Math.pow(OpenLocationCode.GRID_ROWS_, (OpenLocationCode.MAX_DIGIT_COUNT_ - OpenLocationCode.PAIR_CODE_LENGTH_));\n\n  // Multiply longitude by this much to make it a multiple of the finest\n  // precision.\n  private static readonly FINAL_LNG_PRECISION_ = OpenLocationCode.PAIR_PRECISION_ *\n      Math.pow(OpenLocationCode.GRID_COLUMNS_, (OpenLocationCode.MAX_DIGIT_COUNT_ - OpenLocationCode.PAIR_CODE_LENGTH_));\n\n  // Minimum length of a code that can be shortened.\n  private static readonly MIN_TRIMMABLE_CODE_LEN_ = 6;\n\n\n  /**\n   * Determines if a code is valid.\n   *\n   * To be valid, all characters must be from the Open Location Code character\n   * set with at most one separator. The separator can be in any even-numbered\n   * position up to the eighth digit.\n   *\n   * @param {string} code The string to check.\n   * @return {boolean} True if the string is a valid code.\n   */\n  public static isValid(code: string): boolean {\n    if (!code) {\n      return false;\n    }\n    // The separator is required.\n    if (code.indexOf(OpenLocationCode.SEPARATOR_) === -1) {\n      return false;\n    }\n    if (code.indexOf(OpenLocationCode.SEPARATOR_) !== code.lastIndexOf(OpenLocationCode.SEPARATOR_)) {\n      return false;\n    }\n    // Is it the only character?\n    if (code.length === 1) {\n      return false;\n    }\n    // Is it in an illegal position?\n    if (code.indexOf(OpenLocationCode.SEPARATOR_) > OpenLocationCode.SEPARATOR_POSITION_ ||\n      code.indexOf(OpenLocationCode.SEPARATOR_) % 2 === 1) {\n      return false;\n    }\n    // We can have an even number of padding characters before the separator,\n    // but then it must be the final character.\n    if (code.indexOf(OpenLocationCode.PADDING_CHARACTER_) > -1) {\n      // Short codes cannot have padding\n      if (code.indexOf(OpenLocationCode.SEPARATOR_)  1 || padMatch[0].length % 2 === 1 ||\n        padMatch[0].length > OpenLocationCode.SEPARATOR_POSITION_ - 2) {\n        return false;\n      }\n      // If the code is long enough to end with a separator, make sure it does.\n      if (code.charAt(code.length - 1) !== OpenLocationCode.SEPARATOR_) {\n        return false;\n      }\n    }\n    // If there are characters after the separator, make sure there isn't just\n    // one of them (not legal).\n    if (code.length - code.indexOf(OpenLocationCode.SEPARATOR_) - 1 === 1) {\n      return false;\n    }\n\n    // Strip the separator and any padding characters.\n    const strippedCode = code.replace(new RegExp(\"\\\\\" + OpenLocationCode.SEPARATOR_ + \"+\"), \"\")\n      .replace(new RegExp(OpenLocationCode.PADDING_CHARACTER_ + \"+\"), \"\");\n    // Check the code contains only valid characters.\n    for (let i = 0, len = strippedCode.length; i = 0 && code.indexOf(OpenLocationCode.SEPARATOR_) = OpenLocationCode.LATITUDE_MAX_ * 2) {\n      return false; // The code would decode to a latitude of >= 90 degrees.\n    }\n    if (code.length > 1) {\n      // Work out what the first longitude character indicates for longitude.\n      const firstLngValue = OpenLocationCode.CODE_ALPHABET_.indexOf(code.charAt(1).toUpperCase()) * OpenLocationCode.ENCODING_BASE_;\n      if (firstLngValue >= OpenLocationCode.LONGITUDE_MAX_ * 2) {\n        return false; // The code would decode to a longitude of >= 180 degrees.\n      }\n    }\n    return true;\n  };\n\n  public contains(latitude: number, longitude: number): boolean {\n    const codeArea = OpenLocationCode.decode(this.getCode());\n    return codeArea.latitudeLo  OpenLocationCode.PAIR_CODE_LENGTH_) {\n      for (let i = 0; i = OpenLocationCode.SEPARATOR_POSITION_) {\n      return code.substring(0, editedCodeLength + 1);\n    }\n    // Pad and return the code.\n    return code.substring(0, editedCodeLength) +\n        Array(OpenLocationCode.SEPARATOR_POSITION_ - editedCodeLength + 1).join(OpenLocationCode.PADDING_CHARACTER_) + OpenLocationCode.SEPARATOR_;\n  };\n\n  /**\n   * Decodes an Open Location Code into its location coordinates.\n   *\n   * Returns a CodeArea object that includes the coordinates of the bounding\n   * box - the lower left, center and upper right.\n   *\n   * @param {string} code The code to decode.\n   * @return {CodeArea} An object with the coordinates of the\n   *     area of the code.\n   * @throws {Exception} If the code is not valid.\n   */\n  public static decode(code: string): CodeArea {\n    // This calculates the values for the pair and grid section separately, using\n    // integer arithmetic. Only at the final step are they converted to floating\n    // point and combined.\n    if (!OpenLocationCode.isFull(code)) {\n      throw new Error(\"IllegalArgumentException: Passed Open Location Code is not a valid full code: \" + code);\n    }\n    // Strip the '+' and '0' characters from the code and convert to upper case.\n    const editedCode = code.replace(OpenLocationCode.SEPARATOR_, '')\n        .replace(new RegExp(OpenLocationCode.PADDING_CHARACTER_ + OpenLocationCode.SEPARATOR_), '')\n        .toUpperCase();\n\n    // Initialise the values for each section. We work them out as integers and\n    // convert them to floats at the end.\n    let normalLat = -OpenLocationCode.LATITUDE_MAX_ * OpenLocationCode.PAIR_PRECISION_;\n    let normalLng = -OpenLocationCode.LONGITUDE_MAX_ * OpenLocationCode.PAIR_PRECISION_;\n    let gridLat = 0;\n    let gridLng = 0;\n    // How many digits do we have to process?\n    let digits = Math.min(editedCode.length, OpenLocationCode.PAIR_CODE_LENGTH_);\n    // Define the place value for the most significant pair.\n    let pv = OpenLocationCode.PAIR_FIRST_PLACE_VALUE_;\n    // Decode the paired digits.\n    for (let position = 0; position  OpenLocationCode.PAIR_CODE_LENGTH_) {\n      // Initialise the place values for the grid.\n      let rowpv = OpenLocationCode.GRID_LAT_FIRST_PLACE_VALUE_;\n      let colpv = OpenLocationCode.GRID_LNG_FIRST_PLACE_VALUE_;\n      // How many digits do we have to process?\n      digits = Math.min(editedCode.length, OpenLocationCode.MAX_DIGIT_COUNT_);\n      for (let i = OpenLocationCode.PAIR_CODE_LENGTH_; i = -OpenLocationCode.LATITUDE_MAX_) {\n      // If the proposed code is more than half a cell north of the reference location,\n      // it's too far, and the best match will be one cell south.\n      codeArea.latitudeCenter -= resolution;\n    } else if (referenceLatitude - halfResolution > codeArea.latitudeCenter &&\n      codeArea.latitudeCenter + resolution  codeArea.longitudeCenter) {\n      codeArea.longitudeCenter += resolution;\n    }\n\n    return OpenLocationCode.encode(codeArea.latitudeCenter, codeArea.longitudeCenter, codeArea.codeLength);\n  };\n\n  /**\n   * Remove characters from the start of an OLC code.\n   *\n   * This uses a reference location to determine how many initial characters\n   * can be removed from the OLC code. The number of characters that can be\n   * removed depends on the distance between the code center and the reference\n   * location.\n   *\n   * @param {string} code The full code to shorten.\n   * @param {number} latitude The latitude to use for the reference location.\n   * @param {number} longitude The longitude to use for the reference location.\n   * @return {string} The code, shortened as much as possible that it is still\n   *     the closest matching code to the reference location.\n   * @throws {Exception} if the passed code is not a valid full code or the\n   *     reference location values are not numbers.\n   */\n  public static shorten(code: string, latitude: number, longitude: number): string {\n    if (!OpenLocationCode.isFull(code)) {\n      throw new Error(\"ValueError: Passed code is not valid and full: \" + code);\n    }\n    if (code.indexOf(OpenLocationCode.PADDING_CHARACTER_) !== -1) {\n      throw new Error(\"ValueError: Cannot shorten padded codes: \" + code);\n    }\n\n    const codeUpper = code.toUpperCase();\n    const codeArea = OpenLocationCode.decode(codeUpper);\n    if (codeArea.codeLength = 1; i--) {\n      // Check if we're close enough to shorten. The range must be less than 1/2\n      // the resolution to shorten at all, and we want to allow some safety, so\n      // use 0.3 instead of 0.5 as a multiplier.\n      if (range  10 have different precisions due to the grid method having\n   * fewer columns than rows.\n   * @param {number} codeLength\n   * @return {number} The latitude precision in degrees.\n   */\n  private static computeLatitudePrecision(codeLength: number): number {\n    if (codeLength = 180) {\n      longitudeOutput = longitudeOutput - 360;\n    }\n    return longitudeOutput;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorEditor.html":{"url":"components/ColorEditor.html","title":"component - ColorEditor","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ColorEditor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/color-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ICellEditorAngularComp\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                editor-cell\n            \n\n            \n                styleUrls\n                ./color-editor-component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-editor-component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                b\n                            \n                            \n                                    Public\n                                color\n                            \n                            \n                                colorCntlDisabled\n                            \n                            \n                                colorCtr\n                            \n                            \n                                    Public\n                                colorPalette\n                            \n                            \n                                g\n                            \n                            \n                                    Private\n                                params\n                            \n                            \n                                r\n                            \n                            \n                                touchUi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agInit\n                            \n                            \n                                getValue\n                            \n                            \n                                isPopup\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onClick\n                            \n                            \n                                onColorCtrClosed\n                            \n                            \n                                onKeyDown\n                            \n                            \n                                onMouseDown\n                            \n                            \n                                setColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                childItem\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/color-editor.component.ts:39\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        childItem\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/color-editor.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        agInit\n                        \n                    \n                \n            \n            \n                \nagInit(params: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/color-editor.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/color-editor.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPopup\n                        \n                    \n                \n            \n            \n                \nisPopup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/color-editor.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/color-editor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/color-editor.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/color-editor.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onColorCtrClosed\n                        \n                    \n                \n            \n            \n                \nonColorCtrClosed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/color-editor.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyDown\n                        \n                    \n                \n            \n            \n                \nonKeyDown(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/color-editor.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseDown\n                        \n                    \n                \n            \n            \n                \nonMouseDown(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/color-editor.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColor\n                        \n                    \n                \n            \n            \n                \nsetColor(color: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/color-editor.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        b\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/color-editor.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'green'\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/color-editor.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colorCntlDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/color-editor.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colorCtr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/color-editor.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        colorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ThemePalette\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/color-editor.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        g\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/color-editor.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/color-editor.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        r\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/color-editor.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touchUi\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/color-editor.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Input, ViewChild, ViewContainerRef, } from '@angular/core';\nimport { Color } from '@angular-material-components/color-picker';\nimport { ThemePalette } from '@angular/material/core';\nimport { ICellEditorAngularComp } from 'ag-grid-angular';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ArgumentOutOfRangeError } from 'rxjs';\n\n// https://www.ag-grid.com/angular-data-grid/component-cell-editor\n// TODO: Based on boolean value for icons: we need a selection from a panel of icons...\n@Component({\n  selector: 'editor-cell',\n  templateUrl: './color-editor-component.html',\n  styleUrls: ['./color-editor-component.scss',],\n})\nexport class ColorEditor implements ICellEditorAngularComp, AfterViewInit {\n\n  @Input() childItem = '';  // [childItem]=\"parentItem\" in child.html, parentItem='Some string' in parent.ts\n\n  // https://stackblitz.com/edit/pputo1--run\n  // Pass an object from parent to nested component (child gets array from parent)\n  // parent.html: \n  // parent.ts: currentItems = [{ id: 21,  name: 'phone' }];\n  // child.ts: @Input() items: Item[] = [];  type.ts: export interface Item { id: number; name: string; }\n\n  /*\n    @ViewChild('container', { read: ViewContainerRef })\n    public container!: ViewContainerRef;\n  */\n  private params: any;\n  //colorCtr: AbstractControl = new FormControl(new Color(255, 243, 0), [Validators.required])\n  //colorCtr = new FormControl(new Color(255, 30, 255), [Validators.required])  // TODO: use existing instead of a default color\n  colorCtr: FormControl\n  colorCntlDisabled = false\n  touchUi = false\n  public colorPalette: ThemePalette = 'primary';\n  public color: string = 'green'\n  r: number\n  g: number\n  b: number\n  // No suitable injection token for parameter 'r' of class 'ColorEditor'. Consider using the @Inject decorator to specify an injection token.\n  constructor() { //r:number, g:number, b:number\n    // TODO: use existing color (obtained by @inject() ???) instead of an arbitrary default color\n    this.r = 196\n    this.g = 0\n    this.b = 252\n\n    this.colorCtr = new FormControl(new Color(this.r, this.g, this.b), [Validators.required])\n    //console.log(`constructor = ${this.colorCtr.value.hex} from  ${this.color}`)\n  }\n  // dont use afterGuiAttached for post gui events - hook into ngAfterViewInit instead for this\n  ngAfterViewInit() {\n    window.setTimeout(() => {\n      //  this.container.element.nativeElement.focus();\n    });\n  }\n\n  ngOnDestroy() {\n    // TODO: How to get this event from the ColorPicker?!\n    // https://angular.io/guide/lifecycle-hooks#cleaning-up-on-instance-destruction\n  }\n\n  agInit(params: any): void {\n    /*\n    agInit = fff300 from  green\n    color-editor.component.ts:51 setValue = {\"r\":255,\"g\":243,\"b\":0,\"a\":1,\"roundA\":1,\"hex\":\"fff300\",\"rgba\":\"rgba(255,243,0,1)\"},\n        green to brown\n    forms.mjs:5112\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n\n      Example:\n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n\n\n      onClick = fff300 from  brown\n    color-editor.component.ts:66 setValue = {\"r\":255,\"g\":243,\"b\":0,\"a\":1,\"roundA\":1,\"hex\":\"fff300\",\"rgba\":\"rgba(255,243,0,1)\"},\n        brown to fff300\n\n    color-editor.component.ts:99 oncolorCtrClosed = ff00ff from  fff300\n      */\n    this.params = params\n    console.log(`agInit = ${this.colorCtr.value.hex} from  ${this.color}`)\n\n    //this.setColor('green') // default color, but causes only one color to be displayed in picker...\n    // this.colorCtr.setValue(\"green\", {\n    //   onlySelf  : true  //  When true, each change only affects this control, and not its parent. Default is false.\n    //  })\n    /*\n           emitEvent?: true,  // When true or not supplied (the default), both the statusChanges and valueChanges observables emit events with the latest status and value when the control value is updated. When false, no events are emitted.\n           emitModelToViewChange?: true,  // When true or not supplied (the default), each change triggers an onChange event to update the view.\n            emitViewToModelChange?: true  // When true or not supplied (the default), each change triggers an ngModelChange event to update the model.\n        })\n        Configuration options that determine how the control propagates changes and emits events when the value changes. The configuration options are passed to the AbstractControl#updateValueAndValidity * updateValueAndValidity method.\n    */\n  }\n\n  // called by ag-grid\n  getValue(): any {\n    console.log(`getValue = ${this.colorCtr}, ${this.color}`)\n    return this.color\n  }\n\n  // Gets called when color picker gets closed\n  onColorCtrClosed() {\n    console.log(`oncolorCtrClosed = ${this.colorCtr.value.hex} from  ${this.color}`)\n    //this.color = `x${this.colorCtr.value.hex} = ${this.colorCtr.value.rgba}`  // pass color on to parent\n    this.color = this.colorCtr.value.hex  // pass color on to parent\n    this.params.api.stopEditing() // close smaller inline editor\n  }\n\n  // -------------- REST OF THESE ARE EXTRANEOUS???  ----------------------------\n\n  isPopup(): boolean {\n    console.log(`isPopup = ${this.colorCtr.value.hex} from  ${this.color}`)\n    return false;\n  }\n\n  setColor(color: string): void {\n    console.log(`setValue = ${JSON.stringify(this.colorCtr.value)},\n    ${this.color} to ${color}`)\n    this.color = color;\n    this.colorCtr.setValue(color = color)\n  }\n\n  onClick(event: any) {\n    console.log(`onClick = ${this.colorCtr.value.hex} from  ${this.color}`)\n    this.setColor(this.colorCtr.value.hex);\n    this.params.api.stopEditing();\n  }\n\n  onMouseDown(event: any): void {\n    const key = event.key;\n    console.log(`onMouseDown = ${this.colorCtr.value.hex} from  ${this.color}`)\n    this.setColor(this.colorCtr.value.hex);\n    event.stopPropagation();\n  }\n\n  onKeyDown(event: any): void {\n    const key = event.key;\n    console.log(`onKeyDown (${key})= ${this.colorCtr.value.hex} from  ${this.color}`)\n    if (\n      key === 'ArrowLeft' || // left\n      key == 'ArrowRight'\n    ) {\n      // right\n      // this.toggleMood();\n      event.stopPropagation();\n      // TODO: this.params.api.stopEditing();????\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n\n  \n     HEX: {{colorCtr.value?.hex}} &nbsp;&nbsp; RGBA: {{colorCtr.value?.rgba}}\n     \n     Warning: 1) Cclick the small color palette icon on the right.\n     2) Select your color.\n     3) Click just a bit to to the left of the color palette to \n     'set' the color & dismiss the dialog.\n  \n\n  \n    \n      \n      \n      \n\n       BBBBB\n        howNow?!\n        \n          star\n          OK\n        \n      \n\n    \n\n    \n\n    HEX: {{colorCtr.value?.hex}} &nbsp;&nbsp; {{colorCtr.value?.rgba}}\n  \n  \n     HEX: {{colorCtr.value?.hex}} &nbsp;&nbsp; RGBA: {{colorCtr.value?.rgba}}\n  \n\n\n\n\n    \n\n    \n                \n                    ./color-editor-component.scss\n                \n                \n.mat-card {\n  //transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  //display: block;\n  //position: relative;\n  padding: 0px;\n  //border-radius: 4px;\n}\n\n/*\n.mat-form-field-appearance-legacy {\n  padding:0;\n  padding-bottom: 0em;\n}\n\n.mat-form-field-wrapper {\n  padding:0;\n  padding-bottom: 0em;\n}\n\n.mat-field.form {\n  padding:0;\n  padding-bottom: 0em;\n}\n\n.colorPickerIcon {\n  padding:0;\n}\n*/\n\n/*\n.ngx-mat-colorpicker-content  {\n  background-color: red;\n  border: 6px dotted red;\n}\n.NgxMatColorToggleComponent {\n  background-color: red;\n  border: 6px dotted red;\n}\n*/\n\n/*\n#colorTextField {\n  background-color:rgb(241, 198, 141);\n  padding:0 !important;\n}\n\n#colorIconToggleArea {\n  background-color: yellow;\n  padding:0 !important;\n}\n#colorFormField{\n  background-color:rgb(187, 236, 154);\n  padding:0 !important;\n  display:inline-block;\n}\n.mat-form.field.wrapper {\n  border: 3px solid red;\n  padding:0 !important;\n}\n*/\n\n/*\n.NgxMatColorPickerContentComponent {\n  background-color: red;\n  border: 3px dotted red;\n}\n\n.NgxMatColorPaletteComponent {\n  background-color: green;\n  border: 3px dotted green;\n}\n\n.NgxMatColorCanvasComponent {\n  background-color: aqua;\n  border: 3px dotted aqua;\n}\n\n.NgxMatColorCollectionComponent {\n  background-color: yellow;\n  border: 3px dotted yellow;\n}\n*/\n\n\n\n// https://nikitahl.com/horizontal-rule-css\n/*\nhr.gradient { // broken...\n    border: none;\n    height: 4px;\n    background-image: linear-gradient (to right, rgba(0, 0, 0, 0), rgb(226, 24, 24), rgba(0, 0, 0, 0));\n}\n\nhr.symbol {\n  //border: 4px solid cornflowerblue;\n  border-width: 4px;\n  //border-color: red;\n  //position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n}\n\nhr.symbol::before {\n  content: 'x:';//{{colorCtr.value.hex}}\n  position: absolute;\n // margin: -5px;\n  //margin-top: -25px;\n  height: 20px;\n  width: 75px;\n  font-size: 14px;\n  background: white;\n}\n\nhr.box {\n  border: none;\n  height: 0px;\n  box-shadow: 0 1px 6px 1px cornflowerblue;\n}\n*/\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           HEX: {{colorCtr.value?.hex}}    RGBA: {{colorCtr.value?.rgba}}          Warning: 1) Cclick the small color palette icon on the right.     2) Select your color.     3) Click just a bit to to the left of the color palette to      \\'set\\' the color & dismiss the dialog.                                 BBBBB        howNow?!                  star          OK                          HEX: {{colorCtr.value?.hex}}    {{colorCtr.value?.rgba}}         HEX: {{colorCtr.value?.hex}}    RGBA: {{colorCtr.value?.rgba}}  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'rangertrak-about'},{'name': 'AlertsComponent', 'selector': 'rangertrak-alerts'},{'name': 'AppComponent', 'selector': 'rangertrak-root'},{'name': 'ColorEditor', 'selector': 'editor-cell'},{'name': 'EntryComponent', 'selector': 'rangertrak-entry'},{'name': 'FieldReportsComponent', 'selector': 'rangertrak-field-reports'},{'name': 'FooterComponent', 'selector': 'rangertrak-footer'},{'name': 'GmapComponent', 'selector': 'rangertrak-gmap'},{'name': 'IconComponent', 'selector': 'icon'},{'name': 'LazyComponent', 'selector': 'lazy'},{'name': 'LmapComponent', 'selector': 'rangertrak-lmap'},{'name': 'LogComponent', 'selector': 'rangertrak-log'},{'name': 'MoodEditor', 'selector': 'editor-cell'},{'name': 'MoodRenderer', 'selector': 'mood-cell'},{'name': 'NavbarComponent', 'selector': 'rangertrak-navbar'},{'name': 'RangersComponent', 'selector': 'rangertrak-rangers'},{'name': 'SettingsComponent', 'selector': 'rangertrak-settings'},{'name': 'X404Component', 'selector': 'rangertrak-x404'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorEditor'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Coord.html":{"url":"classes/Coord.html","title":"class - Coord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Coord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/coordinate.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                coord\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(coord: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/coordinate.ts:86\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coord\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        coord\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/coordinate.ts:87\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum DirEnum {\n  E = 'East',\n  W = 'West',\n  N = 'North',\n  S = 'South'\n}\nexport type DirType = 'E' | 'W' | 'N' | 'S'\n\nclass Point {\n  constructor(private _age: number,\n    private _firstName: string,\n    private _lastName: string) {\n  }\n\n  public get age() {\n    return this._age;\n  }\n\n  public set age(theAge: number) {\n    if (theAge = 200) {\n      throw new Error('The age is invalid');\n    }\n    this._age = theAge;\n  }\n\n  public get FullName(): string {\n    return `${this._firstName} ${this._lastName}`;\n  }\n\n  public set fullName(name: string) {\n    let parts = name.split(' ');\n    if (parts.length != 2) {\n      throw new Error('Invalid name format: first last');\n    }\n    this._firstName = parts[0];\n    this._lastName = parts[1];\n  }\n}\n\nexport class Coordinate {\n  constructor(private _lat: number, private _long: number) {\n    if (_lat  180)\n      throw new Error('latatude is over 180 or under -180 degrees.')\n    if (_long  180)\n      throw new Error('longitude is over 180 or under -180 degrees.')\n    //this.lat = lat;\n    //this.long = long;\n  }\n\n  toString(): string {\n    return \"lat: \" + this._lat +\n      \"; long: \" + this._long\n  }\n\n  public get Point() {\n    return (this._lat, this._long);\n  }\n\n  //toDMS(ptDD: PointDD) {  }\n\n  // Save to disk or ...\n  serialize(name: string) {\n    ;\n  }\n\n  load(name: string) {\n    ;\n  }\n}\n\n// REVIEW: Duplicate of one in Utility class...\nexport function strToLatLng(str: string) {\n  const latlngStr = str.split(\",\", 2);\n  return new google.maps.LatLng(parseFloat(latlngStr[0]), parseFloat(latlngStr[1]))\n}\n\n// Coord is a lat or lng in decimal degrees\nclass Coord {\n  constructor(public coord: number) {\n    try {\n      // TODO: Could map larger/smaller values using modulus\n      // coord = coord % 360.0\n      if (isNaN(coord)) throw \"Coordinate is not a number\"\n      if (coord  180) throw \"Coordinate over 180 degrees.\"\n      // MAIN.dbug(\"Coordinate passed range check...\")\n    }\n    catch (err: unknown) {\n      // MAIN.dbug(\"Bad Coordinate at Coord(): \" + err.message)\n    }\n  }\n  // Get object {deg:, min:, sec:, dir:}\n  // sec truncated to two digits (e.g. 3.14)\n  // dir returns S or N if lng = false (for latitudes)\n  // dir returns E or W if lng (longitude) = true\n  // N.B.: may not work for angles between -1° and 0°\n  // from www.stackoverflow.com/questions/5786025\n  /*\n  ToDMS(lng: boolean): CoordDMS {\n    return new CoordDMS(\n      this.coord \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Coordinate.html":{"url":"classes/Coordinate.html","title":"class - Coordinate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Coordinate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/coordinate.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                serialize\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Point\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_lat: number, _long: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/coordinate.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _lat\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _long\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/coordinate.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/coordinate.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/coordinate.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Point\n                    \n                \n\n                \n                    \n                        getPoint()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/coordinate.ts:63\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export enum DirEnum {\n  E = 'East',\n  W = 'West',\n  N = 'North',\n  S = 'South'\n}\nexport type DirType = 'E' | 'W' | 'N' | 'S'\n\nclass Point {\n  constructor(private _age: number,\n    private _firstName: string,\n    private _lastName: string) {\n  }\n\n  public get age() {\n    return this._age;\n  }\n\n  public set age(theAge: number) {\n    if (theAge = 200) {\n      throw new Error('The age is invalid');\n    }\n    this._age = theAge;\n  }\n\n  public get FullName(): string {\n    return `${this._firstName} ${this._lastName}`;\n  }\n\n  public set fullName(name: string) {\n    let parts = name.split(' ');\n    if (parts.length != 2) {\n      throw new Error('Invalid name format: first last');\n    }\n    this._firstName = parts[0];\n    this._lastName = parts[1];\n  }\n}\n\nexport class Coordinate {\n  constructor(private _lat: number, private _long: number) {\n    if (_lat  180)\n      throw new Error('latatude is over 180 or under -180 degrees.')\n    if (_long  180)\n      throw new Error('longitude is over 180 or under -180 degrees.')\n    //this.lat = lat;\n    //this.long = long;\n  }\n\n  toString(): string {\n    return \"lat: \" + this._lat +\n      \"; long: \" + this._long\n  }\n\n  public get Point() {\n    return (this._lat, this._long);\n  }\n\n  //toDMS(ptDD: PointDD) {  }\n\n  // Save to disk or ...\n  serialize(name: string) {\n    ;\n  }\n\n  load(name: string) {\n    ;\n  }\n}\n\n// REVIEW: Duplicate of one in Utility class...\nexport function strToLatLng(str: string) {\n  const latlngStr = str.split(\",\", 2);\n  return new google.maps.LatLng(parseFloat(latlngStr[0]), parseFloat(latlngStr[1]))\n}\n\n// Coord is a lat or lng in decimal degrees\nclass Coord {\n  constructor(public coord: number) {\n    try {\n      // TODO: Could map larger/smaller values using modulus\n      // coord = coord % 360.0\n      if (isNaN(coord)) throw \"Coordinate is not a number\"\n      if (coord  180) throw \"Coordinate over 180 degrees.\"\n      // MAIN.dbug(\"Coordinate passed range check...\")\n    }\n    catch (err: unknown) {\n      // MAIN.dbug(\"Bad Coordinate at Coord(): \" + err.message)\n    }\n  }\n  // Get object {deg:, min:, sec:, dir:}\n  // sec truncated to two digits (e.g. 3.14)\n  // dir returns S or N if lng = false (for latitudes)\n  // dir returns E or W if lng (longitude) = true\n  // N.B.: may not work for angles between -1° and 0°\n  // from www.stackoverflow.com/questions/5786025\n  /*\n  ToDMS(lng: boolean): CoordDMS {\n    return new CoordDMS(\n      this.coord \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageMap: StorageMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/data.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageMap\n                                                  \n                                                        \n                                                                        StorageMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/data.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable,debounceTime, map, startWith } from 'rxjs'\n\nimport { StorageMap } from '@ngx-pwa/local-storage';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  data$: Observable;\n\n  constructor(private storageMap: StorageMap) {\n    this.data$ = this.storageMap.set('rangerSettings', 'service');\n    /*\n    this.data$ = this.storageMap.set('rangerSettings', 'service').pipe(\n        mergeMap(() => this.storageMap.get('rangerSettings', { type: 'string' })),\n      );\n      */\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FieldReportService.html":{"url":"injectables/FieldReportService.html","title":"injectable - FieldReportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FieldReportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/field-report.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bound\n                            \n                            \n                                    Public\n                                bounds\n                            \n                            \n                                    Private\n                                boundsMargin\n                            \n                            \n                                    Private\n                                fieldReports\n                            \n                            \n                                    Private\n                                fieldReportsSubject\n                            \n                            \n                                    Private\n                                fieldReportStatuses\n                            \n                            \n                                    Private\n                                nextId\n                            \n                            \n                                    Private\n                                storageLocalName\n                            \n                            \n                                    Private\n                                uri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addfieldReport\n                            \n                            \n                                allFieldReportsToServer_unused\n                            \n                            \n                                deleteAllFieldReports\n                            \n                            \n                                deleteFieldReport\n                            \n                            \n                                filterFieldReportsByDate\n                            \n                            \n                                    Private\n                                findIndex\n                            \n                            \n                                generateFakeData\n                            \n                            \n                                getBoundFromBounds\n                            \n                            \n                                getFieldReport\n                            \n                            \n                                getFieldReportBound\n                            \n                            \n                                getFieldReportBounds\n                            \n                            \n                                getFieldReports\n                            \n                            \n                                recalcFieldBounds\n                            \n                            \n                                sortFieldReportsByCallsign\n                            \n                            \n                                sortFieldReportsByDate\n                            \n                            \n                                sortFieldReportsByTeam\n                            \n                            \n                                subscribe\n                            \n                            \n                                updateFieldReport\n                            \n                            \n                                updateFieldReportBounds\n                            \n                            \n                                UpdateFieldReports\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rangerService: RangerService, teamService: TeamService, settingService: SettingsService, httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/field-report.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rangerService\n                                                  \n                                                        \n                                                                        RangerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addfieldReport\n                        \n                    \n                \n            \n            \n                \naddfieldReport(formData: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formData\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldReportType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allFieldReportsToServer_unused\n                        \n                    \n                \n            \n            \n                \nallFieldReportsToServer_unused()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAllFieldReports\n                        \n                    \n                \n            \n            \n                \ndeleteAllFieldReports()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFieldReport\n                        \n                    \n                \n            \n            \n                \ndeleteFieldReport(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterFieldReportsByDate\n                        \n                    \n                \n            \n            \n                \nfilterFieldReportsByDate(beg: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    beg\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        findIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    findIndex(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFakeData\n                        \n                    \n                \n            \n            \n                \ngenerateFakeData(num: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:313\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        15\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBoundFromBounds\n                        \n                    \n                \n            \n            \n                \ngetBoundFromBounds(bounds: google.maps.LatLngBounds)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bounds\n                                    \n                                                google.maps.LatLngBounds\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         google.maps.LatLngBoundsLiteral\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldReport\n                        \n                    \n                \n            \n            \n                \ngetFieldReport(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldReportBound\n                        \n                    \n                \n            \n            \n                \ngetFieldReportBound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         google.maps.LatLngBoundsLiteral\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldReportBounds\n                        \n                    \n                \n            \n            \n                \ngetFieldReportBounds()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldReports\n                        \n                    \n                \n            \n            \n                \ngetFieldReports()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recalcFieldBounds\n                        \n                    \n                \n            \n            \n                \nrecalcFieldBounds()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         google.maps.LatLngBoundsLiteral\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortFieldReportsByCallsign\n                        \n                    \n                \n            \n            \n                \nsortFieldReportsByCallsign()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortFieldReportsByDate\n                        \n                    \n                \n            \n            \n                \nsortFieldReportsByDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortFieldReportsByTeam\n                        \n                    \n                \n            \n            \n                \nsortFieldReportsByTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:272\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(observer: Observer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observer\n                                    \n                                                Observer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFieldReport\n                        \n                    \n                \n            \n            \n                \nupdateFieldReport(report: FieldReportType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    report\n                                    \n                                                FieldReportType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFieldReportBounds\n                        \n                    \n                \n            \n            \n                \nupdateFieldReportBounds(newFR: FieldReportType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newFR\n                                    \n                                                FieldReportType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         google.maps.LatLngBoundsLiteral\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateFieldReports\n                        \n                    \n                \n            \n            \n                \nUpdateFieldReports()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/field-report.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bound\n                        \n                    \n                \n            \n                \n                    \n                        Type :         google.maps.LatLngBoundsLiteral\n\n                    \n                \n                \n                    \n                        Default value : { east: -180, north: -90, south: 90, west: 180 }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/field-report.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bounds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new google.maps.LatLngBounds(new google.maps.LatLng(90, 180), new google.maps.LatLng(-90, -180))\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/field-report.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        boundsMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.0025\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/field-report.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fieldReports\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FieldReportType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/field-report.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fieldReportsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/field-report.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fieldReportStatuses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FieldReportStatusType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/field-report.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nextId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/field-report.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storageLocalName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fieldReports'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/field-report.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uri\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:4000/products'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/field-report.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BehaviorSubject, Observer } from 'rxjs';\nimport { Injectable, OnInit } from '@angular/core';\n//import { JSONSchema, LocalStorage, StorageMap } from '@ngx-pwa/local-storage';\nimport { RangerService, SettingsService, FieldReportStatusType, TeamService } from './index';\nimport { LatLng } from 'leaflet';\nimport { HttpClient } from '@angular/common/http';\n\nexport enum FieldReportSource { Voice, Packet, APRS, Email }\n\n// TODO: https://h2qutc.github.io/angular-material-components/fileinput\n\nexport type FieldReportType = {\n  id: number,\n  callsign: string, team: string,\n  address: string, lat: number, lng: number,\n  date: Date,\n  status: string, note: string\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FieldReportService {\n\n  private uri = 'http://localhost:4000/products'\n  private fieldReports: FieldReportType[] = []\n  private fieldReportStatuses: FieldReportStatusType[] = []\n  private storageLocalName = 'fieldReports'\n  private nextId = 0\n  private fieldReportsSubject = new BehaviorSubject([]);  // REVIEW: Necessary?\n  // https://developers.google.com/maps/documentation/javascript/reference/coordinates?hl=en#LatLngBounds\n  public bounds = new google.maps.LatLngBounds(new google.maps.LatLng(90, 180), new google.maps.LatLng(-90, -180)) //SW, NE\n  public bound: google.maps.LatLngBoundsLiteral = { east: -180, north: -90, south: 90, west: 180 } //e,n,s,w\n  private boundsMargin = 0.0025\n\n  constructor(\n    private rangerService: RangerService,\n    private teamService: TeamService,\n    private settingService: SettingsService,\n    private httpClient: HttpClient) {\n\n    console.log(\"Contructing FieldReportService: once or repeatedly?!--------------\") // XXX\n    console.log(`FieldReport length= ${this.fieldReports.length}`) // XXX\n\n    let localStorageFieldReports = localStorage.getItem(this.storageLocalName)\n    /* this.fieldReports = []\n    if (temp != null) {\n      this.fieldReports = JSON.parse(temp) || []\n    }   */\n\n    this.fieldReportStatuses = this.settingService.getFieldReportStatuses()\n\n    // XXX (localStorageFieldReports != null)= true\n    this.fieldReports = ((localStorageFieldReports != null) && (localStorageFieldReports.indexOf(\"licensee\")  0) {\n      for (const fieldReport of this.fieldReports) {\n        if (fieldReport.id >= this.nextId) this.nextId = fieldReport.id + 1\n      }\n      this.UpdateFieldReports()\n      this.recalcFieldBounds()\n    }\n  }\n\n  subscribe(observer: Observer) {\n    this.fieldReportsSubject.subscribe(observer);\n  }\n\n  getFieldReports() {\n    return this.fieldReports\n  }\n\n  allFieldReportsToServer_unused() {\n    console.log(\"Sending all reports to server (via subscription)...\");\n\n    // https://appdividend.com/2019/06/04/angular-8-tutorial-with-example-learn-angular-8-crud-from-scratch/\n\n    // TODO: replace \"add\" with\"post\" or ???\n    this.httpClient.post(`${this.uri}/add`, this.fieldReports)\n      .subscribe(res => console.log('Subscription of all reports to httpClient is Done'));\n\n    console.log(\"Sent all reports to server (via subscription)...\");\n  }\n\n\n  // TODO: verify new report is proper shape/validated here or by caller??? Send as string or object?\n\n  addfieldReport(formData: string): FieldReportType {\n    console.log(`FieldReportService: Got new field report: ${formData}`)\n\n    let newReport: FieldReportType = JSON.parse(formData)\n    newReport.id = this.nextId++\n    this.fieldReports.push(newReport)\n    this.updateFieldReportBounds(newReport)\n    this.UpdateFieldReports() // put to localStorage & update subscribers\n\n    console.log(\"Sending new report to server (via subscription)...\");\n\n    // https://appdividend.com/2019/06/04/angular-8-tutorial-with-example-learn-angular-8-crud-from-scratch/\n    //this.httpClient.post(`${this.uri}/add`, newReport).subscribe(res => console.log('Subscription of add report to httpClient is Done'));\n    /* gets VM12981:1          POST http://localhost:4000/products/add net::ERR_CONNECTION_REFUSED\n  core.mjs:6485 ERROR HttpErrorResponse {headers: HttpHeaders, status: 0, statusText: 'Unknown Error', url: 'http://localhost:4000/products/add', ok: false, …}*/\n    console.log(\"Sent new report to server (via subscription)...\");\n\n    return newReport;\n  }\n\n  getFieldReport(id: number) {\n    const index = this.findIndex(id);\n    return this.fieldReports[index];\n  }\n\n  updateFieldReport(report: FieldReportType) {\n    const index = this.findIndex(report.id);\n    this.fieldReports[index] = report;\n    this.UpdateFieldReports();\n  }\n\n  deleteFieldReport(id: number) {\n    const index = this.findIndex(id);\n    this.fieldReports.splice(index, 1);\n    this.UpdateFieldReports();\n    // this.nextId-- // REVIEW: is this desired???\n  }\n\n  deleteAllFieldReports() {\n    this.fieldReports = []\n    localStorage.removeItem(this.storageLocalName)\n    this.nextId = 0 // REVIEW: is this desired???\n  }\n\n  // rewrite field reports to localStorage & update subscribers\n  UpdateFieldReports() {\n    localStorage.setItem(this.storageLocalName, JSON.stringify(this.fieldReports));\n\n    this.fieldReportsSubject.next(this.fieldReports.map(  // REVIEW: is this just for 1 new report, or any localstorage updates?\n      fieldReport => ({\n        id: fieldReport.id,\n        callsign: fieldReport.callsign,\n        team: fieldReport.team,\n        address: fieldReport.address,\n        lat: fieldReport.lat,\n        lng: fieldReport.lng,\n        date: fieldReport.date,\n        status: fieldReport.status,\n        note: fieldReport.note\n      })\n    ))\n  }\n\n  private findIndex(id: number): number {\n    for (let i = 0; i  {\n      if (n1.callsign > n2.callsign) { return 1 }\n      if (n1.callsign  a.callsign > b.callsign ? 1 : -1)\n    // console.log(\"SortFieldReportsByCallsign...DONE --- BUT ARE THEY REVERSED?!\")\n  }\n\n  sortFieldReportsByDate() {\n    return this.fieldReports.sort((n1, n2) => {\n      if (n1.date > n2.date) { return 1 }\n      if (n1.date  north) {\n          north = Math.round(this.fieldReports[i].lat * 10000) / 10000\n        }\n        if (this.fieldReports[i].lat  east) {\n          east = Math.round(this.fieldReports[i].lng * 10000) / 10000\n        }\n        if (this.fieldReports[i].lng > west) {\n          west = Math.round(this.fieldReports[i].lng * 10000) / 10000\n        }\n      }\n    } else {\n      // no field reports yet! Rely on broadening processing below\n      north = SettingsService.Settings.defLat\n      west = SettingsService.Settings.defLng\n      south = SettingsService.Settings.defLat\n      east = SettingsService.Settings.defLng\n    }\n\n    console.log(`recalcFieldBounds got E:${east} W:${west} N:${north} S:${south} `)\n    if (east - west  {\n      if (n1.team > n2.team) { return 1 }\n      if (n1.team  (report.date >= beg && report.date  {\n  const dateAsString = cellValue;\n  const dateParts = dateAsString.split('/');\n  const cellDate = new Date(\n    Number(dateParts[2]),\n    Number(dateParts[1]) - 1,\n    Number(dateParts[0])\n  );\n  if (filterLocalDateAtMidnight.getTime() === cellDate.getTime()) {\n    return 0;\n  }\n  if (cellDate  filterLocalDateAtMidnight) {\n  return 1;\n  //}\n},\n}\n*/\n\n\n  generateFakeData(num: number = 15) {\n    let teams = this.teamService.getTeams()\n    let rangers = this.rangerService.GetRangers()\n    if (rangers == null || rangers.length  params.api.setRowData(data));\n  }\n  */\n\n\n\n/*  OLD CODE FROM 4.2 ====================================================================\n\nfunction filterLocations(filters) {\n\n  // clear any previous markers\n  clearLeafletMarkers();\n  clearGoogMarkers();\n  clearEsriMarkers();\n\n  // Track min/max marker bounds\n  var arrayOfLatLngs = [];\n  var _this = this;\n  var minLat=Infinity, minLng=Infinity, maxLat=-Infinity, maxLng=-Infinity;\n\n  // setup a marker group\n  // TODO: Move to map provider layer...\n  var markers = L.markerClusterGroup();\n  markers.clearLayers();\n  //mapLeafletMarkers;\n\n\n  if (teamLocations) {\n  for (var i = 0; i  y) {return 1;}  return 0; });\n\n      // new filtered array:\n      // BUT: 11% slower: https://jsperf.com/array-filter-performance\n      // var numbers = [45, 4, 9, 16, 25]; var over18 = numbers.filter(myFunction);  function myFunction(value, index, array) {  return value > 18;  }\n\n      https://stackoverflow.com/questions/10557486\n      https://api.jquery.com/jQuery.grep/\n    * /\n\n    if (filters!=null) {\n      // Process Filters...\n      //dbug(\"Filters Received\");\n\n      //Filter Team?\n      //dbug(\"Team[\"+i+\"]=\"+teamLocations[i].Team);\n      if (filters.Team.length!=0 && (teamLocations[i].Team!=filters.Team)) {\n        dbug(\"#### Filtered out Team: [\"+i+\"]=\"+teamLocations[i].Team);\n        continue;\n      }\n\n      // Filter CallSign?\n      //dbug(\"Call[\"+i+\"]=\"+teamLocations[i].CallSign);\n      if (filters.CallSign.length!=0 && (teamLocations[i].CallSign!=filters.CallSign)) {\n        dbug(\"#### Filtered out CallSign: [\"+i+\"]=\"+teamLocations[i].CallSign);\n        continue;\n      }\n\n      // Filter based on time?\n      //dbug(\"Time[\"+i+\"]  =  \"+teamLocations[i].Date);\n      //dbug(\"BaseTime=\"+filters.BaseTime+\"; minutes=\"+filters.Minutes);\n      //dbug(\"Minutes=\"+Date.parse(teamLocations[i].Date)/60000.0);\n\n      //dbug(\"Time Diff=\"+Math.abs(Date.parse(teamLocations[i].Date) - Date.parse(filters.BaseTime))/60000.0+\"\");\n\n      // Milliseconds/minute = 60+1000\n      if (filters.Minutes!=0 && filters.BaseTime.length!=0 &&\n      (Math.abs(Date.parse(teamLocations[i].Date) - Date.parse(filters.BaseTime)) >= filters.Minutes*60000.0) ) {\n        dbug(\"#### Filtered out Time: [\"+i+\"]=\"+teamLocations[i].CallSign);\n        continue;\n      }\n    }\n\n    minLat = Math.min(minLat,llat);\n    minLng = Math.min(minLng,llong);\n    maxLat = Math.max(maxLat,llat);\n    maxLng = Math.max(maxLng,llong);\n\n    // setup the bounds\n    arrayOfLatLngs.push([llat,llong]);\n\n    // dbug(\"Coords='\" + llat + \", \" + llong + \"'\");\n    // dbug(\"Map bounds reset to: [\"+minLat+\",\"+minLng+\"], [\"+maxLat+\",\"+maxLng+\"]\");\n\n    var color = defTeamColor;\n    var shape = defTeamShape;\n    var fillColor = defTeamFillColor;\n    var fillOpacity = defTeamOpacity;\n\n    var numTeams = teams.length;\n    var teamsIndex;\n\n    var team = teamLocations[i].Team;\n    // dbug(\"teamLocations[\"+i+\"]=\"+team);\n\n    for (teamsIndex=0; teamsIndex\" + teamLocations[i].Date\n            )\n            .bindPopup(\n              teamLocations[i].CallSign + \" - \" + teamLocations[i].Licensee + \"\"\n              + teamLocations[i].Date.replace(\"T\", \" \") + \"\"\n              + teamLocations[i].FieldReports );\n        //dbug(\"Created Marker. icon=\" + iconDir + teams[teamsIndex].icon + \"; \" );\n        break;\n\n      case \"Circle\":\n      default:\n        newMarker = L.circle([llat, llong], CIRCLE_SIZE, {\n            color: color,\n            fillColor: fillColor,\n            fillOpacity: fillOpacity,\n          }, title=\"\").bindPopup(\n              teamLocations[i].CallSign + \" - \" + teamLocations[i].Licensee + \"\"\n              + teamLocations[i].Date.replace(\"T\", \" \") + \"\"\n              + teamLocations[i].FieldReports\n            );\n\n\n      // FieldReport: You may run into issues with the popups closing when you mouse onto the popup itself,\n      // so you might need to adjust the popup anchor in (see popup settings) to show your popups a\n      // bit farther away from marker itself so it doesn't disappear too easily.\n      // http://gis.stackexchange.com/questions/31951/ddg#95795\n\n      /*\n        // sample code for having all popups open if users hovers over any point...\n        var markers = getAllMarkers(); // up to you to implement, say it returns an Array\n        for (var i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FieldReportsComponent.html":{"url":"components/FieldReportsComponent.html","title":"component - FieldReportsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FieldReportsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/field-reports/field-reports.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rangertrak-field-reports\n            \n\n            \n                styleUrls\n                ./field-reports.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./field-reports.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnDefs\n                            \n                            \n                                defaultColDef\n                            \n                            \n                                fieldReports\n                            \n                            \n                                fieldReportStatuses\n                            \n                            \n                                    Private\n                                gridApi\n                            \n                            \n                                    Private\n                                gridColumnApi\n                            \n                            \n                                gridOptions\n                            \n                            \n                                http\n                            \n                            \n                                maxSeperatorWarnings\n                            \n                            \n                                myDateGetter\n                            \n                            \n                                myMinuteGetter\n                            \n                            \n                                nFakes\n                            \n                            \n                                now\n                            \n                            \n                                numFakesForm\n                            \n                            \n                                numSeperatorWarnings\n                            \n                            \n                                onGridReady\n                            \n                            \n                                    Private\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayHide\n                            \n                            \n                                displayShow\n                            \n                            \n                                generateFakeFieldReports\n                            \n                            \n                                getParams\n                            \n                            \n                                getValue\n                            \n                            \n                                isValidDate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBtnClearFieldReports\n                            \n                            \n                                onBtnExport\n                            \n                            \n                                onBtnImportFieldReports_unused\n                            \n                            \n                                onBtnUpdateFieldReports\n                            \n                            \n                                onSeperatorChange\n                            \n                            \n                                refreshGrid\n                            \n                            \n                                reloadPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, fieldReportService: FieldReportService, teamService: TeamService, rangerService: RangerService, settingsService: SettingsService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/field-reports/field-reports.component.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fieldReportService\n                                                  \n                                                        \n                                                                        FieldReportService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rangerService\n                                                  \n                                                        \n                                                                        RangerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayHide\n                        \n                    \n                \n            \n            \n                \ndisplayHide(htmlElementID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/field-reports/field-reports.component.ts:313\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    htmlElementID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayShow\n                        \n                    \n                \n            \n            \n                \ndisplayShow(htmlElementID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/field-reports/field-reports.component.ts:322\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    htmlElementID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFakeFieldReports\n                        \n                    \n                \n            \n            \n                \ngenerateFakeFieldReports(num)\n                \n            \n\n\n            \n                \n                    Defined in src/app/field-reports/field-reports.component.ts:301\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    num\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.nFakes\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getParams\n                        \n                    \n                \n            \n            \n                \ngetParams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/field-reports/field-reports.component.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { columnSeparator: any; fileName: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(inputSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/field-reports/field-reports.component.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidDate\n                        \n                    \n                \n            \n            \n                \nisValidDate(d: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/field-reports/field-reports.component.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    d\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/field-reports/field-reports.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBtnClearFieldReports\n                        \n                    \n                \n            \n            \n                \nonBtnClearFieldReports()\n                \n            \n\n\n            \n                \n                    Defined in src/app/field-reports/field-reports.component.ts:287\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBtnExport\n                        \n                    \n                \n            \n            \n                \nonBtnExport()\n                \n            \n\n\n            \n                \n                    Defined in src/app/field-reports/field-reports.component.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBtnImportFieldReports_unused\n                        \n                    \n                \n            \n            \n                \nonBtnImportFieldReports_unused()\n                \n            \n\n\n            \n                \n                    Defined in src/app/field-reports/field-reports.component.ts:297\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBtnUpdateFieldReports\n                        \n                    \n                \n            \n            \n                \nonBtnUpdateFieldReports()\n                \n            \n\n\n            \n                \n                    Defined in src/app/field-reports/field-reports.component.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSeperatorChange\n                        \n                    \n                \n            \n            \n                \nonSeperatorChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/field-reports/field-reports.component.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshGrid\n                        \n                    \n                \n            \n            \n                \nrefreshGrid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/field-reports/field-reports.component.ts:233\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reloadPage\n                        \n                    \n                \n            \n            \n                \nreloadPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/field-reports/field-reports.component.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columnDefs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { headerName: \"ID\", field: \"id\", headerTooltip: 'Is this even needed?!' }, // TODO:\n    { headerName: \"CallSign\", field: \"callsign\", tooltipField: \"team\" },\n    // { headerName: \"Team\", field: \"team\" },\n    { headerName: \"Address\", field: \"address\", singleClickEdit: true, flex: 50 }, //, maxWidth: 200\n    { headerName: \"Lat\", field: \"lat\", singleClickEdit: true },\n    { headerName: \"Lng\", field: \"lng\", cellClass: 'number-cell' },\n    {\n      headerName: \"Time\", headerTooltip: 'Report date',\n      valueGetter: this.myDateGetter,\n    },\n    {\n      headerName: \"Elapsed\", headerTooltip: 'Hrs:Min:Sec since report',\n      valueGetter: this.myMinuteGetter,\n    },\n    {\n      headerName: \"Status\", field: \"status\", flex: 50,\n      cellStyle: (params: { value: string; }) => {\n        //this.fieldReportStatuses.forEach(function(value) { (params.value === value.status) ? { backgroundColor: value.color }  : return(null) }\n        for (let i = 0; i \n                    \n                \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultColDef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    flex: 1, //https://ag-grid.com/angular-data-grid/column-sizing/#column-flex\n    minWidth: 100,\n    editable: true,\n    resizable: true,\n    sortable: true,\n    filter: true,\n    floatingFilter: true\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldReports\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FieldReportType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldReportStatuses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FieldReportStatusType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gridApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gridColumnApi\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gridOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    // PROPERTIES\n    rowSelection: \"multiple\",\n    // pagination: true,\n\n    // EVENT handlers\n    // onRowClicked: event => console.log('A row was clicked'),\n\n    // CALLBACKS\n    // getRowHeight: (params) => 25\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxSeperatorWarnings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myDateGetter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myMinuteGetter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nFakes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        now\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numFakesForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numSeperatorWarnings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGridReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:223\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        settings\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/field-reports/field-reports.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, Pipe, PipeTransform, OnInit } from '@angular/core';\nimport { FieldReportService, FieldReportType, FieldReportStatusType, RangerService, SettingsService, TeamService } from '../shared/services';\n\nimport { DOCUMENT, formatDate } from '@angular/common'\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Pipe({ name: 'myUnusedPipe' })\nexport class myUnusedPipe implements PipeTransform {\n  transform(val: string) {\n    return val.toUpperCase()\n  }\n}\n\n// TODO: https://blog.ag-grid.com/refresh-grid-after-data-change/\n// https://stackblitz.com/edit/ag-grid-angular-hello-world-n3aceq?file=src%2Fapp%2Fapp.component.ts\n// https://www.ag-grid.com/javascript-data-grid/immutable-data/\n//\n/*\nonGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n\n    this.http\n      .get(\n        \"https://raw.githubusercontent.com/ag-grid/ag-grid/master/grid-packages/ag-grid-docs/src/olympicWinnersSmall.json\"\n      )\n      .subscribe((data: any[]) => {\n        data.length = 10;\n        data = data.map((row, index) => {\n          return { ...row, id: index + 1 };\n        });\n        this.backupRowData = data;\n        this.rowData = data;\n      });\n  }\n*/\n\n@Component({\n  selector: 'rangertrak-field-reports',\n  templateUrl: './field-reports.component.html',\n  styleUrls: ['./field-reports.component.scss']\n})\nexport class FieldReportsComponent implements OnInit {\n\n  fieldReports: FieldReportType[] = []\n  fieldReportStatuses: FieldReportStatusType[] = []\n  private settings\n\n  private gridApi: any\n  private gridColumnApi\n  now: Date\n  http: any\n  numSeperatorWarnings = 0\n  maxSeperatorWarnings = 3\n  numFakesForm!: FormGroup\n  nFakes = 10\n\n  // https://www.ag-grid.com/angular-data-grid/grid-interface/#grid-options-1\n  gridOptions = {\n    // PROPERTIES\n    rowSelection: \"multiple\",\n    // pagination: true,\n\n    // EVENT handlers\n    // onRowClicked: event => console.log('A row was clicked'),\n\n    // CALLBACKS\n    // getRowHeight: (params) => 25\n  }\n\n  defaultColDef = {\n    flex: 1, //https://ag-grid.com/angular-data-grid/column-sizing/#column-flex\n    minWidth: 100,\n    editable: true,\n    resizable: true,\n    sortable: true,\n    filter: true,\n    floatingFilter: true\n  }\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private fieldReportService: FieldReportService,\n    private teamService: TeamService,\n    private rangerService: RangerService,\n    private settingsService: SettingsService,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.now = new Date()\n    this.gridApi = \"\"\n    this.gridColumnApi = \"\"\n\n    this.settings = SettingsService\n    this.fieldReportStatuses = settingsService.getFieldReportStatuses() // TODO: Only obtained at construction, won't reflect an update from the settings page??? : SUBSCRIBE!!\n  }\n\n\n  myDateGetter = (params: { data: FieldReportType }) => {\n    const weekday = [\"Sun \", \"Mon \", \"Tue \", \"Wed \", \"Thu \", \"Fri \", \"Sat \"]\n    let dt = 'unknown date'\n    let d: Date = params.data.date\n    //console.log(`Day is: ${d.toISOString()}`)\n    //console.log(`WeekDay is: ${d.getDay}`)\n\n    try {  // TODO: Use the date pipe instead?\n      //weekday[d.getDay()] +\n      dt = formatDate(d, 'M-dd HH:MM:ss', 'en-US')\n      //console.log(`Day is: ${params.data.date.toISOString()}`)\n    } catch (error: any) {\n      dt = `Bad date format: Error name: ${error.name}; msg: ${error.message}`\n    }\n\n    // https://www.w3schools.com/jsref/jsref_obj_date.asp\n    //console.log(`Day is: ${params.data.date.toISOString()}`)\n    /*\n        if (this.isValidDate(d)) {\n          dt = weekday[d.getDay()] + formatDate(d, 'yyyy-MM-dd HH:MM:ss', 'en-US')\n          console.log(`Day is: ${params.data.date.toISOString()}`)\n        }\n    */\n    return dt\n  }\n\n  myMinuteGetter = (params: { data: FieldReportType }) => {\n    // performance.now() is better - for elapsed time...\n    //let pi: number = 3.14159265359\n    let dt = new Date(params.data.date).getTime()\n    let milliseconds = Date.now() - dt\n    let seconds: string = (Math.round(milliseconds / 1000) % 60).toString().padStart(2, '0')\n    let minutes: string = Math.round((milliseconds / (1000 * 60)) % 60).toString().padStart(2, '0')\n    let hours = Math.round((milliseconds / (1000 * 60 * 60)) % 24);\n    return (`${hours}:${minutes}:${seconds}`)\n  }\n\n  columnDefs = [\n    { headerName: \"ID\", field: \"id\", headerTooltip: 'Is this even needed?!' }, // TODO:\n    { headerName: \"CallSign\", field: \"callsign\", tooltipField: \"team\" },\n    // { headerName: \"Team\", field: \"team\" },\n    { headerName: \"Address\", field: \"address\", singleClickEdit: true, flex: 50 }, //, maxWidth: 200\n    { headerName: \"Lat\", field: \"lat\", singleClickEdit: true },\n    { headerName: \"Lng\", field: \"lng\", cellClass: 'number-cell' },\n    {\n      headerName: \"Time\", headerTooltip: 'Report date',\n      valueGetter: this.myDateGetter,\n    },\n    {\n      headerName: \"Elapsed\", headerTooltip: 'Hrs:Min:Sec since report',\n      valueGetter: this.myMinuteGetter,\n    },\n    {\n      headerName: \"Status\", field: \"status\", flex: 50,\n      cellStyle: (params: { value: string; }) => {\n        //this.fieldReportStatuses.forEach(function(value) { (params.value === value.status) ? { backgroundColor: value.color }  : return(null) }\n        for (let i = 0; i  {\n    if (params.data.status == 'Urgent') {\n      return \"cell-pass\" // see stylesheet for this\n    }\n    if (params.data.status == 'Check-in') {\n      return \"cell-pass\" // see stylesheet for this\n    }\n    return(``)\n  }\n*/\n\n  ngOnInit(): void {\n    console.log(\"Field Report Form ========== ngInit ==== at \", Date.now)\n\n    // TODO: This doesn't actually get the very latest field Report entries: do it by subuscription instead????\n    this.fieldReports = this.fieldReportService.getFieldReports()\n    console.log(`Now have ${this.fieldReports.length} Field Reports retrieved from Local Storage and/or fakes generated`)\n\n    this.numFakesForm = this.formBuilder.group({})\n\n    if (!this.settings.debugMode) {\n      console.log(\"running in non-debug mode\")\n      // this.displayHide(\"enter__Fake--id\") // debug mode SHOULD be ON...\n    } else {\n      console.log(\"running in debug mode\")\n      this.displayShow(\"enter__Fake--id\")\n    }\n\n    if (this.gridApi) {\n      this.gridApi.refreshCells()\n    } else {\n      console.log(\"no this.gridApi yet in ngOnInit()\")\n    }\n  }\n\n  reloadPage() {\n    window.location.reload()\n  }\n\n  isValidDate(d: any) {\n    return d instanceof Date //&& !isNaN(d);\n    /*\n        if (Object.prototype.toString.call(d) !== \"[object Date]\") {\n          console.log(`bad date type:${Object.prototype.toString.call(d)}`)\n          return false\n        } // invalid date\n        if (isNaN(d.getTime())) {\n          console.log(`bad time`)\n          return false\n        } // d.valueOf() could also work  // invalid time\n        return true  // valid date\n        */\n  }\n\n  // filteredReports:FieldReportType[] = this.fieldReportService.filterFieldReportsByDate(Date(-12*60*60*1000), Date(5*60*1000)) //FUTURE:\n\n  onGridReady = (params: any) => {\n    console.log(\"Field Report Form onGridReady\")\n\n    this.gridApi = params.api\n    this.gridColumnApi = params.columnApi\n\n    params.api.sizeColumnsToFit() //https://ag-grid.com/angular-data-grid/column-sizing/#example-default-resizing // TODO: use this line, or next routine?!\n  }\n\n  //onFirstDataRendered(params: any) {\n  refreshGrid() {\n    if (this.gridApi) {\n      this.gridApi.refreshCells()\n      this.gridApi.sizeColumnsToFit();\n    } else {\n      console.log(\"no this.gridApi yet in refreshGrid()\")\n    }\n  }\n\n  // following from https://ag-grid.com/javascript-data-grid/csv-export/\n  getValue(inputSelector: string) {\n    //let selector = this.document.querySelector(inputSelector) as HTMLSelectElement\n    let selector = this.document.getElementById('columnSeparator') as HTMLSelectElement\n    var sel = selector.selectedIndex;\n    var opt = selector.options[sel];\n    var selVal = (opt).value;\n    var selText = (opt).text\n    // console.log(`Got column seperator text:\"${selText}\", val:\"${selVal}\"`)\n\n    switch (selVal) {\n      case 'none':\n        return;\n      case 'tab':\n        return '\\t';\n      default:\n        return selVal;\n    }\n  }\n\n  getParams() {\n    let dt = new Date()\n    return {\n      columnSeparator: this.getValue('columnSeparator'),\n      fileName: `FieldReportsExport.${dt.getFullYear()}-${dt.getMonth() + 1}-${dt.getDate()}_${dt.getHours()}:${dt.getMinutes()}.csv`,  // REVIEW: ONLY month is zero based, requires +1?!\n    }\n  }\n\n  onSeperatorChange() {\n    var params = this.getParams();\n    if (params.columnSeparator && this.numSeperatorWarnings++ \n    \n\n    \n        Field Reports\n\n\n  Tips\n  \n    If recent reports do NOT show up, refresh page or switch to another view & back: Let me know what works!!!\n    All fields are editable. (Address & Lat are 'single click', others are 'double click. What do you like?!)\n    ONCE SAVED (to local storage) the edited data can be exported to a CSV file.\n    Edits HAVE to be\n      MANUALLY saved by selecting the \"Save Data\" button in the Advanced section below. \n    Click on a column heading to sort by that field.\n    Click & Drag on a column heading to move columns\n    Move column seperators to resize columns\n    Hovering over a cell (e.g., any callsign) can show additional information. \n    Icons at the top right of each column allows filtering on the value\n    Save data grid to CSV file. Comma seperated works best for Excel importing.\n    FUTURE: Import from Excel.\n  \n\n\n\n\n  Future functionality\n  \n    \n  \n\n\n\n\n  \n    \n  \n  \n  Printer Friendly Layout\n      Normal Layout\n  Add a new Field Report\n\n  \n    Export Field Reports with column separator of\n      \n      comma (,)\n      tab\n      bar (|)\n    \n  \n  Clear Selection\n  TODO: Filter Field Reports\n  Use page refresh to force an update of field reports: Reload Page\n\n  \n  \n    \n      Advanced\n    \n\n    Save above Field Reports to local storage\n    Delete ALL Field Reportgs from local storage\n    FUTURE: Import Field Reportgs from CSV file\n\n    \n\n    \n    \n    \n      \n\n        \n          # Fakes\n          \n        \n\n        \n\n        Add another\n          {{nFakes}} FAKE Field Reports\n        \n      \n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./field-reports.component.scss\n                \n                .big {\n  font-size: larger;\n  font-weight: bold;\n}\n\n.enter__Fake {\n  // background-color: rgb(246, 247, 239);\n  // border: 2px solid gray;\n   //display: flex;\n   //align-content: center;\n   //align-items: center;\n   //height: 205px;\n  // width: 350px;\n\n   //margin-right: 35vw;\n   display: block;\n   //float: right;\n   height: 120px;\n   width: 30vw;\n   border: 1px solid  brown;\n   background-color: rgb(240, 255, 250);\n   font: 0.8em sans-serif;\n }\n\n#enter__Fake--slider {\n  width: 20vw;\n}\n\n .enter__Fake--numfield {\n   width: 50px;\n   height:30px;\n   margin-right: 5px;\n }\n\n #enter__Fake--button {\n   float: right;\n   margin-right: 10px;\n }\n\n .cell-fail {\n  text-align: center;\n  font-weight: bold;\n  background-color: #f44336;\n}\n\n.cell-pass {\n  text-align: center;\n  font-weight: bold;\n  background-color: #4caf50;\n}\n\n.big {\n  font-size: larger;\n  font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Field Reports  Tips      If recent reports do NOT show up, refresh page or switch to another view & back: Let me know what works!!!    All fields are editable. (Address & Lat are \\'single click\\', others are \\'double click. What do you like?!)    ONCE SAVED (to local storage) the edited data can be exported to a CSV file.    Edits HAVE to be      MANUALLY saved by selecting the \"Save Data\" button in the Advanced section below.     Click on a column heading to sort by that field.    Click & Drag on a column heading to move columns    Move column seperators to resize columns    Hovering over a cell (e.g., any callsign) can show additional information.     Icons at the top right of each column allows filtering on the value    Save data grid to CSV file. Comma seperated works best for Excel importing.    FUTURE: Import from Excel.    Future functionality                    Printer Friendly Layout      Normal Layout  Add a new Field Report      Export Field Reports with column separator of            comma (,)      tab      bar (|)        Clear Selection  TODO: Filter Field Reports  Use page refresh to force an update of field reports: Reload Page              Advanced        Save above Field Reports to local storage    Delete ALL Field Reportgs from local storage    FUTURE: Import Field Reportgs from CSV file                                        # Fakes                                  Add another          {{nFakes}} FAKE Field Reports                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'rangertrak-about'},{'name': 'AlertsComponent', 'selector': 'rangertrak-alerts'},{'name': 'AppComponent', 'selector': 'rangertrak-root'},{'name': 'ColorEditor', 'selector': 'editor-cell'},{'name': 'EntryComponent', 'selector': 'rangertrak-entry'},{'name': 'FieldReportsComponent', 'selector': 'rangertrak-field-reports'},{'name': 'FooterComponent', 'selector': 'rangertrak-footer'},{'name': 'GmapComponent', 'selector': 'rangertrak-gmap'},{'name': 'IconComponent', 'selector': 'icon'},{'name': 'LazyComponent', 'selector': 'lazy'},{'name': 'LmapComponent', 'selector': 'rangertrak-lmap'},{'name': 'LogComponent', 'selector': 'rangertrak-log'},{'name': 'MoodEditor', 'selector': 'editor-cell'},{'name': 'MoodRenderer', 'selector': 'mood-cell'},{'name': 'NavbarComponent', 'selector': 'rangertrak-navbar'},{'name': 'RangersComponent', 'selector': 'rangertrak-rangers'},{'name': 'SettingsComponent', 'selector': 'rangertrak-settings'},{'name': 'X404Component', 'selector': 'rangertrak-x404'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FieldReportsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rangertrak-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                today\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/footer/footer.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/footer/footer.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/footer/footer.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/footer/footer.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../shared/services/'\n\n@Component({\n  selector: 'rangertrak-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  // settings: SettingsType\n  today = new Date()\n  version\n\n  constructor(\n    private settingsService: SettingsService) {\n     // this.settings = SettingsService.Settings // only using static functions/values from the service...\n    this.version = SettingsService.Settings.version\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \nRangerTrak ֍ Version {{version}}\n  ©{{today | date: 'y'}} http://eoc.online - Free Tools for EOCs\n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                .copyLeft {\n  text-decoration:none;\n  font-size: small;\n  float:right;\n  margin-right: 2vw;\n  font-family: \"Faster One\",\"Open Sans\",Helvetica, sans-serif;\n}\n\ndiv {\n  margin-left: 1vw;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'RangerTrak ֍ Version {{version}}  ©{{today | date: \\'y\\'}} http://eoc.online - Free Tools for EOCs'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'rangertrak-about'},{'name': 'AlertsComponent', 'selector': 'rangertrak-alerts'},{'name': 'AppComponent', 'selector': 'rangertrak-root'},{'name': 'ColorEditor', 'selector': 'editor-cell'},{'name': 'EntryComponent', 'selector': 'rangertrak-entry'},{'name': 'FieldReportsComponent', 'selector': 'rangertrak-field-reports'},{'name': 'FooterComponent', 'selector': 'rangertrak-footer'},{'name': 'GmapComponent', 'selector': 'rangertrak-gmap'},{'name': 'IconComponent', 'selector': 'icon'},{'name': 'LazyComponent', 'selector': 'lazy'},{'name': 'LmapComponent', 'selector': 'rangertrak-lmap'},{'name': 'LogComponent', 'selector': 'rangertrak-log'},{'name': 'MoodEditor', 'selector': 'editor-cell'},{'name': 'MoodRenderer', 'selector': 'mood-cell'},{'name': 'NavbarComponent', 'selector': 'rangertrak-navbar'},{'name': 'RangersComponent', 'selector': 'rangertrak-rangers'},{'name': 'SettingsComponent', 'selector': 'rangertrak-settings'},{'name': 'X404Component', 'selector': 'rangertrak-x404'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleGeocode.html":{"url":"classes/GoogleGeocode.html","title":"class - GoogleGeocode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleGeocode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/google-geocode.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                geocoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAddressFromLatLng\n                            \n                            \n                                getLatLngAndAddressFromPlaceID\n                            \n                            \n                                isValidAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/google-geocode.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        geocoder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new google.maps.Geocoder\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/google-geocode.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressFromLatLng\n                        \n                    \n                \n            \n            \n                \ngetAddressFromLatLng(latLng: google.maps.LatLng)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/google-geocode.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                                google.maps.LatLng\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLatLngAndAddressFromPlaceID\n                        \n                    \n                \n            \n            \n                \ngetLatLngAndAddressFromPlaceID(placeId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/google-geocode.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    placeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { position: any; address: string; placeId: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidAddress\n                        \n                    \n                \n            \n            \n                \nisValidAddress(addr: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/google-geocode.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    addr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { position: any; address: string; partial_match: string; placeId: string; plus_code: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MapInfoWindow, MapMarker, GoogleMap } from '@angular/google-maps'\n\n// https://developers.google.com/maps/documentation/geocoding/overview\n// https://developers.google.com/maps/documentation/geocoding/start\n// TODO: https://developers-dot-devsite-v2-prod.appspot.com/maps/documentation/utils/geocoder\n\nexport class GoogleGeocode {\n\n  static geocoder = new google.maps.Geocoder\n\n  constructor() { }\n\n  getAddressFromLatLng(latLng: google.maps.LatLng): string {\n    GoogleGeocode.geocoder\n      .geocode({ location: latLng })\n      .then((response) => {\n        if (response.results[0]) {\n          return (response.results[0].formatted_address)\n        } else {\n          return (\"\") // No results found\n        }\n      })\n      .catch((e) => { return (\"Geocoder failed due to: \" + e) })\n    return (\"?\")\n  }\n\n\n  // https://developers.google.com/maps/documentation/javascript/geocoding#GeocodingRequests\n  /*\n  The GeocoderRequest object literal contains the following fields:\n    {\n      address: string, OR\n      location: LatLng, OR\n      placeId: string,\n      AND optionally:\n      bounds: LatLngBounds,\n      componentRestrictions: GeocoderComponentRestrictions,\n      region: string\n    }\n  */\n\n  // https://developers.google.com/maps/documentation/geocoding/requests-geocoding#geocoding-lookup\n  // REVIEW:\n  isValidAddress(addr: string) //: { position: google.maps.LatLngLiteral | null, address: string, partial_match: string, placeId: string, plus_code: string }\n   {\n    let encoded\n    let err = \"\"\n    try {\n      encoded = encodeURI(addr) // https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/URLSearchParams\n      console.log(`isValidAddress returned ${JSON.stringify(encoded)}`)\n      // isValidAddress returned \"10506%20sw%20132nd%20pl,%20vashon,%20wa,%2098070\"\n      // TODO: Parse encoded for lat/long or?\n    } catch (e: any) {\n      // Status codes:  https://developers.google.com/maps/documentation/geocoding/requests-geocoding#StatusCodes\n      console.error(e);\n      encoded = \"Bad%20Address\"\n    }\n\n    // debugger\n    // BUG: Following hasn't even been tried yet!...\n    GoogleGeocode.geocoder\n      .geocode({ address: encoded })\n      .then(({ results }) => {\n        if (results[0]) {\n          console.log(`GoogleGeocode.geocoder returning ${JSON.stringify(results[0])}`)\n          return {\n            position: results[0].geometry.location,\n            address: results[0].formatted_address,\n            partial_match: results[0].partial_match,\n            placeId: results[0].place_id,\n            plus_code: results[0].plus_code\n          }\n        } else {\n          return { position: null, address: \"\", partial_match: \"\", placeId: \"\", plus_code: \"\"}\n        }\n      })\n      .catch((e) => {\n        //debugger\n         err = \"Geocoder failed due to: \" + e })\n    return { position: null, address: err, partial_match: \"\", placeId: \"\", plus_code: \"\" }\n  }\n\n  /*\n      Got Street address: 10506 sw 132nd pl, vashon, wa, 98070\n      google-geocode.ts:49 isValidAddress returned \"10506%20sw%20132nd%20pl,%20vashon,%20wa,%2098070\"\n      entry.component.ts:495 geocoder.isValidAddress returned: {\"position\":null} ++++++++++++++++++++++\n      entry.component.ts:459 addressCtrlChanged done\n      google-geocode.ts:62 GoogleGeocode.geocoder returning\n      {\n        \"address_components\":[\n          {\"long_name\":\"Suite B2\",\"short_name\":\"Suite B2\",\"types\":[\"subpremise\"]},\n          {\"long_name\":\"17205\",\"short_name\":\"17205\",\"types\":[\"street_number\"]},\n          {\"long_name\":\"Vashon Highway Southwest\",\"short_name\":\"Vashon Hwy SW\",\"types\":[\"route\"]},\n          {\"long_name\":\"Vashon\",\"short_name\":\"Vashon\",\"types\":[\"locality\",\"political\"]},\n          {\"long_name\":\"King County\",\"short_name\":\"King County\",\"types\":[\"administrative_area_level_2\",\"political\"]},\n          {\"long_name\":\"Washington\",\"short_name\":\"WA\",\"types\":[\"administrative_area_level_1\",\"political\"]},\n          {\"long_name\":\"United States\",\"short_name\":\"US\",\"types\":[\"country\",\"political\"]},\n          {\"long_name\":\"98070\",\"short_name\":\"98070\",\"types\":[\"postal_code\"]},\n          {\"long_name\":\"4674\",\"short_name\":\"4674\",\"types\":[\"postal_code_suffix\"]}\n      ],\n      \"formatted_address\":\"17205 Vashon Hwy SW Suite B2, Vashon, WA 98070, USA\",\n      \"geometry\":{\n        \"location\":{\"lat\":47.4506552,\"lng\":-122.4613515},\n        \"location_type\":\"ROOFTOP\",\n        \"viewport\":{\"south\":47.4493062197085,\"west\":-122.4627004802915,\"north\":47.4520041802915,\"east\":-122.4600025197085}\n      },\n      \"partial_match\":true,\n      \"place_id\":\"ChIJ6cK8ACZFkFQR_YHGZRMTSlM\",\n      \"types\":[\"establishment\",\"health\",\"point_of_interest\",\"spa\"]\n  }\n  entry.component.ts:154 #######  address value changed: 10506 sw 132nd pl, vashon, wa, 98070\n    */\n  // https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/URLSearchParams\n\n\n\n  // https://developers.google.com/maps/documentation/javascript/geocoding#GeocodingResults\n  getLatLngAndAddressFromPlaceID(placeId: string) //: { position: google.maps.LatLngLiteral | null, address: string, placeId: string }\n  //({position:google.maps.LatLng, address:string})\n  {\n    let err = \"\"\n    GoogleGeocode.geocoder\n      .geocode({ placeId: placeId })\n      .then(({ results }) => {\n        if (results[0]) {\n          console.log(`getLatLngAndAddressFromPlaceID geocoder returned: ${JSON.stringify(results)} ++`)\n          return {\n            position: results[0].geometry.location,\n            address: results[0].formatted_address,\n            placeId: results[0].place_id\n          }\n        } else {\n          return { position: null, address: \"\", placeId: \"\" }\n        }\n      })\n      .catch((e) => {\n        // debugger\n        err = \"Geocoder failed due to: \" + e })\n        /* _.KA {message: 'GEOCODER_GEOCODE: UNKNOWN_ERROR: A geocoding reque… error. The request may succeed if you try again.', stack: 'Error: GEOCODER_GEOCODE: UNKNOWN_ERROR: A geocodin…DPgrn2iLu2p4II4H1Ww27dx6pVycHVs4&token=57451:1:28', name: 'MapsServerError', endpoint: 'GEOCODER_GEOCODE', code: 'UNKNOWN_ERROR'}\n        Local\n        this: undefined\n        e: _.KA {message: 'GEOCODER_GEOCODE: UNKNOWN_ERROR: A geocoding reque… error. The request may succeed if you try again.', stack: 'Error: GEOCODER_GEOCODE: UNKNOWN_ERROR: A geocodin…DPgrn2iLu2p4II4H1Ww27dx6pVycHVs4&token=57451:1:28', name: 'MapsServerError', endpoint: 'GEOCODER_GEOCODE', code: 'UNKNOWN_ERROR'}\n        Closure (getLatLngAndAddressFromPlaceID)\n        Block\n        Closure (9614)\n        Window\n        Global*/\n    return { position: null, address: err, placeId: \"\" }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/entry/entry.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                icon\n            \n\n\n\n            \n                template\n                \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        path\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z'\n                    \n                \n                        \n                            \n                                    Defined in src/app/entry/entry.component.ts:86\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { DOCUMENT } from '@angular/common'\nimport { Component, Inject, OnInit, ViewChild, isDevMode, Input, NgZone } from '@angular/core'\nimport { ThemePalette } from '@angular/material/core';\nimport { FormBuilder, FormControl, FormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { HttpClient } from '@angular/common/http';\n\n//import { MatDatepickerModule } from '@angular/material/datepicker'\n//import { MatInputModule } from '@angular/material/input'\n\nimport { MatSnackBar } from '@angular/material/snack-bar'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { Observable, debounceTime, map, startWith, switchMap } from 'rxjs'\nimport { MapInfoWindow, MapMarker, GoogleMap } from '@angular/google-maps'\n\nimport { AlertsComponent } from '../alerts/alerts.component'\nimport { FieldReportService, FieldReportStatusType, RangerService, RangerType, SettingsService, TeamService } from '../shared/services/'\n\n//import { addressType } from '../lmap/lmap.component' // BUG:\nimport { Map, DDToDMS, CodeArea, OpenLocationCode, GoogleGeocode } from '../shared/' // BUG: , What3Words\nimport { LatLng } from 'leaflet';\n\n//import { MatDatepickerModule } from '@matheo/datepicker'; //https://www.npmjs.com/package/@matheo/datepicker\n//import { MatNativeDateModule } from '@matheo/datepicker/core';\nimport { NgxMatDatetimePickerModule, NgxMatNativeDateModule, NgxMatTimepickerModule } from '@angular-material-components/datetime-picker'// (already in ngModule)\nimport * as dayjs from 'dayjs' // https://day.js.org/docs/en/ or https://github.com/dayjs/luxon/\n\nimport * as P from '@popperjs/core';\n//import { createPopper } from '@popperjs/core';\nimport type { StrictModifiers } from '@popperjs/core';\n\nimport { faMapMarkedAlt, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { mdiAccount, mdiInformationOutline } from '@mdi/js';\n//import { lookupCollections, locate } from '@iconify/json'; //https://docs.iconify.design/icons/all.html vs https://docs.iconify.design/icons/icons.html\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';// https://material.angular.io/components/icon/examples\n\nconst Vashon: google.maps.LatLngLiteral = { lat: 47.4471, lng: -122.4627 }\n// IDEA: use https://material.angular.io/components/badge/ ???\n\nconst THUMBUP_ICON =\n  `\n  \n    \n    \n  \n`\n\n// https://popper.js.org/docs/v2/constructors/\ntype Placement =\n  | 'auto'\n  | 'auto-start'\n  | 'auto-end'\n  | 'top'\n  | 'top-start'\n  | 'top-end'\n  | 'bottom'\n  | 'bottom-start'\n  | 'bottom-end'\n  | 'right'\n  | 'right-start'\n  | 'right-end'\n  | 'left'\n  | 'left-start'\n  | 'left-end';\ntype Strategy = 'absolute' | 'fixed';\n/*type Options = {|\n  placement: Placement, // \"bottom\"\n  modifiers: Array>>, // []\n  strategy: PositioningStrategy, // \"absolute\",\n  onFirstUpdate?: ($Shape) => void, // undefined\n|};*/\n\n\n\n@Component({\n  selector: 'icon',\n  template: `\n    \n        \n    \n  `\n})\nexport class IconComponent {\n  @Input('path') data: string = 'M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z';\n}\n\n\n\n\n\n@Component({\n  selector: 'rangertrak-entry',\n  templateUrl: './entry.component.html',\n  styleUrls: ['./entry.component.scss'],\n  providers: [RangerService, FieldReportService, SettingsService, TeamService]\n})\nexport class EntryComponent implements OnInit {\n  @ViewChild('picker') picker: any; // https://blog.angular-university.io/angular-viewchild/\n  @Input('path') data: string = 'M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z';\n\n  //createPopper(referenceElement, popperElement, options)\n\n  faMapMarkedAlt = faMapMarkedAlt\n  faInfoCircle = faInfoCircle\n  mdiAccount: string = mdiAccount\n  mdiInformationOutline: string = mdiInformationOutline\n\n\n  // ------------------ MAP STUFF  ------------------\n  // imports this.map as a GoogleMap which is the Angular wrapper around a google.maps.Map...\n  @ViewChild(GoogleMap, { static: false }) map!: GoogleMap // even needed?\n  // google.maps.Map is NOT the same as GoogleMap...\n  gMap?: google.maps.Map\n  //map2?: google.maps.Map // unused\n\n  onlyMarker = new google.maps.Marker({\n    draggable: false,\n    animation: google.maps.Animation.DROP\n  }) // i.e., a singleton...\n\n  // TODO: move to abstracted x instead of google.maps\n  mouseLatLng?: google.maps.LatLngLiteral\n  vashon = new google.maps.LatLng(47.4471, -122.4627)\n\n  zoom = 11\n  center: google.maps.LatLngLiteral = Vashon\n  options: google.maps.MapOptions = {\n    zoomControl: true,\n    scrollwheel: true,\n    disableDoubleClickZoom: true,\n    mapTypeId: 'hybrid',\n    maxZoom: 21,\n    minZoom: 7,\n    draggableCursor: 'crosshair', // https://www.w3.org/TR/CSS21/ui.html#propdef-cursor has others...\n    //heading: 90,\n  }\n  geocoder = new GoogleGeocode\n  //w3w = new What3Words\n\n  // --------------- ENTRY FORM -----------------\n  // creating controls in a component class, provides immediate access to listen for, update, and validate state of the form input: https://angular.io/guide/reactive-forms#adding-a-basic-form-control\n  callsignCtrl = new FormControl()\n  addressCtrl = new FormControl()  // TODO: No formControlName=\"addressCtrl\"!!!!\n  filteredRangers: Observable\n  rangers: RangerType[] = []\n  fieldReportStatuses: FieldReportStatusType[] = []\n  settings\n  entryDetailsForm!: FormGroup\n  //w3w = new What3Words()\n\n  submitInfo: HTMLElement | null = null\n  callInfo: HTMLElement | null = null\n  alert: any\n\n  button: HTMLButtonElement | undefined\n  tooltip: HTMLHtmlElement | undefined\n  popperInstance: any //typeof P.createPopper | undefined\n\n  // --------------- DATE-TIME PICKER -----------------\n\n  // https://github.com/angular/components/issues/5648\n  // https://ng-matero.github.io/extensions/components/datetimepicker/overview (nice)\n  // https://vlio20.github.io/angular-datepicker/timeInline (unused)\n  // https://h2qutc.github.io/angular-material-components - IN USE HERE!\n  public date: dayjs.Dayjs = dayjs()\n\n\n/*  It looks like you're using the disabled attribute with a reactive form directive.\n If you set disabled to true when you set up this control in your component class,\n the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n*/\n  public disabled = false;\n  public showSpinners = true;\n  public showSeconds = false; // only affects display in picker\n  public touchUi = false;\n  public enableMeridian = false; // 24 hr clock\n\n  minDate!: dayjs.Dayjs | null\n  maxDate!: dayjs.Dayjs | null\n  public stepHour = 1;\n  public stepMinute = 1;\n  public stepSecond = 1;\n  public color: ThemePalette = 'primary';\n  disableMinute = false\n  hideTime = false\n/*\n  public formGroup = new FormGroup({\n    date1: new FormControl(dayjs(), [Validators.required]), //.utcOffset()\n    date2: new FormControl(null, [Validators.required])\n  })\n\n  public dateControl = new FormControl(dayjs()); // TODO:  vs dateCtrl???? (just shows date, not time?)\n  public dateControlMinMax = new FormControl(dayjs());\n*/\n  dateCtrl = new FormControl(new Date()) //TODO: Still need to grab the result during submit...!\n\n  // hhttps://github.com/h2qutc/angular-material-components\n  /* following causes:  No suitable injection token for parameter 'formBuilder' of class 'EntryComponent'.\n  Consider using the @Inject decorator to specify an injection token.(-992003)\nentry.component.ts(77, 26): This type does not have a value, so it cannot be used as injection token.\n*/\n  constructor(\n    private formBuilder: FormBuilder,\n    private rangerService: RangerService,\n    private fieldReportService: FieldReportService,\n    private settingsService: SettingsService,\n    // private teamService: TeamService,\n    private _snackBar: MatSnackBar,\n    iconRegistry: MatIconRegistry, sanitizer: DomSanitizer, // for svg mat icons\n    private http: HttpClient,\n    private zone: NgZone,\n    @Inject(DOCUMENT) private document: Document) {   //, private service: PostService) {\n\n\n    // https://fonts.google.com/icons && https://material.angular.io/components/icon\n    // Note that we provide the icon here as a string literal here due to a limitation in\n    // Stackblitz. If you want to provide the icon from a URL, you can use:\n    iconRegistry.addSvgIcon('thumbs-up', sanitizer.bypassSecurityTrustResourceUrl('icon.svg'))\n    //iconRegistry.addSvgIconLiteral('thumbs-up', sanitizer.bypassSecurityTrustHtml(THUMBUP_ICON))\n\n    // REVIEW: Min/Max times ignored?!\n    this._setMinDate(10) // no times early than 10 hours ago\n    this._setMaxDate(1)  // no times later than 1 hours from now\n\n    this.rangers = rangerService.GetRangers() // TODO: or getActiveRangers?!\n\n    this.alert = new AlertsComponent(this._snackBar, this.document)// TODO: Use Alert Service to avoid passing along doc & snackbar properties!!!!\n    if (this.rangers.length  this.CallsignChanged(newCall))\n    // TODO: NOt working yet...\n    console.log(`addressCtrl.valueChanges`)\n    // TODO: No formControlName=\"addressCtrl\"!!!!\n    this.addressCtrl.valueChanges.pipe(debounceTime(700)).subscribe(newAddr => this.addressCtrlChanged2(newAddr))\n\n    // https://material.angular.io/components/autocomplete/examples#autocomplete-overview\n    this.filteredRangers = this.callsignCtrl.valueChanges.pipe(\n      startWith(''),\n      map(callsign => (callsign ? this._filterRangers(callsign) : this.rangers.slice())),\n    )\n    console.log(`constructor: ranger ${(this.filteredRangers)}`) //JSON.stringify\n\n    // OLD:  map(ranger => (ranger ? this._filterRangers(ranger) : this.rangers.slice())),\n    // NEW: map(callsign => (callsign ? this._filterRangers(callsign) : this.rangers.slice())),\n  }\n\n\n  //https://www.c-sharpcorner.com/article/formbuilder-service-in-angular/\n  //change the setTimeout statement by replacing setValue to patchValue.\n  // setTimeout(() => this.registrationForm.patchValue(this.sampleData), 5000);\n  //Now you can skip giving any field control value from the sampleData object. It will not throw error and set the values that are available.\n\n\n  private _filterRangers(value: string): RangerType[] {\n    console.log(`_filterRangers  value changed: ${value}`)\n\n    const filterValue = value.toLowerCase()\n    this.entryDetailsForm.value.callsign = filterValue\n    return this.rangers.filter((ranger1) => ranger1.callsign.toLowerCase().includes(filterValue))\n    /* NEW:\n      this.entryDetailsForm.value.callsign = filterValue\n      return this.rangers.filter((ranger1) => ranger1.callsign.toLowerCase().includes(filterValue))\n    */\n    /* OLD:\n      this.entryDetailsForm.controls['ranger'].setValue(filterValue) // TODO: MAT input field not automatically set into entryForm\n      return this.rangers.filter(ranger => ranger.callsign.toLowerCase().includes(filterValue));\n    */\n  }\n\n  ngOnInit(): void {\n    console.log(`EntryForm test started at ${Date()} with development mode ${isDevMode() ? \"\" : \"NOT \"}enabled`)\n    console.log(\"EntryComponent - ngOnInit - Use settings to fill form\")\n\n    // https://angular.io/api/router/Resolve - following fails as SettingsComponent has yet to run...\n    // or even https://stackoverflow.com/questions/35655361/angular2-how-to-load-data-before-rendering-the-component\n\n    console.log(`Running ${this.settings.application} version ${this.settings.version}`)\n\n    this.entryDetailsForm = this.formBuilder.group({\n      id: -1,\n      callsign: [''],\n      team: ['T1'],\n      address: [''],  // ' , Vashon, WA 98070' ?\n      lat: [this.settings.defLat, Validators.required], //Validators.minLength(4)\n      lng: [this.settings.defLng, Validators.required], //Validators.minLength(4)\n      date: [new Date()],\n      status: [this.fieldReportStatuses[this.settings.defRangerStatus].status],\n      note: ['']\n    })\n\n    this.submitInfo = this.document.getElementById(\"enter__Submit-info\")\n\n    if (!this.settings.debugMode) {\n      this.displayHide(\"enter__frm-reguritation\")\n    }\n\n    // On Location/Address Change subscriptions  // TODO: USE THESE!!!\n    if (this.entryDetailsForm) {\n      // this.addressCtrl.valueChanges.pipe(debounceTime(700)).subscribe(newAddr => this.addressCtrlChanged2(newAddr))\n      this.entryDetailsForm.get(\"lat\")?.valueChanges.pipe(debounceTime(700)).subscribe(x => {\n        console.log('########  latitude value changed: ' + x)\n      })\n      this.entryDetailsForm.get(\"lng\")?.valueChanges.pipe(debounceTime(700)).subscribe(x => {\n        console.log('##########  longitude value changed: ' + x)\n      })\n      this.entryDetailsForm.get(\"address\")?.valueChanges.pipe(debounceTime(700)).subscribe(x => {\n        console.log('#######  address value changed: ' + x)\n      })\n    }\n    //this.callsignCtrl.valueChanges.pipe(debounceTime(700)).subscribe(newCall => this.CallsignChanged(newCall))\n\n    this.button = document.querySelector('#button') as HTMLButtonElement\n    this.tooltip = document.querySelector('#tooltip') as HTMLHtmlElement\n    // https://popper.js.org/docs/v2/constructors/\n    this.popperInstance = P.createPopper(this.button, this.tooltip, {\n      modifiers: [\n        {\n          name: 'offset',\n          options: {\n            offset: [0, 8],\n          },\n        },\n      ],\n    })\n    this.date = dayjs()\n    console.log(`EntryForm ngOnInit completed at ${Date()}`)\n  }\n\n  // this.myReactiveForm.reset(this.myReactiveForm.value)\n  // https://angular.io/guide/reactive-forms#!#_reset_-the-form-flags\n  // https://stackoverflow.com/a/54048660\n  resetForm() {\n    console.log(\"Resetting form...\")\n\n    this.entryDetailsForm = this.formBuilder.group({\n      id: -2,\n      callsign: [''],\n      team: ['T0'],\n      address: [''], // ' , Vashon, WA 98070' ?\n      lat: [this.settings.defLat,\n      Validators.required,\n        //Validators.minLength(4)\n      ],\n      lng: [this.settings.defLng,\n      Validators.required,\n        //Validators.minLength(4)\n      ],\n      date: [new Date()],  // TODO: reset dateCtrl instead?!\n      status: [this.fieldReportStatuses[this.settings.defRangerStatus]],   // TODO: Allow changing list & default of statuses in settings?!\n      note: ['']\n    })\n    // Allow getting new OnCha ngeUpdates - or use the subscription?!\n    this.entryDetailsForm.markAsPristine();\n    this.entryDetailsForm.markAsUntouched();\n  }\n\n\n  // TODO: NOt working yet...\n  CallsignChanged(callsign: string) { // Just serves timer for input field - post interaction\n    console.log(`EntryForm CallsignChanged()`)\n\n    this.callInfo = this.document.getElementById(\"enter__Callsign-upshot\")\n    if (this.callInfo) {\n      console.log(`EntryForm CallsignChanged looking for ${callsign}`)\n      //let ranger = this.rangers[this.findIndex(callsign)]\n      let ranger = this.rangerService.getRanger(callsign)  // REVIEW is this.rangers here & service in sync?\n      this.callInfo.innerHTML = `${ranger.callsign}  |  ${ranger.licensee} | ${ranger.phone} `\n      //\n    } else {\n      console.log(`EntryForm CallsignChanged did not find enter__Callsign-upshot`)\n    }\n  }\n\n  CallsignCtrlChanged() { // NOTE: NEVER CALLED (my error, maybe does now..)!!!, so use workaround above...\n    return\n    let callSign: string = (this.document.getElementById(\"enter__Callsign-input\") as HTMLInputElement).value\n    if (callSign) {\n      console.log(`CallsignCtrlChanged() call= ${callSign} at ${Date.now}`)\n      this.CallsignChanged(callSign)\n    }\n\n    // TODO: update #enter__Callsign-upshot\n  }\n\n  /*\n    https://www.sitepoint.com/css3-animation-javascript-event-handlers/\n    https://css-tricks.com/controlling-css-animations-transitions-javascript/\n    https://www.smashingmagazine.com/2013/04/css3-transitions-thank-god-specification/#a2\n    https://stackoverflow.com/questions/6268508/restart-animation-in-css3-any-better-way-than-removing-the-element\n    https://css-tricks.com/restart-css-animation/\n    https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  */\n  reset_animation(element: HTMLElement) {\n    console.log(`Fade Animation reset`)\n    element.style.animation = 'none';\n    element.offsetHeight; // trigger reflow\n    element.style.animation = \"\";\n  }\n\n  onFormSubmit(formData1: string): void {\n    console.log(`Form submited at date=${this.date} `)\n    //this.date=this.dateCtrl.value // TODO:\n    this.entryDetailsForm.value.date = this.dateCtrl.value\n    let formData = JSON.stringify(this.entryDetailsForm.value)\n\n    let newReport = this.fieldReportService.addfieldReport(formData)\n    console.log(`Report id # ${newReport.id} has been added.`)\n    console.log(\"formData:  \" + formData)\n    //console.log(\"formData1: \" + JSON.stringify(formData1))\n\n    if (this.submitInfo) {\n      // Display fading confirmation to right of Submit button\n      this.submitInfo.innerText = `Entry id # ${newReport.id} Saved. ${formData}`\n      this.reset_animation(this.submitInfo)\n    }\n    else {\n      console.log(\"NO this.submitInfo ID FOUND!!!\")\n    }\n    this.alert.OpenSnackBar(`Entry id # ${newReport.id} Saved: ${formData}`, `Entry id # ${newReport.id}`, 2000)\n\n    //this.entryDetailsForm.reset() // std reset just blanks values, doesn't initialize them...\n    this.resetForm()\n  }\n\n\n\n  /*\n  FUTURE: Allow entry of keywords\n  get keywordsControls(): any {\n  return (this.entryDetailsForm.get('keywords')).controls\n  }   */\n\n\n  // ------------------------------------------------------------------------\n  // Map stuff below\n  //#region\n\n  onMapInitialized(newMapReference: google.maps.Map) {\n    console.log(`onMapInitialized()`)\n    this.gMap = newMapReference\n    /*\n        if (this.gMap == null) {\n          console.log(\"onMapInitialized(): This.gMap is null\")\n        } else {\n          console.log(`onMapInitialized(): this.gMap zoom =${this.gMap.getZoom()}`)\n        }\n        */\n    this.updateOverviewMap()\n    console.log(`onMapInitialized done`)\n  }\n\n  updateOverviewMap() {\n    console.log(`updateOverviewMap`)\n\n    //let latlng = new google.maps.LatLng(SettingsService.Settings.defLat, SettingsService.Settings.deflng)\n    //let latlngL = {lat: SettingsService.Settings.defLat, lng: SettingsService.Settings.deflng}\n\n    // TODO: FitBounds to new point, not to DefLat & Deflng  -- do it on addMarker?\n    // this.gMap?.setCenter(latlng) // REVIEW: this and/or next line. (Bounds should be private though!)\n    //this.gMap?.fitBounds(this.fieldReportService.bounds.extend({ lat: SettingsService.Settings.defLat, lng: SettingsService.Settings.defLng })) // zooms to max!\n    this.gMap?.setZoom(17) // no effect\n  }\n\n  onMapMouseMove(event: google.maps.MapMouseEvent) {\n    if (event.latLng) {\n      this.mouseLatLng = event.latLng.toJSON()\n      //console.log('moving()');\n    }\n    else {\n      console.warn('move(): NO event.latLng!!!!!!!!!!!!!');\n    }\n  }\n\n  zoomed() {\n    if (this.zoom && this.gMap) {\n      this.zoom = this.gMap.getZoom()!\n    }\n  }\n\n  //#endregion\n\n\n\n  //----------------------------------------------------------------------------------------\n  // Address stuff : Move to service/utility for us by big maps? Also future is to chg miniMap out with Leaflet map (for offline use)\n  // #region\n\n  // https://developers.google.com/maps/documentation/javascript/places\n  // https://developer.what3words.com/tutorial/javascript\n  // https://developer.what3words.com/tutorial/detecting-if-text-is-in-the-format-of-a-3-word-address\n  // https://askinglot.com/what-is-dirty-and-touched-in-angular\n  // https://findanyanswer.com/what-is-dirty-in-angular\n  // https://angular.io/guide/form-validation\n  // https://qansoft.wordpress.com/2021/05/27/reactive-forms-in-angular-listening-for-changes/\n  addressCtrlChanged2(newAddr: string) {\n    // TODO: No formControlName=\"addressCtrl\"!!!!\n    console.log(`addressCtrlChanged2: ${newAddr} `)\n\n  }\n\n  UpdateLocation(loc: google.maps.LatLngLiteral, title: string = \"\") {\n    console.log(\"updateLocation() running\")\n    //this.entryDetailsForm.get(['', 'name'])\n    //this.entryDetailsForm.controls['derivedAddress'].setValue('New Derived Address')\n    let addr = this.document.getElementById(\"derivedAddress\")\n    if (addr) { addr.innerHTML = \"New What3Words goes here!\" } // TODO: move to another routine...\n\n    if (title == \"\") {\n      title = `${Date.now} at lat ${loc.lat}, lng ${loc.lng}.`\n    }\n\n    this.displayMarker(loc, title)\n  }\n\n  displayMarker(pos: google.maps.LatLngLiteral, title = 'Latest Location') {\n    console.log(`displayMarker at ${pos}, title: ${title}`)\n\n    // Review: will this overwrite/remove any previous marker?\n    if (this.gMap) {\n      this.onlyMarker.setMap(this.gMap)\n    } else {\n      console.warn('gMap NOT set in displayMarker!!!!')\n    }\n    this.onlyMarker.setPosition(pos)\n    this.onlyMarker.setTitle(title)\n    this.gMap?.setCenter(pos)\n\n    /* label: {\n       // label: this.labels[this.labelIndex++ % this.labels.length],\n       text: \"grade\", // https://fonts.google.com/icons: rocket, join_inner, noise_aware, water_drop, etc.\n       fontFamily: \"Material Icons\",\n       color: \"#ffffff\",\n       fontSize: \"18px\",\n     },\n     */\n  }\n\n  /*\n     addrInfo: HTMLElement | null = null\n\n     AddressChanged(addr: string) { // Just serves timer for input field - post interaction\n       this.addrInfo = this.document.getElementById(\"enter__Where--Address-upshot\")\n       if (this.addrInfo) {\n         console.log(`EntryForm AdressChanged looking for ${ address }`)\n         //let ranger = this.rangers[this.findIndex(callsign)];\n         this.addrInfo.innerHTML = `addrInfo goes here`\n         //\n         // ${ranger.callsign} |  ${ranger.licensee} | ${ranger.phone}`\n       }\n     }\n   */\n\n  // TODO: How to subscribe to the valueChanges observable?\n  //  listen for changes in the form's value in the *template* using AsyncPipe or in the *component class* w/ subscribe() method\n\n  // https://www.tektutorialshub.com/angular/valuechanges-in-angular-forms/\n  // https://angular.io/api/common/AsyncPipe\n  // this.document.getElementById(\"enter__Where--Lat\")?.onchange\n\n  // https://angular.io/api/forms/AbstractControl\n  // https://angular.io/api/forms/NgControlStatus ARE CSS Classes.\n  // https://angular.io/api/forms\n  // https://www.danvega.dev/blog/2017/06/07/angular-forms-clear-input-field/\n\n\n  /*\n  https://www.tektutorialshub.com/angular/valuechanges-in-angular-forms/\n\n  this.reactiveForm.get(\"firstname\").valueChanges.subscribe(selectedValue => {\n  console.log('firstname value changed')\n  console.log(selectedValue)\n  console.log(this.reactiveForm.get(\"firstname\").value)\n  console.log(this.reactiveForm.value)    //shows the old first name\n\n  setTimeout(() => {\n    console.log(this.reactiveForm.value)   //shows the latest first name\n  })\n\n  For Example, the following code will result in the ValueChanges of the firstname. but not of its parent (i.e. top-level form)\n\n  this.reactiveForm.get(\"firstname\").setValue(\"\", { onlySelf: true });\n\n  You can use the onlySelf: true with the setValue, patchValue, markAsUntouched, markAsDirty, markAsPristine, markAsPending, disable, enable, and updateValueAndValidity methods\n  })\n  */\n\n  addressCtrlChanged(what: string) {\n    console.log(`addressCtrlChanged`)\n    // TODO: No formControlName=\"addressCtrl\"!!!!\n\n    // this.form.markAsPristine();\n    // this.form.markAsUntouched();\n    if (this.entryDetailsForm.get('address')?.touched) {\n      console.log('address WAS touched')\n      //this.entryDetailsForm.get('address')?.markAsUntouched\n    }\n    if (this.entryDetailsForm.get('address')?.dirty) {\n      console.log('address WAS dirty')\n      //this.entryDetailsForm.get('address')?.markAsPristine\n    }\n\n    switch (what) {\n      case 'addr':\n\n        this.chkAddresses()\n        // if new PlaceId(??? or plus code or ???), then call:\n        // TODO: this.geocoder.getLatLngAndAddressFromPlaceID( PlaceID)\n\n        // https://developer.what3words.com/tutorial/javascript-autosuggest-component-v4\n        // https://developer.what3words.com/tutorial/combining-the-what3words-js-autosuggest-component-with-a-google-map\n        // https://developer.what3words.com/tutorial/javascript\n        // https://developer.what3words.com/tutorial/displaying-the-what3words-grid-on-a-google-map\n\n\n        // Get new lat-lng\n\n        break;\n      case 'lat':\n      case 'lng':\n\n        let llat = Number((this.document.getElementById(\"enter__Where--Lat\") as HTMLInputElement).value)\n        let llng = Number((this.document.getElementById(\"enter__Where--Lng\") as HTMLInputElement).value)\n        //this.document.getElementById(\"enter__Where--lng\")?.innerText\n        //this.document.getElementById(\"enter__Where--lng\")?.innerText\n        let ll = new google.maps.LatLng(llat, llng)\n        let newAddress = this.geocoder.getAddressFromLatLng(ll)\n        console.log(`addressCtrlChanged new ll: ${JSON.stringify(ll)}; addr: ${newAddress}`)\n\n        this.updateCoords(llat, llng)\n\n        let addrLabel = this.document.getElementById(\"addressLabel\") // as HTMLLabelElement\n        if (addrLabel) {\n          addrLabel.innerText = newAddress\n          //addrLabel.markAsPristine()\n          //addrLabel. .markAsUntouched()\n        }\n        this.UpdateLocation({ lat: llat, lng: llng }, `Time: ${Date.now} at Lat: ${llat}, Lng: ${llng}, street: ${newAddress}`)\n        break;\n      default:\n        console.log(`UNEXPECTED ${what} received in AddressCtrlChanged()`)\n        break;\n    }\n    console.log('addressCtrlChanged done') // TODO: No formControlName=\"addressCtrl\"!!!!\n  }\n\n  chkAddresses() {\n\n    /* if JSON.stringify(addr): gets\n    TypeError: Converting circular structure to JSON\n        --> starting at object with constructor 'TView'\n        |     property 'blueprint' -> object with constructor 'LViewBlueprint'\n        --- index 1 closes the circle\n        at JSON.stringify ()\n        at EntryComponent.chkAddresses (entry.component.ts:465:47)\n        at EntryComponent.addressCtrlChanged (entry.component.ts:424:14)\n        */\n\n\n\n    let tWords // = document.getElementById(\"addresses\")!.innerText // as HTMLInputElement).value\n    let addr = document.getElementById(\"addressCtrl\") as HTMLInputElement// ?.innerText\n    console.log(`Looking into address: ${addr}`)\n    if (addr == null)\n      return\n    //debugger\n    let addrText = addr.value;\n    console.log(`Got some kind of address: ${addrText}`)\n    if (addrText.length) {\n      if (addrText.includes(\"+\")) {\n        console.log(\"Got PCode: \" + addrText)\n        this.chkPCodes(addrText)\n      } else {\n        tWords = addrText.split(\".\")\n        if (tWords.length == 3) {\n          console.log(\"Got What 3 Words: \" + addrText)\n          this.chk3Words(addrText)\n        } else {\n          let result = this.chkStreetAddress(addrText)\n          let addrLabel = document.getElementById(\"addressLabel\") as HTMLLabelElement\n          if (result.position) {\n            addrLabel.innerText\n              = `STREET ADDRESS: Formatted address: ${result.address}; Google PlaceID: ${result.placeId}; Position: ${result.position}; partial_match: ${result.partial_match}; placeId: ${result.placeId}; plus_code: ${result.plus_code}`\n          } else {\n            addrLabel.innerText = `STREET ADDRESS: unable to geocode. ${result.address}`\n          }\n        }\n      }\n    }\n  }\n\n\n  updateCoords(latDD: number, lngDD: number) {\n    console.log(`updateCoords with new Coordinates: lat: ${latDD}; latDD: ${latDD.toString()}`);\n    console.log(`updateCoords with new Coordinates: lng: ${lngDD}; lngDD: ${lngDD.toString()}`);\n\n    let latitudeDDI = document.getElementById(\"enter__Where--LatI\") as HTMLInputElement\n    let latitudeDDD = document.getElementById(\"enter__Where--LatD\") as HTMLInputElement\n    let longitudeDDI = document.getElementById(\"enter__Where--LngI\") as HTMLInputElement\n    let longitudeDDD = document.getElementById(\"enter__Where--LngD\") as HTMLInputElement\n    console.log(`updateCoords latitudeDDI: ${latitudeDDI}; latitudeDDD: ${latitudeDDD}`);\n    console.log(`updateCoords longitudeDDI: ${longitudeDDI}; longitudeDDD: ${longitudeDDD}`);\n\n    // TODO: Only display 4-6 positions after decimal\n    latitudeDDI.value = Math.floor(latDD).toString();\n    latitudeDDD.value = (latDD - Math.floor(latDD)).toString().slice(0, 4);\n    //(document.getElementById(\"enter__Where--LngI\") as HTMLInputElement).value = lngDD.toString();\n    //(document.getElementById(\"enter__Where--LngD\") as HTMLInputElement).value = lngDD.toString();\n\n    let latDMS = DDToDMS(latDD, false);\n    (document.getElementById(\"latitudeQ\") as HTMLInputElement).value = latDMS.dir;\n    (document.getElementById(\"latitudeD\") as HTMLInputElement).value = latDMS.deg.toString();\n    (document.getElementById(\"latitudeM\") as HTMLInputElement).value = latDMS.min.toString();\n    (document.getElementById(\"latitudeS\") as HTMLInputElement).value = latDMS.sec.toString();\n\n    let lngDMS = DDToDMS(lngDD, true);\n    (document.getElementById(\"longitudeQ\") as HTMLInputElement).value = lngDMS.dir.toString();\n    (document.getElementById(\"longitudeD\") as HTMLInputElement).value = lngDMS.deg.toString();\n    (document.getElementById(\"longitudeM\") as HTMLInputElement).value = lngDMS.min.toString();\n    (document.getElementById(\"longitudeS\") as HTMLInputElement).value = lngDMS.sec.toString();\n\n    let pCode = OpenLocationCode.encode(latDD, lngDD, 11); // OpenLocationCode.encode using default accuracy returns an INVALID +Code!!!\n    console.log(\"updateCoords: Encode returned PlusCode: \" + pCode)\n    let fullCode\n    if (pCode.length != 0) {\n\n      if (OpenLocationCode.isValid(pCode)) {\n        if (OpenLocationCode.isShort(pCode)) {\n          // Recover the full code from a short code:\n          fullCode = OpenLocationCode.recoverNearest(pCode, SettingsService.Settings.defLat, SettingsService.Settings.defLng)\n        } else {\n          fullCode = pCode;\n          console.log(\"Shorten +Codes, Global:\" + fullCode + \", Lat:\" + SettingsService.Settings.defLat + \"; lng:\" + SettingsService.Settings.defLng);\n          // Attempt to trim the first characters from a code; may return same innerText...\n          pCode = OpenLocationCode.shorten(fullCode, SettingsService.Settings.defLat, SettingsService.Settings.defLng)\n        }\n        console.log(\"New PlusCodes: \" + pCode + \"; Global: \" + fullCode);\n        //(document.getElementById(\"addresses\") as HTMLInputElement).value = pCode;\n        //document.getElementById(\"addressLabel\").innerHTML = defPCodeLabel; // as HTMLLabelElement\n        (document.getElementById(\"pCodeGlobal\") as HTMLLabelElement).innerHTML = \" &nbsp;&nbsp; +Code: \" + fullCode;\n      } else {\n        console.log(\"Invalid +PlusCode: \" + pCode);\n        document.getElementById(\"pCodeGlobal\")!.innerHTML = \" &nbsp;&nbsp; Unable to get +Code\"\n        //document.getElementById(\"addressLabel\").innerHTML = \"  is Invalid  Try: \"; // as HTMLLabelElement\n      }\n    }\n\n    //this.addressCtrlChanged('lat') // HACK: to display marker\n    this.UpdateLocation({ lat: latDD, lng: lngDD })\n    //ToDO: Update 3 words too!\n    //if (initialized) this.displaySmallMap(latDD, lngDD);\n  }\n\n  chkPCodes(pCode: string) {\n    // REVIEW: Duplicate of code above...\n    //let pCode = document.getElementById(\"addresses\")!.innerText //value;\n    console.log(\"chkPCodes got '\" + pCode + \"'\");\n    if (pCode.length) {\n\n      let result = this.geocoder.getLatLngAndAddressFromPlaceID(pCode)\n      console.log(`chkPCode of ${pCode} got result:${JSON.stringify(result)}`);\n\n      if (result.position) {\n        (document.getElementById(\"addressLabel\") as HTMLLabelElement).innerText = result.address;\n        (document.getElementById(\"enter__Where--Lat\") as HTMLInputElement).value = \"result.position.lat\";\n        // BUG: position has type of never????!!!!\n        (document.getElementById(\"lng\") as HTMLInputElement).value = \"JSON.stringify(result.position)\";\n      }\n      else {\n        console.log(`chkPCode of ${pCode} got NULL result!!!`);\n      }\n\n\n      if (OpenLocationCode.isValid(pCode)) {\n        if (OpenLocationCode.isShort(pCode)) {\n          pCode = OpenLocationCode.recoverNearest(pCode, SettingsService.Settings.defLat, SettingsService.Settings.defLng)\n        }\n\n        // Following needs a full (Global) code\n        let coord = OpenLocationCode.decode(pCode)\n        console.log(\"chkPCodes got \" + pCode + \"; returned: lat=\" + coord.latitudeCenter + ', lng=' + coord.longitudeCenter);\n\n        this.updateCoords(coord.latitudeCenter, coord.longitudeCenter);\n      }\n\n      else {\n        document.getElementById(\"addressLabel\")!.innerHTML = \" is Invalid  Try: \" + SettingsService.Settings.defPlusCode\n        //document.getElementById(\"pCodeGlobal\")!.innerHTML = SettingsService.Settings.defPlusCode\n      }\n    }\n  }\n\n  // https://developer.what3words.com/tutorial/detecting-if-text-is-in-the-format-of-a-3-word-address\n  chk3Words(tWords: string) {\n    /*let settings = {\n      \"async\": true,\n      \"crossDomain\": true,\n      \"url\": \"https://api.what3words.com/v3/autosuggest?key=0M5I8UPF&input=index.home.r&n-results=5&focus=51.521251%2C-0.203586&clip-to-country=BE%2CGB\",\n      \"method\": \"GET\",\n      \"headers\": {}\n    }\n\n    $.ajax(settings).done(function (response) {\n      console.log(\"ddd=\" +response);\n    });\n    */\n\n    // No 3 word results outside these values allowed!!\n    // south_lat  {\n              const verifiedWords = response.suggestions[0].words;\n              console.log(\"Verified Words='\" + verifiedWords + \"'\");\n              if (tWords != verifiedWords) {\n                document.getElementById(\"addressLabel\")!.textContent = \" Verified as: \" + verifiedWords; // as HTMLLabelElement\n              } else {\n                document.getElementById(\"addressLabel\")!.textContent = \" Verified.\";\n              }\n              // this.w3w.GetLatlngFrom3Words(verifiedWords)\n              this.w3w.convertToCoordinates(verifiedWords).then((response: { coordinates: { lat: any; lng: any }; nearestPlace: string }) => {\n                //async call HAS returned!\n                this.updateCoords(response.coordinates.lat, response.coordinates.lng);\n                // NOTE: Not saving nearest place: too vague to be of value\n                document.getElementById(\"addressLabel\")!.textContent += \"; Near: \" + response.nearestPlace; // as HTMLLabelElement\n              });\n            })\n            .catch(function (error: { code: string; message: string }) {\n              errMsg = \"[code]=\" + error.code + \"; [message]=\" + error.message + \".\";\n              */\n\n      // TODO: this.updateCoords(lat,lng)\n      errMsg = \"\"\n      console.log(\"Unable to verify 3 words entered: \" + errMsg);\n      document.getElementById(\"addressLabel\")!.textContent = \"*** Not able to verify 3 words! ***\"; // as HTMLLabelElement\n      //})\n    }\n    // async call not returned yet\n  }\n  //#endregion\n\n\n  chkStreetAddress(addrText: string) {\n    //https://developers.google.com/maps/documentation/geocoding/requests-geocoding\n    console.log(\"Got street address to check: \" + addrText)\n    // Type 'GeocoderResult' must have a '[Symbol.iterator]()' method that returns an iterator.\n    //let result:google.maps.GeocoderResult = this.geocoder.isValidAddress(addrText)\n    return this.geocoder.isValidAddress(addrText)\n    // TODO: this.updateCoords(lat,lng)\n\n  }\n\n\n  // ---------------- MISC HELPERS -----------------------------\n  displayHide(htmlElementID: string) {\n    let e = this.document.getElementById(htmlElementID)\n    if (e) {\n      e.style.visibility = \"hidden\";\n    }\n  }\n\n  displayShow(htmlElementID: string) {\n    let e = this.document.getElementById(htmlElementID)\n    if (e) {\n      e.style.visibility = \"visible\";\n    }\n  }\n\n  // --------------------------- POPPER ---------------------------\n\n\n  // https://popper.js.org/docs/v2/tutorial/\n  // TODO: https://popper.js.org/\n  // https://popper.js.org/docs/v2/\n\n  show() {\n    if (this.tooltip) {\n      this.tooltip.setAttribute('data-show', '');\n    }\n\n    // Enable the event listeners\n    this.popperInstance.setOptions((options: { modifiers: any }) => ({\n      ...options,\n      modifiers: [\n        ...options.modifiers,\n        { name: 'eventListeners', enabled: true },\n      ],\n    }))\n\n    // update the tooltip position\n    if (this.popperInstance) {\n      //this.popperInstance.update();\n    }\n  }\n\n  hide() {\n    if (this.tooltip) {\n      this.tooltip.removeAttribute('data-show')\n    }\n\n    // Disable the event listeners\n    this.popperInstance.setOptions((options: { modifiers: any }) => ({\n      ...options,\n      modifiers: [\n        ...options.modifiers,\n        { name: 'eventListeners', enabled: false },\n      ],\n    }))\n  }\n\n  myPop() {  // TODO: Not supposed to be hidden in a routine...\n    const showEvents = ['mouseenter', 'focus']\n    const hideEvents = ['mouseleave', 'blur']\n\n    showEvents.forEach((event) => {\n      if (this.button) {\n        this.button.addEventListener(event, this.show)\n      }\n    })\n\n    hideEvents.forEach((event) => {\n      if (this.button) {\n        this.button.addEventListener(event, this.hide);\n      }\n    })\n  }\n\n\n\n\n\n  // https://bobrov.dev/angular-popper/\n  // https://sergeygultyayev.medium.com/use-popper-js-in-angular-projects-7b34f18da1c\n  // https://github.com/gultyaev/angular-popper-example\n\n  // The hint to display\n  //  @Input() target!: HTMLElement\n  // Its positioning (check docs for available options)\n  //  @Input() placement?: string;\n  // Optional hint target if you desire using other element than\n  // specified one\n  //  @Input() appPopper?: HTMLElement;\n\n  // The popper instance\n  /*\n  popper: popper;\n  private readonly defaultConfig: PopperOptions = {\n    placement: 'top',\n    removeOnDestroy: true\n  };\n  constructor(private readonly el: ElementRef) {}\n  ngOnInit(): void {\n    // An element to position the hint relative to\n    const reference = this.appPopper ? this.appPopper : this.el.nativeElement;\n    this.popper = new Popper(reference, this.target, this.defaultConfig);\n  }\n  ngOnDestroy(): void {\n    if (!this.popper) {\n      return;\n    }\n\n    this.popper.destroy();\n  }\n\n\n\n    popcorn = this.document.querySelector('#popcorn') as HTMLAnchorElement // BUG:\n    tooltip = this.document.querySelector('#tooltip') as HTMLAnchorElement\n\n    createPopper(popcorn: HTMLAnchorElement, tooltip: HTMLAnchorElement, {\n      //   placement: 'top-end',\n    }) {\n\n    }\n  */\n  onInfoWhere() {\n    let s = \"for Enter the latittude either in degrees decmal or as Degrees Minutes & Seconds\"\n  }\n\n  // --------------- DATE-TIME PICKER -----------------\n  toggleMinDate(evt: any) {\n    if (evt.checked) {\n      this._setMinDate();\n    } else {\n      this.minDate = null;\n    }\n  }\n\n  toggleMaxDate(evt: any) {\n    if (evt.checked) {\n      this._setMaxDate();\n    } else {\n      this.maxDate = null;\n    }\n  }\n\n  closePicker() {\n    this.picker.cancel();\n  }\n\n  private _setMinDate(hours:number=10) {\n    const now = dayjs();\n    this.minDate = now.subtract(hours, 'hours');\n  }\n\n  private _setMaxDate(hours:number=10) {\n    const now = dayjs();\n    this.maxDate = now.add(hours, 'hours');\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'rangertrak-about'},{'name': 'AlertsComponent', 'selector': 'rangertrak-alerts'},{'name': 'AppComponent', 'selector': 'rangertrak-root'},{'name': 'ColorEditor', 'selector': 'editor-cell'},{'name': 'EntryComponent', 'selector': 'rangertrak-entry'},{'name': 'FieldReportsComponent', 'selector': 'rangertrak-field-reports'},{'name': 'FooterComponent', 'selector': 'rangertrak-footer'},{'name': 'GmapComponent', 'selector': 'rangertrak-gmap'},{'name': 'IconComponent', 'selector': 'icon'},{'name': 'LazyComponent', 'selector': 'lazy'},{'name': 'LmapComponent', 'selector': 'rangertrak-lmap'},{'name': 'LogComponent', 'selector': 'rangertrak-log'},{'name': 'MoodEditor', 'selector': 'editor-cell'},{'name': 'MoodRenderer', 'selector': 'mood-cell'},{'name': 'NavbarComponent', 'selector': 'rangertrak-navbar'},{'name': 'RangersComponent', 'selector': 'rangertrak-rangers'},{'name': 'SettingsComponent', 'selector': 'rangertrak-settings'},{'name': 'X404Component', 'selector': 'rangertrak-x404'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayerType.html":{"url":"interfaces/LayerType.html","title":"interface - LayerType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LayerType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/map.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attribution\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            id2\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attribution\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attribution:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as C from \"./coordinate\"\n\nimport { Injectable, OnInit } from '@angular/core';\nimport { JSONSchema, LocalStorage, StorageMap } from '@ngx-pwa/local-storage';\nimport { Observable, of } from 'rxjs';\nimport { catchError, mergeMap, toArray } from 'rxjs/operators';\n\nexport enum MapType {\n  Google,\n  ESRI_Leaflet\n}\n\nexport interface LayerType {\n  id: number\n  url: string,\n  id2: string,\n  attribution: string\n}\n\n/*\n  // Interface are general, lightweight vs. abstract classes as special-purpose/feature-rich (pg 96, Programming Typescript)\n  export interface IMap {\n    type: MapType,\n    layers: LayerType\n    initMap():void\n    displayBeautifulMap(num:number) :void\n    }\n*/\n\nexport abstract class Map {\n  static nextId = 1;\n  id: Number;\n  name: string;\n  date: Date;\n\n  constructor(name: string) {\n    this.id = Map.nextId++; // TODO: OK if user restarts app during SAME mission #?\n    this.date = new Date();\n    this.name = name;\n\n    // add validation code here?! or in forms code?\n\n    this.initMap()\n  }\n\n  toString(): string {\n    return \"Map name: \" + this.name +\n      \";; \"\n  }\n\n  abstract initMap(): void\n  abstract display(): void\n\n  onMapClick() { }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LazyComponent.html":{"url":"components/LazyComponent.html","title":"component - LazyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LazyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lazy/lazy.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lazy\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'rangertrak LAZY'\n                    \n                \n                    \n                        \n                                Defined in src/app/lazy/lazy.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lazy',\n\n  template: '' ,   // templateUrl: [], // './lazy.component.html'\n  styleUrls: [] //./lazy.component.scss\n})\nexport class LazyComponent {\n  title = 'rangertrak LAZY';\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'rangertrak-about'},{'name': 'AlertsComponent', 'selector': 'rangertrak-alerts'},{'name': 'AppComponent', 'selector': 'rangertrak-root'},{'name': 'ColorEditor', 'selector': 'editor-cell'},{'name': 'EntryComponent', 'selector': 'rangertrak-entry'},{'name': 'FieldReportsComponent', 'selector': 'rangertrak-field-reports'},{'name': 'FooterComponent', 'selector': 'rangertrak-footer'},{'name': 'GmapComponent', 'selector': 'rangertrak-gmap'},{'name': 'IconComponent', 'selector': 'icon'},{'name': 'LazyComponent', 'selector': 'lazy'},{'name': 'LmapComponent', 'selector': 'rangertrak-lmap'},{'name': 'LogComponent', 'selector': 'rangertrak-log'},{'name': 'MoodEditor', 'selector': 'editor-cell'},{'name': 'MoodRenderer', 'selector': 'mood-cell'},{'name': 'NavbarComponent', 'selector': 'rangertrak-navbar'},{'name': 'RangersComponent', 'selector': 'rangertrak-rangers'},{'name': 'SettingsComponent', 'selector': 'rangertrak-settings'},{'name': 'X404Component', 'selector': 'rangertrak-x404'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LazyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LazyModule.html":{"url":"modules/LazyModule.html","title":"module - LazyModule","body":"\n                   \n\n\n\n\n    Modules\n    LazyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LazyModule\n\n\n\ncluster_LazyModule_exports\n\n\n\ncluster_LazyModule_imports\n\n\n\ncluster_LazyModule_providers\n\n\n\ncluster_LazyModule_declarations\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nLazyModule\n\nLazyModule\n\nLazyModule -->\n\nAboutComponent->LazyModule\n\n\n\n\n\nLazyComponent\n\nLazyComponent\n\nLazyModule -->\n\nLazyComponent->LazyModule\n\n\n\n\n\nAboutComponent \n\nAboutComponent \n\nAboutComponent  -->\n\nLazyModule->AboutComponent \n\n\n\n\n\nLazyRoutingModule\n\nLazyRoutingModule\n\nLazyModule -->\n\nLazyRoutingModule->LazyModule\n\n\n\n\n\nThreeWordsService\n\nThreeWordsService\n\nLazyModule -->\n\nThreeWordsService->LazyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/lazy/lazy.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            LazyComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ThreeWordsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LazyRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AboutComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // https://malcoded.com/posts/angular-fundamentals-modules/ is good\n\nimport { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'  // vs. BrowserModule that App imports\n// import { RouterModule } from '@angular/router'\n\nimport { LazyRoutingModule } from './lazy-routing.module';\nimport {LazyComponent} from \"./lazy.component\";\n\nimport { ThreeWordsService } from './shared/services/'\nimport { AboutComponent } from './about/about.component';\n\n@NgModule({\n  declarations: [\n    AboutComponent,\n    LazyComponent\n    //, ThreeWordsService\n  ],\n  imports: [\n    CommonModule,\n    LazyRoutingModule\n    /*\n      RouterModule.forChild([\n        //{path: '', component: ThreeWordsService},\n        { path: 'about', component: AboutComponent }\n      ])\n    */\n  ],\n  providers: [ThreeWordsService],\n  exports: [\n    //ThreeWordsService,\n    AboutComponent\n  ]\n})\n\n\nexport class LazyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LazyRoutingModule.html":{"url":"modules/LazyRoutingModule.html","title":"module - LazyRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LazyRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/lazy/lazy-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\n\nimport { AboutComponent } from './about/about.component';\nimport { NgModule } from '@angular/core';\n\n//import { BlogDetailsComponent } from '../blog-details/blog-details.component';\n\nconst routes: Routes = [\n  { path: '', component: AboutComponent },\n  //{ path: 'blog-details', component: BlogDetailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class LazyRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Deserialize\n                            \n                            \n                                Serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorage: LocalStorage, storageMap: StorageMap, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/local-storage.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                    LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageMap\n                                                  \n                                                        \n                                                                        StorageMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Deserialize\n                        \n                    \n                \n            \n            \n                \nDeserialize(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/local-storage.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'RangerTrax'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Serialize\n                        \n                    \n                \n            \n            \n                \nSerialize(name: string, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/local-storage.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'RangerTrax'\n                                    \n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/local-storage.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, mergeMap, toArray } from 'rxjs/operators';\nimport { LocalStorage, StorageMap, JSONSchema } from '@ngx-pwa/local-storage';  // https://github.com/cyrilletuzi/angular-async-local-storage\nimport { JsonPipe } from '@angular/common';\nimport { DataService } from 'src/app/shared/services'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  data$: Observable\n\n  constructor(\n    private localStorage: LocalStorage,\n    private storageMap: StorageMap,\n    private dataService: DataService\n  ) {\n    this.data$ = this.storageMap.set('RangerTrax', 'service');\n  }\n\n  Serialize(name: string = 'RangerTrax', payload: any) {\n\n    let jsonPayload = JSON.stringify(payload)\n    this.data$ = this.storageMap.set(name, jsonPayload); //payload?\n    /*\n    this.data$ = this.storageMap.set(name, 'service').pipe(\n        mergeMap(() => this.storageMap.get(name, { type: 'string' })),\n      );\n      */\n    // let user: User = { firstName: 'Henri', lastName: 'Bergson' };\n    // this.storage.set('user', user).subscribe(() => {});\n  }\n\n  Deserialize(name: string = 'RangerTrax') {\n    return JSON.parse(name)\n  }\n\n}\n\n\n// This service API follows the new standard kv-storage API, which is similar to the standard Map API, and close to the standard localStorage API, except it's based on RxJS Observables instead of Promises:\n/* class StorageMap {\n  // Write\n  set(index: string, value: any): Observable {}\n  delete(index: string): Observable {}\n  clear(): Observable {}\n\n  // Read (one-time)\n  get(index: string): Observable {}\n  get(index: string, schema: JSONSchema): Observable {}\n\n  // Observe\n  watch(index: string): Observable {}\n  watch(index: string, schema: JSONSchema): Observable {}\n\n  // Advanced\n  size: Observable;\n  has(index: string): Observable {}\n  keys(): Observable {}\n} */\n\n\n\n\n/*\n\nhttps://github.com/cyrilletuzi/angular-async-local-storage/discussions/840\n\n\n{@link https://scotch.io/tutorials/mvc-in-an-angular-world}\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observer } from 'rxjs';\n\nexport class NoteInfo {\n  id: number;\n  title: string;\n}\n\nexport class Note {\n  id: number;\n  title: string;\n  text: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NotesService {\n  private notes: Note[];\n  private nextId = 0;\n  private notesSubject = new BehaviorSubject([]);\n\n  constructor() {\n    this.notes = JSON.parse(localStorage.getItem('notes')) || [];\n    for (const note of this.notes) {\n      if (note.id >= this.nextId) this.nextId = note.id+1;\n    }\n    this.update();\n  }\n\n  subscribe(observer: Observer) {\n    this.notesSubject.subscribe(observer);\n  }\n\n  addNote(title: string, text: string): Note {\n    const note = {id: this.nextId++, title, text};\n    this.notes.push(note);\n    this.update();\n    return note;\n  }\n\n  getNote(id: number): Note {\n    const index = this.findIndex(id);\n    return this.notes++[++index];\n  }\n\n  updateNote(id: number, title: string, text: string) {\n    const index = this.findIndex(id);\n    this.notes++[++index] = {id, title, text};\n    this.update();\n  }\n\n  deleteNote(id: number) {\n    const index = this.findIndex(id);\n    this.notes.splice(index, 1);\n    this.update();\n  }\n\n  private update() {\n    localStorage.setItem('notes', JSON.stringify(this.notes));\n    this.notesSubject.next(this.notes.map(\n      note => ({id: note.id, title: note.title})\n    ));\n  }\n\n  private findIndex(id: number): number {\n    for (let i=0; i;\n\n// For test():\ngetItem$!: Observable;\nschemaError$!: Observable;\nremoveItem$!: Observable;\nclear: string | null = 'hello world';\nsize$!: Observable;\nlength$!: Observable;\nkeys$!: Observable;\nhas$!: Observable;\nservice$!: Observable;\n\ntest2() {\n  // testbed\n\n  this.localStorage.setItem('clear', 'testyyyyyy').pipe(\n    mergeMap(() => this.localStorage.clear()),\n    mergeMap(() => this.localStorage.getItem('clear', { type: 'string' })),\n  ).subscribe((result: string | null) => {\n\n    /* Waiting for the `.clear()` to be done before other operations,\n     * as all operations are asynchronous, `.clear()` could interfer with the other tests * /\n\n    this.clear = result;\n    //this.localStorage.clear();\n    console.log(\"IndexedDB Cleared at \", Date());\n\n    this.mkrSize$ = this.localStorage.setItem('rngr_MarkerSize', '10').pipe(\n      mergeMap(() => this.localStorage.setItem('rngr_MarkerSize2', '5')),\n      mergeMap(() => this.localStorage.length),\n    );\n\n    this.keys$ = this.storageMap.set('rngr_MarkerColor', 'red').pipe(\n      mergeMap(() => this.storageMap.keys()),\n      toArray(),\n    );\n\n    /*\n      // Supply default value on read error:\n      this.storage.get('color').pipe(\n          catchError(() => of('red')),\n        ).subscribe((result) => { });\n\n        * /\n\n    this.has$ = this.localStorage.setItem('rngr_Team', 'TeamBlue').pipe(\n      mergeMap(() => this.storageMap.has('rngr_Team')),\n    );\n  });\n}\n\ntest() {\n  // Original test code fromm Demo application. Don't alter code below, or matching code in settings.component.html\n  const schema: JSONSchema = {\n    type: 'object',\n    properties: {\n      title: { type: 'string' },\n    },\n    required: ['title'],\n  };\n\n  // Test functionality from original demo app...\n  this.localStorage.setItem('clear', 'testyyyyyy').pipe(\n    mergeMap(() => this.localStorage.clear()),\n    mergeMap(() => this.localStorage.getItem('clear', { type: 'string' })),\n  ).subscribe((result: string | null) => {\n\n    /* Waiting for the `.clear()` to be done before other operations,\n     * as all operations are asynchronous, `.clear()` could interfer with the other tests * /\n\n    this.clear = result;\n\n    this.getItem$ = this.localStorage.setItem('getItemTest', { title: 'hello world' }).pipe(\n      mergeMap(() => this.localStorage.getItem('getItemTest', schema)),\n    );\n\n    this.schemaError$ = this.localStorage.setItem('schemaError', { wrong: 'test' }).pipe(\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument\n      mergeMap(() => this.localStorage.getItem('schemaError', schema as any)),\n      catchError(() => of('schema error')),\n    );\n\n    this.removeItem$ = this.localStorage.setItem('removeItem', 'test').pipe(\n      mergeMap(() => this.localStorage.removeItem('removeItem')),\n      mergeMap(() => this.localStorage.getItem('removeItem', { type: 'string' })),\n    );\n\n    this.length$ = this.localStorage.setItem('size1', 'test').pipe(\n      mergeMap(() => this.localStorage.setItem('size2', 'test')),\n      mergeMap(() => this.localStorage.length),\n    );\n\n    this.keys$ = this.storageMap.set('keys', 'test').pipe(\n      mergeMap(() => this.storageMap.keys()),\n      toArray(),\n    );\n\n    this.has$ = this.localStorage.setItem('has', 'test').pipe(\n      mergeMap(() => this.storageMap.has('has')),\n    );\n\n    this.service$ = this.dataService.data$;\n\n  });\n\n}\n*/\n\n\n//////////////////////////////////////////////////////////////////////////\n\n\n\n/*\n  // Alternatives:\n    https://blog.briebug.com/blog/managing-local-storage-in-angular\n    https://stackblitz.com/edit/local-storage-subject-as-service-j9qe28?file=src%2Fapp%2Flocal-storage.service.ts\n    https://github.com/gsklee/ngStorage\n    https://wicg.github.io/kv-storage/\n\n\n  // Following from: https://github.com/cyrilletuzi/angular-async-local-storage\n\n  // Alternative to the following is in ./data.service.ts\n  @Injectable()\n  export class SettingsService {\n    constructor(private storage: StorageMap) {}\n  }\n\n  // Write data\n  let user: User = { firstName: 'Henri', lastName: 'Bergson' };\n  this.storage.set('user', user).subscribe(() => {});\n\n  // Delete data\n  this.storage.delete('user').subscribe(() => {}); // Delete 1 item\n  this.storage.clear().subscribe(() => {}); // Delete ALL data!!!\n\n  // Read data (does NOT refresh if data changes)\n  // See https://github.com/cyrilletuzi/angular-async-local-storage/blob/main/docs/WATCHING.md to watch changes\n  this.storage.get('user').subscribe((user) => {\n    console.log(user);\n  });\n\n  // Not finding an item is not an error, it succeeds but returns undefined:\n  this.storage.get('notexisting').subscribe((data) => {\n    data; // undefined\n  });\n\n  // Client side data is NOT secure: https://github.com/cyrilletuzi/angular-async-local-storage/blob/main/docs/VALIDATION.md\n  // Use a json schema to verify the data structure\n  this.storage.get('test', { type: 'string' }).subscribe({\n    next: (user) => { /* Called if data is valid or `undefined` * / },\n    error: (error) => { /* Called if data is invalid * / },\n  });\n\n  // NO need to unsubscribe: the Observable autocompletes (like in the Angular HttpClient service).\n  // You DO need to subscribe, even if you don't have something specific to do after writing in storage (because it's how RxJS Observables work).\n\n  // Catch potential errors\n  this.storage.set('color', 'red').subscribe({\n    next: () => {},\n    error: (error) => {},\n  });\n\n  // Supply default value on read error:\n  import { of } from 'rxjs';\n  //import { catchError } from 'rxjs/operators';\n  this.storage.get('color').pipe(\n    catchError(() => of('red')),\n  ).subscribe((result) => {});\n\n  // Possible errors:\n  // https://github.com/cyrilletuzi/angular-async-local-storage/blob/main/docs/ERRORS.md\n\n  // This lib also provides a Map-like API for advanced operations:\n  //  .keys()\n  //  .has(key)\n  //  .size\n  // More at: https://github.com/cyrilletuzi/angular-async-local-storage/blob/main/docs/MAP_OPERATIONS.md\n\n  // Avoid collisions with other apps with prefixing:\n  // https://github.com/cyrilletuzi/angular-async-local-storage/blob/main/docs/COLLISION.md\n\n  // Store any value, without worrying about serializing. But storing null or undefined makes no sense and can cause issues in some browsers, so the item will be removed instead,\n  //  you should stick to JSON data, ie. primitive types, arrays and literal objects. Date, Map, Set, Blob and other special structures can cause issues in some scenarios.\n  // https://github.com/cyrilletuzi/angular-async-local-storage/blob/main/docs/SERIALIZATION.md\n}\n*/\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogComponent.html":{"url":"components/LogComponent.html","title":"component - LogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/log/log.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rangertrak-log\n            \n\n            \n                styleUrls\n                ./log.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./log.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                log\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dbug_unused\n                            \n                            \n                                logEvent\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/log/log.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dbug_unused\n                        \n                    \n                \n            \n            \n                \ndbug_unused(msg: string, alerts)\n                \n            \n\n\n            \n                \n                    Defined in src/app/log/log.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    alerts\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logEvent\n                        \n                    \n                \n            \n            \n                \nlogEvent(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/log/log.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/log/log.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.document.getElementById(\"log\")\n                    \n                \n                    \n                        \n                                Defined in src/app/log/log.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Component, Inject, OnInit } from '@angular/core'\n//import { Event } from '@angular/animations'\n//import { File } from '@ionic-native/file/ngx';\n\nimport { SettingsService } from \"../shared/services\"\nimport { Utility } from \"../shared\"\n\n@Component({\n  selector: 'rangertrak-log',\n  templateUrl: './log.component.html', //'home.page.html'\n  styleUrls: ['./log.component.scss'] //, 'home.page.scss']\n})\nexport class LogComponent { //implements OnInit\n\n  log = this.document.getElementById(\"log\")\n\n\n  //constructor(public file: File) { }\n  constructor(\n    @Inject(DOCUMENT) private document: Document) {\n\n  }\n  // src/app/log/log.component.ts:23:22 - error NG2003: No suitable injection token for parameter 'file' of class 'LogComponent'.\n  // Consider using the @Inject decorator to specify an injection token.\n\n  ngOnInit(): void {\n\n  }\n\n  // log event in the console\n  logEvent(msg: string) {\n    if (this.log === null) { throw (\"unable to find log...\") }\n    let dt = new Date()\n    let time = Utility.zeroFill(dt.getHours(), 2) + \":\" + Utility.zeroFill(dt.getMinutes(), 2) + \":\" + Utility.zeroFill(dt.getSeconds(), 2) + \":\" + Utility.zeroFill(dt.getMilliseconds(), 4)\n    this.log.textContent += time + \"-  &nbsp;&nbsp;\" + msg + \"\\n\"\n    var ot = this.log.scrollHeight - this.log.clientHeight\n    if (ot > 0) this.log.scrollTop = ot\n  }\n\n  dbug_unused(msg: string, alerts = false) {\n    let dt = new Date()\n    let time = Utility.zeroFill(dt.getHours(), 2) + \":\" + Utility.zeroFill(dt.getMinutes(), 2) + \":\" + Utility.zeroFill(dt.getSeconds(), 2) + \":\" + Utility.zeroFill(dt.getMilliseconds(), 4)\n    let dbugLog = time + \"-  &nbsp;&nbsp;\" + msg + \"\" + this.log?.innerHTML\n    this.log!.innerHTML = dbugLog\n    // TODO: Only if settings say to do this!\n    // console.log(\"RangerTrak: \" + dbugLog); // Convert dbugLog from HTML to plain text...\n    if (alerts == true) {\n      alert(\"Alert! \" + time + \"-  &nbsp;&nbsp;\" + msg);\n      //$('#alerts').fadeIn().delay(2500).fadeOut();\n    }\n  }\n}\n\n    \n\n    \n        Log\n\nEvent information log\n\nExport Data\n\n    \n\n    \n                \n                    ./log.component.scss\n                \n                body\n{\n\tfont-family: arial, helvetica, freesans, sans-serif;\n\tfont-size: 100%;\n\tcolor: #333;\n\tbackground-color: #ddd;\n}\n\nh1\n{\n\tfont-size: 1.5em;\n\tfont-weight: normal;\n\tmargin: 0;\n}\n\npre\n{\n\theight: 80vh;\n\tfont-family: monospace;\n\tfont-size: 1em;\n\tpadding: 2px 5px;\n\tcolor: rgb(57, 34, 161);\n\tbackground-color: rgb(226, 238, 156);\n\tborder: 1px solid #030;\n\tborder-radius: 4px;\n\toverflow: auto;\n}\n\nbutton {\n  margin-right: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'LogEvent information logExport Data'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'rangertrak-about'},{'name': 'AlertsComponent', 'selector': 'rangertrak-alerts'},{'name': 'AppComponent', 'selector': 'rangertrak-root'},{'name': 'ColorEditor', 'selector': 'editor-cell'},{'name': 'EntryComponent', 'selector': 'rangertrak-entry'},{'name': 'FieldReportsComponent', 'selector': 'rangertrak-field-reports'},{'name': 'FooterComponent', 'selector': 'rangertrak-footer'},{'name': 'GmapComponent', 'selector': 'rangertrak-gmap'},{'name': 'IconComponent', 'selector': 'icon'},{'name': 'LazyComponent', 'selector': 'lazy'},{'name': 'LmapComponent', 'selector': 'rangertrak-lmap'},{'name': 'LogComponent', 'selector': 'rangertrak-log'},{'name': 'MoodEditor', 'selector': 'editor-cell'},{'name': 'MoodRenderer', 'selector': 'mood-cell'},{'name': 'NavbarComponent', 'selector': 'rangertrak-navbar'},{'name': 'RangersComponent', 'selector': 'rangertrak-rangers'},{'name': 'SettingsComponent', 'selector': 'rangertrak-settings'},{'name': 'X404Component', 'selector': 'rangertrak-x404'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Map.html":{"url":"classes/Map.html","title":"class - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/map.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                nextId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                display\n                            \n                            \n                                    Abstract\n                                initMap\n                            \n                            \n                                onMapClick\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/map.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/map.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/map.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/map.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        nextId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/map.ts:31\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        display\n                        \n                    \n                \n            \n            \n                \n                    \n                    display()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/map.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        initMap\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/map.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMapClick\n                        \n                    \n                \n            \n            \n                \nonMapClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/map.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/map.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as C from \"./coordinate\"\n\nimport { Injectable, OnInit } from '@angular/core';\nimport { JSONSchema, LocalStorage, StorageMap } from '@ngx-pwa/local-storage';\nimport { Observable, of } from 'rxjs';\nimport { catchError, mergeMap, toArray } from 'rxjs/operators';\n\nexport enum MapType {\n  Google,\n  ESRI_Leaflet\n}\n\nexport interface LayerType {\n  id: number\n  url: string,\n  id2: string,\n  attribution: string\n}\n\n/*\n  // Interface are general, lightweight vs. abstract classes as special-purpose/feature-rich (pg 96, Programming Typescript)\n  export interface IMap {\n    type: MapType,\n    layers: LayerType\n    initMap():void\n    displayBeautifulMap(num:number) :void\n    }\n*/\n\nexport abstract class Map {\n  static nextId = 1;\n  id: Number;\n  name: string;\n  date: Date;\n\n  constructor(name: string) {\n    this.id = Map.nextId++; // TODO: OK if user restarts app during SAME mission #?\n    this.date = new Date();\n    this.name = name;\n\n    // add validation code here?! or in forms code?\n\n    this.initMap()\n  }\n\n  toString(): string {\n    return \"Map name: \" + this.name +\n      \";; \"\n  }\n\n  abstract initMap(): void\n  abstract display(): void\n\n  onMapClick() { }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarkerService.html":{"url":"injectables/MarkerService.html","title":"injectable - MarkerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MarkerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/marker.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                labels\n                            \n                            \n                                stations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateFakeMarkerData\n                            \n                            \n                                makeCapitalCircleMarkers\n                            \n                            \n                                makeStationMarkers\n                            \n                            \n                                    Static\n                                scaledRadius\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, popupService: PopupService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/marker.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popupService\n                                                  \n                                                        \n                                                                        PopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateFakeMarkerData\n                        \n                    \n                \n            \n            \n                \ngenerateFakeMarkerData(markers: MarkerType[], num: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/marker.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    markers\n                                    \n                                                MarkerType[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        15\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeCapitalCircleMarkers\n                        \n                    \n                \n            \n            \n                \nmakeCapitalCircleMarkers(map: L.Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/marker.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                L.Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeStationMarkers\n                        \n                    \n                \n            \n            \n                \nmakeStationMarkers(map: L.Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/marker.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                L.Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        scaledRadius\n                        \n                    \n                \n            \n            \n                \n                    \n                    scaledRadius(val: number, maxVal: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/marker.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxVal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/marker.service.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/data/VashonFireStations.geojson'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/marker.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import * as L from 'leaflet';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { PopupService } from './popup.service';\n\nexport type MarkerType = {\n  lat: number,\n  lng: number,\n  label: string,\n  draggable: boolean\n}\n\n@Injectable({providedIn: 'root'})\nexport class MarkerService {\n  stations: string = '/assets/data/VashonFireStations.geojson';\n\n  constructor(private http: HttpClient, private popupService: PopupService) {\n  }\n\n  static scaledRadius(val: number, maxVal: number): number {\n    return 20 * (val / maxVal);\n  }\n\n  makeStationMarkers(map: L.Map): void {\n    this.http.get(this.stations).subscribe((res: any) => {\n      for (const c of res.features) {\n        const lat = c.geometry.coordinates[0];\n        const lon = c.geometry.coordinates[1];\n        const marker = L.marker([lat, lon]);\n\n        marker.addTo(map);\n      }\n    });\n  }\n\n  makeCapitalCircleMarkers(map: L.Map): void {\n    this.http.get(this.stations).subscribe((res: any) => {\n\n      const maxPop = Math.max(...res.features.map((x: { properties: { population: number; }; }) => x.properties.population), 0);\n\n      for (const c of res.features) {\n        const lat = c.geometry.coordinates[0];\n        const lon = c.geometry.coordinates[1];\n        const circle = L.circleMarker([lat, lon], {\n          radius: MarkerService.scaledRadius(c.properties.population, maxPop)\n        });\n\n        circle.bindPopup(this.popupService.makeStationPopup(c.properties));\n\n        circle.addTo(map);\n      }\n    });\n  }\n\n  labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  generateFakeMarkerData(markers:MarkerType[], num: number = 15) {\n    console.log(\"Generating \" + num + \" more rows of FAKE field reports!\")\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\n\n//import { MDCBanner } from '@angular/material/banner';\n\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkAccordionModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    ClipboardModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    // MDCBanner,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule\n  ]\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Mission.html":{"url":"classes/Mission.html","title":"class - Mission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Mission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/mission.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                begDate\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Static\n                                nextId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addOpPeriod\n                            \n                            \n                                listOpPeriods\n                            \n                            \n                                load\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/mission.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        begDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/mission.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/mission.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/mission.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        nextId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/mission.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addOpPeriod\n                        \n                    \n                \n            \n            \n                \naddOpPeriod(opPeriod: OpPeriod)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/mission.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opPeriod\n                                    \n                                                OpPeriod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listOpPeriods\n                        \n                    \n                \n            \n            \n                \nlistOpPeriods()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/mission.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/mission.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/mission.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { JSONSchema, LocalStorage, StorageMap } from '@ngx-pwa/local-storage';\n\n\nimport { FaStackItemSizeDirective } from '@fortawesome/angular-fontawesome';\nimport { OpPeriod } from './op-period';\n\n//@Injectable({  providedIn: 'root' })\n\nexport class Mission {\n\n  static nextId = 1;\n  id: Number;\n  begDate: Date;\n  // endDate: Date;  // Who or when does this get set: maybe just have a get last recorded date?\n  //opPeriods:  Array;\n  //opPeriods2: OpPeriod[] = null;\n\n\n  constructor (\n    public name: string,\n    // Need to verify this is a unique name?\n    ) {\n      this.id = Mission.nextId++;\n      this.begDate = new Date();\n    }\n\n    addOpPeriod(opPeriod: OpPeriod) {\n      //this.opPeriods.push(...items, opPeriod);\n    }\n\n    listOpPeriods() {\n      ; // return OpPeriod[]\n    }\n\n    // Save to disk or ...\n    serialize(name: string) {\n      ;\n    }\n\n    load(name: string) {\n      ;\n    }\n\n  }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoodEditor.html":{"url":"components/MoodEditor.html","title":"component - MoodEditor","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MoodEditor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/mood-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ICellEditorAngularComp\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                editor-cell\n            \n\n            \n                styleUrls\n                ./mood-editor-component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mood-editor-component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                container\n                            \n                            \n                                    Public\n                                happy\n                            \n                            \n                                    Private\n                                params\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agInit\n                            \n                            \n                                getValue\n                            \n                            \n                                isPopup\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onClick\n                            \n                            \n                                onKeyDown\n                            \n                            \n                                setHappy\n                            \n                            \n                                toggleMood\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        agInit\n                        \n                    \n                \n            \n            \n                \nagInit(params: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/mood-editor.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/mood-editor.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPopup\n                        \n                    \n                \n            \n            \n                \nisPopup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/mood-editor.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/mood-editor.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(happy: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/mood-editor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    happy\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyDown\n                        \n                    \n                \n            \n            \n                \nonKeyDown(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/mood-editor.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHappy\n                        \n                    \n                \n            \n            \n                \nsetHappy(happy: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/mood-editor.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    happy\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMood\n                        \n                    \n                \n            \n            \n                \ntoggleMood()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/mood-editor.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewContainerRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('container', {read: ViewContainerRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/settings/mood-editor.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        happy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/mood-editor.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/mood-editor.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ICellEditorAngularComp } from 'ag-grid-angular';\n\n\n// TODO: Based on boolean value for icons: we need a selection from a panel of icons...\n@Component({\n  selector: 'editor-cell',\n  templateUrl: './mood-editor-component.html',\n  styleUrls: ['./mood-editor-component.scss'],\n})\nexport class MoodEditor implements ICellEditorAngularComp, AfterViewInit {\n  private params: any;\n\n  @ViewChild('container', { read: ViewContainerRef })\n  public container!: ViewContainerRef;\n  public happy = false;\n\n  // dont use afterGuiAttached for post gui events - hook into ngAfterViewInit instead for this\n  ngAfterViewInit() {\n    window.setTimeout(() => {\n      this.container.element.nativeElement.focus();\n    });\n  }\n\n  agInit(params: any): void {\n    this.params = params;\n    this.setHappy(params.value === 'Happy');\n  }\n\n  getValue(): any {\n    return this.happy ? 'Happy' : 'Sad';\n  }\n\n  isPopup(): boolean {\n    return true;\n  }\n\n  setHappy(happy: boolean): void {\n    this.happy = happy;\n  }\n\n  toggleMood(): void {\n    this.setHappy(!this.happy);\n  }\n\n  onClick(happy: boolean) {\n    this.setHappy(happy);\n    this.params.api.stopEditing();\n  }\n\n  onKeyDown(event: any): void {\n    const key = event.key;\n    if (\n      key === 'ArrowLeft' || // left\n      key == 'ArrowRight'\n    ) {\n      // right\n      this.toggleMood();\n      event.stopPropagation();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./mood-editor-component.scss\n                \n                .mood {\n  border-radius: 15px;\n  border: 1px solid grey;\n  background: #e6e6e6;\n  padding: 15px;\n  text-align: center;\n  display: inline-block;\n  outline: none;\n}\n\n.default {\n  padding-left: 10px;\n  padding-right: 10px;\n  border: 1px solid transparent;\n  padding: 4px;\n}\n\n.selected {\n  padding-left: 10px;\n  padding-right: 10px;\n  border: 1px solid lightgreen;\n  padding: 4px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'rangertrak-about'},{'name': 'AlertsComponent', 'selector': 'rangertrak-alerts'},{'name': 'AppComponent', 'selector': 'rangertrak-root'},{'name': 'ColorEditor', 'selector': 'editor-cell'},{'name': 'EntryComponent', 'selector': 'rangertrak-entry'},{'name': 'FieldReportsComponent', 'selector': 'rangertrak-field-reports'},{'name': 'FooterComponent', 'selector': 'rangertrak-footer'},{'name': 'GmapComponent', 'selector': 'rangertrak-gmap'},{'name': 'IconComponent', 'selector': 'icon'},{'name': 'LazyComponent', 'selector': 'lazy'},{'name': 'LmapComponent', 'selector': 'rangertrak-lmap'},{'name': 'LogComponent', 'selector': 'rangertrak-log'},{'name': 'MoodEditor', 'selector': 'editor-cell'},{'name': 'MoodRenderer', 'selector': 'mood-cell'},{'name': 'NavbarComponent', 'selector': 'rangertrak-navbar'},{'name': 'RangersComponent', 'selector': 'rangertrak-rangers'},{'name': 'SettingsComponent', 'selector': 'rangertrak-settings'},{'name': 'X404Component', 'selector': 'rangertrak-x404'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoodEditor'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoodRenderer.html":{"url":"components/MoodRenderer.html","title":"component - MoodRenderer","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MoodRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/mood-renderer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ICellRendererAngularComp\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mood-cell\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                imgForMood\n                            \n                            \n                                    Private\n                                mood\n                            \n                            \n                                    Private\n                                params\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agInit\n                            \n                            \n                                refresh\n                            \n                            \n                                    Private\n                                setMood\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        agInit\n                        \n                    \n                \n            \n            \n                \nagInit(params: ICellRendererParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/mood-renderer.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            ICellRendererParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(params: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/mood-renderer.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setMood\n                        \n                    \n                \n            \n            \n                \n                    \n                    setMood(params: ICellRendererParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/mood-renderer.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            ICellRendererParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        imgForMood\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/mood-renderer.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mood\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/mood-renderer.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ICellRendererParams\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/mood-renderer.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\n\n@Component({\n  selector: 'mood-cell',\n  template: ``,\n})\nexport class MoodRenderer implements ICellRendererAngularComp {\n  private params!: ICellRendererParams;\n  private mood!: string;\n  public imgForMood!: string;\n\n  agInit(params: ICellRendererParams): void {\n    this.params = params;\n    this.setMood(params);\n  }\n\n  refresh(params: any): boolean {\n    this.params = params;\n    this.setMood(params);\n    return true;\n  }\n\n  private setMood(params: ICellRendererParams) {\n    this.mood = params.value;\n    this.imgForMood =\n      'https://www.ag-grid.com/example-assets/smileys/' +\n      (this.mood === 'Happy' ? 'happy.png' : 'sad.png');\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'rangertrak-about'},{'name': 'AlertsComponent', 'selector': 'rangertrak-alerts'},{'name': 'AppComponent', 'selector': 'rangertrak-root'},{'name': 'ColorEditor', 'selector': 'editor-cell'},{'name': 'EntryComponent', 'selector': 'rangertrak-entry'},{'name': 'FieldReportsComponent', 'selector': 'rangertrak-field-reports'},{'name': 'FooterComponent', 'selector': 'rangertrak-footer'},{'name': 'GmapComponent', 'selector': 'rangertrak-gmap'},{'name': 'IconComponent', 'selector': 'icon'},{'name': 'LazyComponent', 'selector': 'lazy'},{'name': 'LmapComponent', 'selector': 'rangertrak-lmap'},{'name': 'LogComponent', 'selector': 'rangertrak-log'},{'name': 'MoodEditor', 'selector': 'editor-cell'},{'name': 'MoodRenderer', 'selector': 'mood-cell'},{'name': 'NavbarComponent', 'selector': 'rangertrak-navbar'},{'name': 'RangersComponent', 'selector': 'rangertrak-rangers'},{'name': 'SettingsComponent', 'selector': 'rangertrak-settings'},{'name': 'X404Component', 'selector': 'rangertrak-x404'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoodRenderer'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rangertrak-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faMapMarkedAlt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                Search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Search\n                        \n                    \n                \n            \n            \n                \nSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faMapMarkedAlt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faMapMarkedAlt\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { faMapMarkedAlt } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'rangertrak-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  faMapMarkedAlt = faMapMarkedAlt;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n Search() {\n   console.log (\"Search is unimplemented yet\")\n }\n}\n\n    \n\n    \n        \n\n\n  \n    \n    \n  \n  \n\n  \n    Home\n    Google\n    Leaflet\n    Reports\n    Rangers\n    Settings\n    About\n    Log\n  \n\n   \n\n  \n    \n    Go\n     (Future) Search\n  \n\n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                  .active {\n    font-weight: bold;\n    font-style: italic;\n    // background-color: rgb(137, 208, 221);\n  }\n  .main-nav {\n    display: flex;\n    height: 2em;\n    background: rgb(145, 195, 204);\n    color: white;\n    border-radius: 3px;\n    padding-top: 0.5em;\n    padding-bottom: 0.15em;\n    font-family:'Arima Madurai', sans-serif;\n    font-size: 1.2em;\n  }\n  .main-nav > ul {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex: 8;\n  }\n  .main-nav li {\n    font-style: un;\n    margin-right: 1em;\n  }\n  .main-nav > form {\n    display: flex;\n    justify-content: flex-end;\n    flex: 1;\n  }\n  .git {\n    //align-self: flex-end;\n    position:absolute;\n    right: 10px;\n    //background-color: aquamarine;\n    //display: flex;\n    //justify-content: right;\n    //float: right;\n    //clear: both;\n  }\n  #git {\n    height: 1.5em;\n    margin-right: 2px;\n  }\n  .main-nav input {\n    visibility: hidden;\n    height: 1.8em;\n    flex: 1;\n    margin-right: 3px;\n  }\n  .main-nav button {\n    visibility: hidden;\n    background: white;\n    border: 0;\n    border-radius: .8em;\n    color: orangered;\n    height: 1.8em;\n    padding: 0 1em;\n    margin: 0 1em;\n  }\n  .main-nav a {\n    margin-left: 5px;\n    margin-right: 5px;\n    text-decoration:none;\n    vertical-align: middle;\n  }\n\n  .main-nav a:hover {\n    color: rgb(165, 89, 228);\n    //background-color: yellow;\n  }\n\n  // TODO: Doesn't collapse into a hamburger!!!\n @media screen and (max-width: 575px) {\n   .main-nav {\n     flex-direction: column;\n   }\n   .main-nav ul {\n     flex-direction: row; /* Change this to 'column' to stack the links */\n     margin-bottom: 0.1em;\n   }\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Home    Google    Leaflet    Reports    Rangers    Settings    About    Log               Go     (Future) Search  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'rangertrak-about'},{'name': 'AlertsComponent', 'selector': 'rangertrak-alerts'},{'name': 'AppComponent', 'selector': 'rangertrak-root'},{'name': 'ColorEditor', 'selector': 'editor-cell'},{'name': 'EntryComponent', 'selector': 'rangertrak-entry'},{'name': 'FieldReportsComponent', 'selector': 'rangertrak-field-reports'},{'name': 'FooterComponent', 'selector': 'rangertrak-footer'},{'name': 'GmapComponent', 'selector': 'rangertrak-gmap'},{'name': 'IconComponent', 'selector': 'icon'},{'name': 'LazyComponent', 'selector': 'lazy'},{'name': 'LmapComponent', 'selector': 'rangertrak-lmap'},{'name': 'LogComponent', 'selector': 'rangertrak-log'},{'name': 'MoodEditor', 'selector': 'editor-cell'},{'name': 'MoodRenderer', 'selector': 'mood-cell'},{'name': 'NavbarComponent', 'selector': 'rangertrak-navbar'},{'name': 'RangersComponent', 'selector': 'rangertrak-rangers'},{'name': 'SettingsComponent', 'selector': 'rangertrak-settings'},{'name': 'X404Component', 'selector': 'rangertrak-x404'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpPeriod.html":{"url":"classes/OpPeriod.html","title":"class - OpPeriod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpPeriod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/op-period.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                begDate\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Static\n                                nextId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listFieldReport\n                            \n                            \n                                listRangers\n                            \n                            \n                                load\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/op-period.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        begDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/op-period.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/op-period.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/op-period.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        nextId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/op-period.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listFieldReport\n                        \n                    \n                \n            \n            \n                \nlistFieldReport()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/op-period.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listRangers\n                        \n                    \n                \n            \n            \n                \nlistRangers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/op-period.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/op-period.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/op-period.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { JSONSchema, LocalStorage, StorageMap } from '@ngx-pwa/local-storage';\nimport { Observable, of } from 'rxjs';\nimport { catchError, mergeMap, toArray } from 'rxjs/operators';\n\n//import { Ranger, FieldReport } from './services/';\n\n//@Injectable({  providedIn: 'root' })\n\nexport class OpPeriod {\n\n  static nextId = 1;\n  id: Number;\n  begDate: Date;\n  // endDate: Date;  // Who or when does this get set: maybe just have a get last recorded date?\n  //ranger: Ranger[];\n  //fieldReports: FieldReport[];\n\n\n  constructor (\n    public name: string,\n    // Need to verify this is a unique name?\n    ) {\n      this.id = OpPeriod.nextId++;\n      this.begDate = new Date();\n    }\n\n    //addParticipant(participant: Ranger) { }\n\n    listRangers() {\n      ;\n    }\n\n    // addFieldReport(fieldReport: FieldReport) { }\n\n    listFieldReport() {  // iterator here?\n      ;\n    }\n\n    // Save to disk or ...\n    serialize(name: string) {\n      ;\n    }\n\n    load(name: string) {\n      ;\n    }\n\n  }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlusCode.html":{"url":"classes/PlusCode.html","title":"class - PlusCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlusCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/plus-code.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chkPCodes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chkPCodes\n                        \n                    \n                \n            \n            \n                \nchkPCodes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/plus-code.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {  CodeArea, OpenLocationCode as PC, GoogleGeocode } from '../shared/'\n\n// Or use Open-Location-code.tx instead???\nexport class PlusCode {\n\n\n\n  chkPCodes() {\n    // https://developer.what3words.com/tutorial/ux-guidelines\n    // https://developer.what3words.com/tutorial/javascript\n    // https://developer.what3words.com/tutorial/displaying-the-what3words-grid-on-a-google-map\n\n    // #region +Code doc\n    // https://plus.codes/developers\n    // https://github.com/google/open-location-code/wiki\n    /*\n       Plus Codes refer to variable-sized rectangles - NOT a point! (The regions do have center points however.)\n\n       Only 20 characters are valid: \"23456789CFGHJMPQRVWX\"\n\n       Global RegEx: /(^|\\s)([23456789C][23456789CFGHJMPQRV][23456789CFGHJMPQRVWX]{6}\\+[23456789CFGHJMPQRVWX]{2,3})(\\s|$)/?i\n       This extracts (in capturing group 2) a global code at the start or end of a string, or enclosed with spaces, but not in the middle of a string.\n\n       Local RegEx: /(^|\\s)([23456789CFGHJMPQRVWX]{4,6}\\+[23456789CFGHJMPQRVWX]{2,3})(\\s|$)/?i\n\n       If the query matches, and the user has not entered any other text, then another location must be used to recover the original code. If you are displaying a map to the user, then use the current map center, pass it to the recoverNearest() method to get a global code, and then decode it as above.\n\n       If there is no map, you can use the device location. If you have no map and cannot determine the device location, a local code is not sufficient and you should display a message back to the user asking them to provide a town or city name or the full global code.\n\n       * * *\n\n       Open Location Codes are encodings of WGS84 latitude and longitude coordinates in degrees. Decoding a code returns an area, not a point. The area of a code depends on the length (longer codes are more precise with smaller areas). A two-digit code has height and width[height_width] of 20 degrees, and with each pair of digits added to the code, both height and width are divided by 20.\n\n       The first digit of the code identifies the row (latitude), and the second digit the column (longitude). Subsequent steps divide that area into a 20 x 20 grid, and use one digit to identify the row and another to identify the column.\n\n       If the query matches, and the user has not entered any other text, then another location must be used to recover the original code. If you are displaying a map to the user, then use the current map center, pass it to the recoverNearest() method to get a global code, and then decode it as above.\n\n       globalPCode = encode(latDD,longDD);  // Need locality/focus (within half a degree latitude and half a degree longitude, or ideally 1/4 degree, 25km at equator) pt to get local +code.\n\n       The shorten() method in the OLC library may remove 2, 4, 6 or even 8 characters, depending on how close the reference location is. Although all of these are valid, we recommend only removing the first 4 characters, so that plus codes have a consistent appearance.\n    */\n    // #endregion\n\n    //\n    let pCode = document.getElementById(\"addresses\")!.innerText //value;\n    console.log(\"chkPCodes got '\" + pCode + \"'\");\n    if (pCode.length) {\n\n      let result = this.getLatLngAndAddressFromPlaceID(pCode)\n      if (result.position) {\n        document.getElementById(\"addressLabel\")!.innerHTML = result.address\n        document.getElementById(\"lat\")!.innerHTML = result.position.lat\n        document.getElementById(\"long\")!.innerHTML = result.position.long\n      }\n\n\n            if (PC.isValid(pCode)) {\n              if (PC.isShort) {\n                pCode = PC.recoverNearest(pCode, SettingsService.Settings.defLat, SettingsService.Settings.defLong); //OpenLocationCode.recoverNearest\n              }\n\n              // Following needs a full (Global) code\n              let coord = this.decode(pCode); //OpenLocationCode.decode\n              console.log(\"chkPCodes got \" + pCode + \"; returned: lat=\" + coord.latitudeCenter + ', long=' + coord.longitudeCenter);\n\n              this.updateCoords(coord.latitudeCenter, coord.longitudeCenter);\n            }\n\n      else {\n        document.getElementById(\"addressLabel\")!.innerHTML = \" is Invalid  Try: \";\n        document.getElementById(\"pCodeGlobal\")!.innerHTML = SettingsService.Settings.defPlusCode;\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// https://github.com/tspoke/typescript-open-location-code\n// https://github.com/google/open-location-code\n\n/*\n\nFrom 4.2:\n\n\n                Plus Code\n\n// Set focus for 3 words, PlusCodes and center of displayed big map\n  var DEF_LAT = 47.4472;\n  var DEF_LONG = -122.4627;  // Vashon EOC!\n  var DEF_PCODE = 'CGWP+VV'; // '84VVCGWP+VW'is in the middle of the Pacific Ocean!!!; // or \"CGWP+VX Vashon, Washington\" = 47.447187,-122.462688\n  var defPCodeLabel = \" for Vashon, WA locale; Full code: \";\n  // Set form default\n\ndocument.getElementById(\"defPlusCode\").value = DEF_PCODE;\n//$(\"#defPlusCode\").value = DEF_PCODE;\n\nDEF_PCODE = document.getElementById(\"defPlusCode\").value;\n\n\n\nfunction  updateCoords(latDD, lngDD) {\n    dbug(\"New Coordinates: lat:\" + latDD + \"; lng:\" + lngDD);\n\n    document.getElementById(\"latitudeDD\").value = latDD;\n    document.getElementById(\"longitudeDD\").value = lngDD;\n\n    latDMS = DDToDMS(latDD, false);\n    document.getElementById(\"latitudeQ\").value = latDMS.dir;\n    document.getElementById(\"latitudeD\").value = latDMS.deg;\n    document.getElementById(\"latitudeM\").value = latDMS.min;\n    document.getElementById(\"latitudeS\").value = latDMS.sec;\n\n    lngDMS = DDToDMS(lngDD, true);\n    document.getElementById(\"longitudeQ\").value = lngDMS.dir;\n    document.getElementById(\"longitudeD\").value = lngDMS.deg;\n    document.getElementById(\"longitudeM\").value = lngDMS.min;\n    document.getElementById(\"longitudeS\").value = lngDMS.sec;\n\n    var pCode = encode(latDD, lngDD, 11); // OpenLocationCode.encode using default accuracy returns an INVALID +Code!!!\n    dbug(\"updateCoords: Encode returned PlusCode: \" + pCode);\n    var fullCode;\n    if (pCode.length!=0) {\n\n      if (isValid(pCode)) {\n        if (pCode.isShort) {\n          // Recover the full code from a short code:\n          fullCode = recoverNearest(pCode, DEF_LAT, DEF_LONG); //OpenLocationCode.recoverNearest\n        } else {\n          fullCode = pCode;\n          dbug(\"Shorten +Codes, Global:\" + fullCode + \", Lat:\" + DEF_LAT + \"; Long:\"+ DEF_LONG);\n          // Attempt to trim the first characters from a code; may return same value...\n          pCode = shorten(fullCode, DEF_LAT, DEF_LONG); //OpenLocationCode.shorten\n        }\n        dbug(\"New PlusCodes: \" + pCode + \"; Global: \" + fullCode);\n        //document.getElementById(\"addresses\").value = pCode;\n        //document.getElementById(\"addressLabel\").innerHTML = defPCodeLabel;\n        document.getElementById(\"pCodeGlobal\").innerHTML = \" &nbsp;&nbsp; +Code: \" + fullCode;\n      } else {\n        dbug(\"Invalid +PlusCode: \" + pCode);\n        document.getElementById(\"pCodeGlobal\").innerHTML = \" &nbsp;&nbsp; Unable to get +Code\"\n        //document.getElementById(\"addressLabel\").innerHTML = \"  is Invalid  Try: \";\n      }\n    }\n\n    //ToDO: Update 3 words too!\n   if (initialized) displaySmallMap(latDD, lngDD);\n }\n\n*/\n\n\n\nfunction PlusCode2() {\n  // #region +Code doc\n  // https://plus.codes/developers\n  // https://github.com/google/open-location-code/wiki\n  /*\n     Plus Codes refer to variable-sized rectangles - NOT a point! (The regions do have center points however.)\n\n     Only 20 characters are valid: \"23456789CFGHJMPQRVWX\"\n\n     Global RegEx: /(^|\\s)([23456789C][23456789CFGHJMPQRV][23456789CFGHJMPQRVWX]{6}\\+[23456789CFGHJMPQRVWX]{2,3})(\\s|$)/?i\n     This extracts (in capturing group 2) a global code at the start or end of a string, or enclosed with spaces, but not in the middle of a string.\n\n     Local RegEx: /(^|\\s)([23456789CFGHJMPQRVWX]{4,6}\\+[23456789CFGHJMPQRVWX]{2,3})(\\s|$)/?i\n\n     If the query matches, and the user has not entered any other text, then another location must be used to recover the original code. If you are displaying a map to the user, then use the current map center, pass it to the recoverNearest() method to get a global code, and then decode it as above.\n\n     If there is no map, you can use the device location. If you have no map and cannot determine the device location, a local code is not sufficient and you should display a message back to the user asking them to provide a town or city name or the full global code.\n\n     * * *\n\n     Open Location Codes are encodings of WGS84 latitude and longitude coordinates in degrees. Decoding a code returns an area, not a point. The area of a code depends on the length (longer codes are more precise with smaller areas). A two-digit code has height and width[height_width] of 20 degrees, and with each pair of digits added to the code, both height and width are divided by 20.\n\n     The first digit of the code identifies the row (latitude), and the second digit the column (longitude). Subsequent steps divide that area into a 20 x 20 grid, and use one digit to identify the row and another to identify the column.\n\n     If the query matches, and the user has not entered any other text, then another location must be used to recover the original code. If you are displaying a map to the user, then use the current map center, pass it to the recoverNearest() method to get a global code, and then decode it as above.\n\n     globalPCode = encode(latDD,longDD)  // Need locality/focus (within half a degree latitude and half a degree longitude, or ideally 1/4 degree, 25km at equator) pt to get local +code.\n\n     The shorten() method in the OLC library may remove 2, 4, 6 or even 8 characters, depending on how close the reference location is. Although all of these are valid, we recommend only removing the first 4 characters, so that plus codes have a consistent appearance.\n  */\n  // #endregion\n\n\n  //\n  let pCode = document.getElementById(\"addresses\")!.innerHTML\n  //MAIN.dbug(\"chkPCodes got '\" + pCode + \"'\")\n  if (pCode.length != 0) {\n      if (isValid(pCode)) {\n          if (pCode.isShort) {\n              pCode = recoverNearest(pCode, DEF_LAT, DEF_LONG) //OpenLocationCode.recoverNearest\n          }\n\n          // Following needs a full (Global) code\n          let coord = decode(pCode) //OpenLocationCode.decode\n          MAIN.dbug(\"chkPCodes got \" + pCode + \" returned: lat=\" + coord.latitudeCenter + ', long=' + coord.longitudeCenter)\n\n          updateCoords(coord.latitudeCenter, coord.longitudeCenter)\n      } else {\n          document.getElementById(\"addressLabel\").innerHTML = \" is Invalid  Try: \"\n          document.getElementById(\"pCodeGlobal\").innerHTML = DEF_PCODE\n      }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Point.html":{"url":"classes/Point.html","title":"class - Point","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Point\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/coordinate.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    age\n                                \n                                \n                                    FullName\n                                \n                                \n                                    fullName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_age: number, _firstName: string, _lastName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/coordinate.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _age\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        age\n                    \n                \n\n                \n                    \n                        getage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/coordinate.ts:23\n                                \n                            \n\n                \n                    \n                        setage(theAge: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/coordinate.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            theAge\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        FullName\n                    \n                \n\n                \n                    \n                        getFullName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/coordinate.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n\n                \n                    \n                        setfullName(name: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/coordinate.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        export enum DirEnum {\n  E = 'East',\n  W = 'West',\n  N = 'North',\n  S = 'South'\n}\nexport type DirType = 'E' | 'W' | 'N' | 'S'\n\nclass Point {\n  constructor(private _age: number,\n    private _firstName: string,\n    private _lastName: string) {\n  }\n\n  public get age() {\n    return this._age;\n  }\n\n  public set age(theAge: number) {\n    if (theAge = 200) {\n      throw new Error('The age is invalid');\n    }\n    this._age = theAge;\n  }\n\n  public get FullName(): string {\n    return `${this._firstName} ${this._lastName}`;\n  }\n\n  public set fullName(name: string) {\n    let parts = name.split(' ');\n    if (parts.length != 2) {\n      throw new Error('Invalid name format: first last');\n    }\n    this._firstName = parts[0];\n    this._lastName = parts[1];\n  }\n}\n\nexport class Coordinate {\n  constructor(private _lat: number, private _long: number) {\n    if (_lat  180)\n      throw new Error('latatude is over 180 or under -180 degrees.')\n    if (_long  180)\n      throw new Error('longitude is over 180 or under -180 degrees.')\n    //this.lat = lat;\n    //this.long = long;\n  }\n\n  toString(): string {\n    return \"lat: \" + this._lat +\n      \"; long: \" + this._long\n  }\n\n  public get Point() {\n    return (this._lat, this._long);\n  }\n\n  //toDMS(ptDD: PointDD) {  }\n\n  // Save to disk or ...\n  serialize(name: string) {\n    ;\n  }\n\n  load(name: string) {\n    ;\n  }\n}\n\n// REVIEW: Duplicate of one in Utility class...\nexport function strToLatLng(str: string) {\n  const latlngStr = str.split(\",\", 2);\n  return new google.maps.LatLng(parseFloat(latlngStr[0]), parseFloat(latlngStr[1]))\n}\n\n// Coord is a lat or lng in decimal degrees\nclass Coord {\n  constructor(public coord: number) {\n    try {\n      // TODO: Could map larger/smaller values using modulus\n      // coord = coord % 360.0\n      if (isNaN(coord)) throw \"Coordinate is not a number\"\n      if (coord  180) throw \"Coordinate over 180 degrees.\"\n      // MAIN.dbug(\"Coordinate passed range check...\")\n    }\n    catch (err: unknown) {\n      // MAIN.dbug(\"Bad Coordinate at Coord(): \" + err.message)\n    }\n  }\n  // Get object {deg:, min:, sec:, dir:}\n  // sec truncated to two digits (e.g. 3.14)\n  // dir returns S or N if lng = false (for latitudes)\n  // dir returns E or W if lng (longitude) = true\n  // N.B.: may not work for angles between -1° and 0°\n  // from www.stackoverflow.com/questions/5786025\n  /*\n  ToDMS(lng: boolean): CoordDMS {\n    return new CoordDMS(\n      this.coord \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Point-1.html":{"url":"classes/Point-1.html","title":"class - Point-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Point\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/point.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                lat\n                            \n                            \n                                    Public\n                                lng\n                            \n                            \n                                    Static\n                                Origin\n                            \n                            \n                                    Static\n                                Vashon\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lat: Coord, lng: Coord)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/point.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lat\n                                                  \n                                                        \n                                                                        Coord\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lng\n                                                  \n                                                        \n                                                                        Coord\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Coord\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/point.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lng\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Coord\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/point.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        Origin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                \n                    \n                        Default value : new Point(new Coord(0), new Coord(0))\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/point.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        Vashon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                \n                    \n                        Default value : new Point(new Coord(47.4472), new Coord(-122.4627))\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/point.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Point {\n  static Vashon: Point = new Point(new Coord(47.4472), new Coord(-122.4627))\n  static Origin: Point = new Point(new Coord(0), new Coord(0))\n\n  // Define static (or class) methods or properties directly to the constructor function, not the prototype object. E.g.,\n  //static PointDD.ORIGIN = new PointDD(0, 0)\n  //static PointDD.VASHON = new PointDD(47.4472, -122.4627) //EOC\n\n    constructor(public lat: Coord, public lng: Coord) { }\n  /*\n  constructor(lat: number, lng: number)\n  constructor(tWords: string)\n  return new Point(new Coord(10), new Coord(20))\n}\n// todo    constructor(latDMS: Coord, lngDMS: Coord)\nconstructor(public lat: Coord | number | string, public lng: Coord | number){\n  if (typeof lat == 'number')\n      this.lat = new Coord(lat)\n  if (typeof lng == 'number')\n      this.lng = new Coord(lng)\n\n  if (typeof lat != typeof lng)\n      MAIN.dbug(\"error!\")\n  else if (typeof lat == 'number' && typeof lng == 'number') {\n      this.lat = new Coord(lat)\n      this.lng = new Coord(lng)\n  }\n}\n  */\n\n  /*\n  ToDD(): Point {\n      return new Point(this.lat.dd, this.lng.dd)\n  }\n  ToDMS(): PointDMS {\n      return new PointDMS(this.lat.ToDMS(false), this.lng.ToDMS(true))\n  }\n  DistanceTo(that: Point): number {\n      let dx = this.lat.coord - that.lat.coord\n      let dy = this.lng.coord - that.lng.coord\n      return Math.sqrt(dx*dx + dy*dy)\n  }\n\n  toString() : string {\n      return \"[\" + this.lat + \", \" + this.lng + \"]\"\n  }\n\nclass PointDMS {\n\n  ToString() : string {\n      return \"[\" + this.lat + \", \" + this.lng + \"]\"\n  }\n*/\n}\n\n\n\n\n\n\n\n\n\n\n\n// https://www.rapidtables.com/convert/number/degrees-minutes-seconds-to-degrees.html\n// From: www.stackoverflow.com/questions/5970961\nexport function DMSToDD(dms: Point) {\n  if (!dms) {\n      return Number.NaN\n  }\n  //MAIN.dbug(\"DMSToDD: dir=\" + dms.dir + \" deg=\" + dms.deg + \" min=\" + dms.min + \" sec=\" + dms.sec)\n  let neg = 1.0\n  switch (dir) {\n      case \"s\":\n      case \"S\":\n      case \"w\":\n      case \"W\":\n          neg = -1.0\n          MAIN.dbug(\"DMSToDD: Negative\")\n  }\n  return (neg * (Number(dms.deg) + (dms.min / 60.0) + (dms.sec / 3600.0))).toFixed(6)\n}\n\n/*\n// https://www.rapidtables.com/convert/number/degrees-minutes-seconds-to-degrees.html\n// From: www.stackoverflow.com/questions/5970961\nfunction dmsToDeg (dms) {\nif (!dms) {\n    return Number.NaN\n}\nlet neg = dms.match(/(^\\s?-)|(\\s?[SW]\\s?$)/) != null ? -1.0 : 1.0\ndms = dms.replace(/(^\\s?-)|(\\s?[NSEW]\\s?)$/, '')\ndms = dms.replace(/\\s/g, '')\nlet parts = dms.match(/(\\d{1,3})[.,°d ]?\\s*(\\d{0,2})[']?(\\d{0,2})[.,]?(\\d{0,})(?:[\"]|[']{2})?/)\nif (parts == null) {\n    return Number.NaN\n}\n// parts:\n// 0 : degree\n// 1 : degree\n// 2 : minutes\n// 3 : secondes\n// 4 : fractions of seconde\nlet d = (parts[1] ? parts[1] : '0.0') * 1.0\nlet m = (parts[2] ? parts[2] : '0.0') * 1.0\nlet s = (parts[3] ? parts[3] : '0.0') * 1.0\nlet r = (parts[4] ? ('0.' + parts[4]) : '0.0') * 1.0\nlet dec = (d + (m / 60.0) + (s / 3600.0) + (r / 3600.0)) * neg\nreturn dec\n}\n*/\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PopupService.html":{"url":"injectables/PopupService.html","title":"injectable - PopupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PopupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/popup.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                makeStationPopup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/popup.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        makeStationPopup\n                        \n                    \n                \n            \n            \n                \nmakeStationPopup(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/popup.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as L from 'leaflet';\n\n@Injectable({providedIn: 'root'})\nexport class PopupService {\n\n    constructor() { }\n\n    makeStationPopup(data: any): string {\n      return `` +\n        `Station: ${ data.name }` +\n        `Address: ${ data.address }` +\n        `Population: ${ data.population }`\n    }\n  }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostService.html":{"url":"injectables/PostService.html","title":"injectable - PostService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/post.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                opts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/post.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/post.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        opts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/post.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable,debounceTime, map, of, tap, startWith } from 'rxjs'\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PostService {\n\n  constructor(private http: HttpClient) { }\n\n  opts = [];\n\n  getData() {\n    // Free fake API for testing and prototyping: https://jsonplaceholder.typicode.com/\n    return this.opts.length ?\n      of(this.opts) :\n      this.http.get('https://jsonplaceholder.typicode.com/users').pipe(tap(data => this.opts = data))\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RangerService.html":{"url":"injectables/RangerService.html","title":"injectable - RangerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RangerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/ranger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                excelData\n                            \n                            \n                                    Private\n                                localStorageRangerName\n                            \n                            \n                                    Private\n                                nextId\n                            \n                            \n                                observRangers$\n                            \n                            \n                                rangers\n                            \n                            \n                                    Private\n                                rangersSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddRanger\n                            \n                            \n                                deleteAllRangers\n                            \n                            \n                                deleteRanger\n                            \n                            \n                                DisplayRangers\n                            \n                            \n                                    Private\n                                findIndex\n                            \n                            \n                                getRanger\n                            \n                            \n                                GetRangers\n                            \n                            \n                                loadHardcodedRangers\n                            \n                            \n                                LoadRangersFromExcel\n                            \n                            \n                                LoadRangersFromExcel2\n                            \n                            \n                                LoadRangersFromJSON\n                            \n                            \n                                LoadRangersFromLocalStorage\n                            \n                            \n                                SortRangersByCallsign\n                            \n                            \n                                SortRangersByCallsign_unused\n                            \n                            \n                                subscribe\n                            \n                            \n                                UpdateLocalStorage\n                            \n                            \n                                updateRanger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/ranger.service.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        AddRanger\n                        \n                    \n                \n            \n            \n                \nAddRanger(formData: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    formData\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RangerType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAllRangers\n                        \n                    \n                \n            \n            \n                \ndeleteAllRangers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:301\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRanger\n                        \n                    \n                \n            \n            \n                \ndeleteRanger(callsign: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callsign\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DisplayRangers\n                        \n                    \n                \n            \n            \n                \nDisplayRangers(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:238\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        findIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    findIndex(callsign: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callsign\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRanger\n                        \n                    \n                \n            \n            \n                \ngetRanger(callsign: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:259\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callsign\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetRangers\n                        \n                    \n                \n            \n            \n                \nGetRangers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadHardcodedRangers\n                        \n                    \n                \n            \n            \n                \nloadHardcodedRangers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:345\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoadRangersFromExcel\n                        \n                    \n                \n            \n            \n                \nLoadRangersFromExcel(eventTarget: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventTarget\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoadRangersFromExcel2\n                        \n                    \n                \n            \n            \n                \nLoadRangersFromExcel2()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoadRangersFromJSON\n                        \n                    \n                \n            \n            \n                \nLoadRangersFromJSON(fileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '../../../assets/data/Rangers.3Feb22.json'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoadRangersFromLocalStorage\n                        \n                    \n                \n            \n            \n                \nLoadRangersFromLocalStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SortRangersByCallsign\n                        \n                    \n                \n            \n            \n                \nSortRangersByCallsign()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:309\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SortRangersByCallsign_unused\n                        \n                    \n                \n            \n            \n                \nSortRangersByCallsign_unused()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:321\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(observer: Observer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observer\n                                    \n                                                Observer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateLocalStorage\n                        \n                    \n                \n            \n            \n                \nUpdateLocalStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRanger\n                        \n                    \n                \n            \n            \n                \nupdateRanger(ranger: RangerType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranger.service.ts:264\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ranger\n                                    \n                                                RangerType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        excelData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[][]\n\n                    \n                \n                \n                    \n                        Default value : [[1, 2, 3], [4, 5, 6]]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/ranger.service.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        localStorageRangerName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'rangers'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/ranger.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nextId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/ranger.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        observRangers$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/ranger.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rangers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RangerType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/ranger.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rangersSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/ranger.service.ts:45\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { BehaviorSubject, Observable, Observer, of } from 'rxjs';\nimport { csvImport } from 'src/app/rangers/csvImport';\n//import { debounceTime, map, startWith } from 'rxjs/operators'\nimport * as rangers from '../../../assets/data/Rangers.3Feb22.json'\n\nexport interface RangerType {\n  callsign: string\n  licensee: string\n  // licenseKey: number\n  phone: string\n  address: string\n  image: string\n  team: string\n  icon: string\n  status: string\n  note: string\n}\n\n//export enum RangerStatus { '', 'Normal', 'Need Rest', 'REW', 'OnSite', 'Checked-in', 'Checked-out' }  // TODO: Allow changing list & default of statuses in settings?!\n\n//\n\n/* Following gets:\nindex.js:553 [webpack-dev-server] WARNING\nD:\\Projects\\RangerTrak\\rangertrak\\src\\app\\log\\log.component.ts depends on 'xlsx'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies */\nimport * as XLSX from 'xlsx';\n\n/* xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */\n// https://github.com/SheetJS/SheetJS.github.io\n// D:\\Projects\\ImportExcel\\sheetjs-master\\demos\\angular2\\src\\app\\sheetjs.component.ts\ntype AOA = any[][]  // array of arrays\n\n\n@Injectable({ providedIn: 'root' })\nexport class RangerService {\n  observRangers$: Observable | null = null\n\n  rangers: RangerType[] = []\n  //  rangers2: RangerType[] = []\n  private nextId = 0\n  private rangersSubject =\n    new BehaviorSubject([]);  // REVIEW: Necessary?\n  private localStorageRangerName = 'rangers'\n  excelData: any[][] = [[1, 2, 3], [4, 5, 6]];\n\n  constructor(private httpClient: HttpClient) {\n    console.log(\"Rangers Service Construction\")\n    this.LoadRangersFromLocalStorage()\n    console.log(`Got ${this.rangers.length} from Local Storage`)\n\n    if (this.rangers.length == 0) {\n      //this.LoadRangersFromJSON() // Have user use button to initiate this\n      //Better to load hardcoded folks...\n      this.loadHardcodedRangers()\n      console.log(`No Rangers in Local storage, so grabbed ${this.rangers.length} from Rangers.2Feb22.json file.`)\n    }\n\n    // Needed? Maybe to expose observable?\n    this.UpdateLocalStorage()\n  }\n\n  GetRangers() {\n    console.log(`GetRangers() returning ${this.rangers.length} Rangers`)\n    this.SortRangersByCallsign()   // TODO: Getting called too often?\n    return this.rangers\n  }\n\n  subscribe(observer: Observer) {\n    this.rangersSubject.subscribe(observer);\n  }\n\n  //--------------------------------------------------------------------------\n  // Update localStorage with current Rangers data & Publish update for any Observers\n  UpdateLocalStorage() {\n    console.log(`RangersService: Saving ${this.rangers.length} rangers to local storage`)\n    localStorage.setItem(this.localStorageRangerName, JSON.stringify(this.rangers))\n    //localStorage.setItem(\"SpecialRangers\", JSON.stringify(this.rangers2))\n    //console.log(\"Updated Rangers to \" + JSON.stringify(this.rangers))\n\n    this.SortRangersByCallsign()   // TODO: Getting called too often?\n\n\n    // now gets:\n    /*  Error: Uncaught (in promise): TypeError: this.rangers.map is not a function\n      TypeError: this.rangers.map is not a function\n          at RangerService.UpdateLocalStorage (ranger.service.ts:82:43)\n          at new RangerService (ranger.service.ts:60:10)\n  */\n\n    // licenseKey: ranger.licenseKey,\n    this.rangersSubject.next(this.rangers.map(\n      ranger => ({callsign: ranger.callsign,\n        licensee: ranger.licensee,\n        phone: ranger.phone,\n        address: ranger.address,\n        image: ranger.image,\n        team: ranger.team,\n        icon: ranger.icon,\n        status: ranger.status,\n        note: ranger.note\n      })\n    ))\n\n  }\n\n  //--------------------------------------------------------------------------\n  LoadRangersFromLocalStorage() { // WARN: Replaces any existing Rangers\n    let localStorageRangers = localStorage.getItem(this.localStorageRangerName)\n    try {\n      this.rangers = (localStorageRangers != null) ? JSON.parse(localStorageRangers) : []   //TODO: clean up\n      console.log(`RangersService: Loaded ${this.rangers.length} rangers from local storage`)\n    } catch (error: any) {\n      console.log(`Unable to parse Rangers from Local Storage. Error: ${error.message}`)\n    }\n    this.SortRangersByCallsign()   // TODO: Getting called too often?\n  }\n\n  //--------------------------------------------------------------------------\n  LoadRangersFromJSON(fileName: string = '../../../assets/data/Rangers.3Feb22.json') {  // WARN: Replaces any existing Rangers\n    console.log(`RangerService: loading new Rangers from ${fileName}`)\n\n    //debugger\n\n    // also see secretss import as an example: Settings.ts\n\n    this.observRangers$ = this.httpClient.get(fileName) // from pg 281\n\n    //this.rangers = []\n    if (rangers != null) {\n      // Use JSON file imported at the top\n      // this.rangers = JSON.parse(rangers) || []\n      // this.rangers = rangers\n      /* TODO: Add missing fields:\n      Type '{ callsign: string; label: string; licensee: string; licenseKey: string; phone: string; team: string; icon: string; }[]' is not assignable to type 'RangerType[]'.\n\n      Type '{ callsign: string; label: string; licensee: string; licenseKey: string; phone: string; team: string; icon: string; }is missing the following properties from type\n      'RangerType': address, image, status, notets(2322)\n\n      */\n    }\n\n    // REVIEW: Workaround for \"Error: Should not import the named export (imported as 'rangers') from default-exporting module (only default export is available soon)\"\n    let rangerWorkaround = JSON.stringify(rangers)\n    this.rangers = JSON.parse(rangerWorkaround)\n    this.SortRangersByCallsign()   // TODO: Getting called too often?\n    console.log(`Got ${this.rangers.length} rangers from JSON file.`)\n  }\n\n  //See pg. 279...\n  //import * as data from filename;\n  //let greeting = data.greeting;\n  /*   import {default as AAA} from \"VashonCallSigns\";\n        AAA.targetKey\n        // this requires `\"resolveJsonModule\": true` in tsconfig.json\n\n        import {default as yyy} from './Rangers.3Feb22.json'\nimport { HttpClient } from '@angular/common/http';\n        yyy.primaryMain\n\n\n    ngOnInit(): void {\n\n            this.myService.getResponseData().then((value) => {\n                //SUCCESS\n                console.log(value);\n                this.detailsdata = value;\n\n            }, (error) => {\n                //FAILURE\n                console.log(error);\n            })\n        }\n\n    sales amount: {{ detailsdata?.sales_amount }}\n    collection amount: {{ detailsdata?.collection_amount }}\n    carts amount: {{ detailsdata?.carts_amount }}\n\n    */\n\n  //--------------------------------------------------------------------------\n  // https://ag-grid.com/javascript-data-grid/excel-import/#example-excel-import\"\n  // https://github.com/SheetJS/SheetJS/tree/master/demos/angular2/\n  LoadRangersFromExcel(eventTarget: any) {  // HTMLInputElement event:target\n\n    // TODO: https://h2qutc.github.io/angular-material-components/fileinput\n    type AOR = RangerType[]  // array of Rangers\n\n    // wire up file reader\n    const target: DataTransfer = (eventTarget);\n\n    if (target.files.length !== 1) throw new Error('Cannot use multiple files');\n    console.log(`LoadRangersFromExcel(): About to read contents of ${target.files[0].name}`)\n    const reader: FileReader = new FileReader();\n    reader.onload = (e: any) => {\n\n      // read workbook\n      const ab: ArrayBuffer = e.target.result;\n      const wb: XLSX.WorkBook = XLSX.read(ab);\n\n      // grab first sheet\n      const wsname: string = wb.SheetNames[0];\n      const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n      // debugger\n\n      let myJson = JSON.stringify(XLSX.utils.sheet_to_json(ws, { header: 1 }))\n\n      console.log(`myJson = ${myJson}`)\n      let myJson2 = JSON.parse(myJson)\n      console.log(`myJson2 = ${myJson2}`)\n      console.log(`1 Got ${this.rangers.length} rangers from Excel file.`)\n\n      // save data\n      this.rangers = (myJson2)\n      console.log(`2 Got ${this.rangers.length} rangers from Excel file...`)\n\n      //this.rangers = JSON.parse(myJson)\n    };\n    console.log(`3 Got ${this.rangers.length} rangers from Excel file.`)\n\n    this.DisplayRangers(`Excel import from ${target.files[0].name}`)\n    console.log(`4 Got ${this.rangers.length} rangers from Excel file.`)\n\n    reader.readAsArrayBuffer(target.files[0]);\n\n    console.log(`5 Got ${this.rangers.length} rangers from Excel file.`)\n    this.SortRangersByCallsign()\n\n    // this.UpdateLocalStorage\n    return this.rangers\n  }\n\n  //--------------------------------------------------------------------------\n  DisplayRangers(msg: string) {\n    let len = 10\n    if (this.rangers.length  {\n      if (n1.callsign > n2.callsign) { return 1 }\n      if (n1.callsign  {\n      if (b.callsign > a.callsign) return -1\n      if (b.callsign  first.callsign > second.callsign ? 1 : -1)\n\n    console.log(\"SortRangersByCallsign...DONE --- BUT ARE THEY REVERSED?!\")\n    return this.rangers\n  }\n\n  //--------------------------------------------------------------------------\n  loadHardcodedRangers() {\n    console.log(\"Adding all hardcoded Rangers\")\n\n    /* Following from 98070 AND 98013 zip codes, MUST be sorted by call sign!\n        https://wireless2.fcc.gov/UlsApp/UlsSearch/searchAmateur.jsp\n  */\n\n    /* TODO: Implement better fake data and pay attention to the number to create...\n    let teams = this.teamService.getTeams()\n    let rangers = this.rangerService.getRangers()\n    let streets = [\"Ave\", \"St.\", \"Pl.\", \"Court\", \"Circle\"]\n    let notes = [\"Reports beautiful sunrise\", \"Roudy Kids\", \"Approaching Neighborhood CERT\", \"Confused & dazed in the sun\",                \"Wow\", \"na\", \"Can't hear you\", \"Bounced via tail of a comet!\", \"Need confidential meeting: HIPAA\", \"Getting overrun by racoons\"]\n\n        for (let i = 0; i  {\n      if (n1.team > n2.team) { return 1 }\n      if (n1.team \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RangerType.html":{"url":"interfaces/RangerType.html","title":"interface - RangerType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RangerType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/ranger.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            callsign\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            licensee\n                                        \n                                \n                                \n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            team\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callsign\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callsign:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        licensee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        licensee:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        team:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { BehaviorSubject, Observable, Observer, of } from 'rxjs';\nimport { csvImport } from 'src/app/rangers/csvImport';\n//import { debounceTime, map, startWith } from 'rxjs/operators'\nimport * as rangers from '../../../assets/data/Rangers.3Feb22.json'\n\nexport interface RangerType {\n  callsign: string\n  licensee: string\n  // licenseKey: number\n  phone: string\n  address: string\n  image: string\n  team: string\n  icon: string\n  status: string\n  note: string\n}\n\n//export enum RangerStatus { '', 'Normal', 'Need Rest', 'REW', 'OnSite', 'Checked-in', 'Checked-out' }  // TODO: Allow changing list & default of statuses in settings?!\n\n//\n\n/* Following gets:\nindex.js:553 [webpack-dev-server] WARNING\nD:\\Projects\\RangerTrak\\rangertrak\\src\\app\\log\\log.component.ts depends on 'xlsx'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies */\nimport * as XLSX from 'xlsx';\n\n/* xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */\n// https://github.com/SheetJS/SheetJS.github.io\n// D:\\Projects\\ImportExcel\\sheetjs-master\\demos\\angular2\\src\\app\\sheetjs.component.ts\ntype AOA = any[][]  // array of arrays\n\n\n@Injectable({ providedIn: 'root' })\nexport class RangerService {\n  observRangers$: Observable | null = null\n\n  rangers: RangerType[] = []\n  //  rangers2: RangerType[] = []\n  private nextId = 0\n  private rangersSubject =\n    new BehaviorSubject([]);  // REVIEW: Necessary?\n  private localStorageRangerName = 'rangers'\n  excelData: any[][] = [[1, 2, 3], [4, 5, 6]];\n\n  constructor(private httpClient: HttpClient) {\n    console.log(\"Rangers Service Construction\")\n    this.LoadRangersFromLocalStorage()\n    console.log(`Got ${this.rangers.length} from Local Storage`)\n\n    if (this.rangers.length == 0) {\n      //this.LoadRangersFromJSON() // Have user use button to initiate this\n      //Better to load hardcoded folks...\n      this.loadHardcodedRangers()\n      console.log(`No Rangers in Local storage, so grabbed ${this.rangers.length} from Rangers.2Feb22.json file.`)\n    }\n\n    // Needed? Maybe to expose observable?\n    this.UpdateLocalStorage()\n  }\n\n  GetRangers() {\n    console.log(`GetRangers() returning ${this.rangers.length} Rangers`)\n    this.SortRangersByCallsign()   // TODO: Getting called too often?\n    return this.rangers\n  }\n\n  subscribe(observer: Observer) {\n    this.rangersSubject.subscribe(observer);\n  }\n\n  //--------------------------------------------------------------------------\n  // Update localStorage with current Rangers data & Publish update for any Observers\n  UpdateLocalStorage() {\n    console.log(`RangersService: Saving ${this.rangers.length} rangers to local storage`)\n    localStorage.setItem(this.localStorageRangerName, JSON.stringify(this.rangers))\n    //localStorage.setItem(\"SpecialRangers\", JSON.stringify(this.rangers2))\n    //console.log(\"Updated Rangers to \" + JSON.stringify(this.rangers))\n\n    this.SortRangersByCallsign()   // TODO: Getting called too often?\n\n\n    // now gets:\n    /*  Error: Uncaught (in promise): TypeError: this.rangers.map is not a function\n      TypeError: this.rangers.map is not a function\n          at RangerService.UpdateLocalStorage (ranger.service.ts:82:43)\n          at new RangerService (ranger.service.ts:60:10)\n  */\n\n    // licenseKey: ranger.licenseKey,\n    this.rangersSubject.next(this.rangers.map(\n      ranger => ({callsign: ranger.callsign,\n        licensee: ranger.licensee,\n        phone: ranger.phone,\n        address: ranger.address,\n        image: ranger.image,\n        team: ranger.team,\n        icon: ranger.icon,\n        status: ranger.status,\n        note: ranger.note\n      })\n    ))\n\n  }\n\n  //--------------------------------------------------------------------------\n  LoadRangersFromLocalStorage() { // WARN: Replaces any existing Rangers\n    let localStorageRangers = localStorage.getItem(this.localStorageRangerName)\n    try {\n      this.rangers = (localStorageRangers != null) ? JSON.parse(localStorageRangers) : []   //TODO: clean up\n      console.log(`RangersService: Loaded ${this.rangers.length} rangers from local storage`)\n    } catch (error: any) {\n      console.log(`Unable to parse Rangers from Local Storage. Error: ${error.message}`)\n    }\n    this.SortRangersByCallsign()   // TODO: Getting called too often?\n  }\n\n  //--------------------------------------------------------------------------\n  LoadRangersFromJSON(fileName: string = '../../../assets/data/Rangers.3Feb22.json') {  // WARN: Replaces any existing Rangers\n    console.log(`RangerService: loading new Rangers from ${fileName}`)\n\n    //debugger\n\n    // also see secretss import as an example: Settings.ts\n\n    this.observRangers$ = this.httpClient.get(fileName) // from pg 281\n\n    //this.rangers = []\n    if (rangers != null) {\n      // Use JSON file imported at the top\n      // this.rangers = JSON.parse(rangers) || []\n      // this.rangers = rangers\n      /* TODO: Add missing fields:\n      Type '{ callsign: string; label: string; licensee: string; licenseKey: string; phone: string; team: string; icon: string; }[]' is not assignable to type 'RangerType[]'.\n\n      Type '{ callsign: string; label: string; licensee: string; licenseKey: string; phone: string; team: string; icon: string; }is missing the following properties from type\n      'RangerType': address, image, status, notets(2322)\n\n      */\n    }\n\n    // REVIEW: Workaround for \"Error: Should not import the named export (imported as 'rangers') from default-exporting module (only default export is available soon)\"\n    let rangerWorkaround = JSON.stringify(rangers)\n    this.rangers = JSON.parse(rangerWorkaround)\n    this.SortRangersByCallsign()   // TODO: Getting called too often?\n    console.log(`Got ${this.rangers.length} rangers from JSON file.`)\n  }\n\n  //See pg. 279...\n  //import * as data from filename;\n  //let greeting = data.greeting;\n  /*   import {default as AAA} from \"VashonCallSigns\";\n        AAA.targetKey\n        // this requires `\"resolveJsonModule\": true` in tsconfig.json\n\n        import {default as yyy} from './Rangers.3Feb22.json'\nimport { HttpClient } from '@angular/common/http';\n        yyy.primaryMain\n\n\n    ngOnInit(): void {\n\n            this.myService.getResponseData().then((value) => {\n                //SUCCESS\n                console.log(value);\n                this.detailsdata = value;\n\n            }, (error) => {\n                //FAILURE\n                console.log(error);\n            })\n        }\n\n    sales amount: {{ detailsdata?.sales_amount }}\n    collection amount: {{ detailsdata?.collection_amount }}\n    carts amount: {{ detailsdata?.carts_amount }}\n\n    */\n\n  //--------------------------------------------------------------------------\n  // https://ag-grid.com/javascript-data-grid/excel-import/#example-excel-import\"\n  // https://github.com/SheetJS/SheetJS/tree/master/demos/angular2/\n  LoadRangersFromExcel(eventTarget: any) {  // HTMLInputElement event:target\n\n    // TODO: https://h2qutc.github.io/angular-material-components/fileinput\n    type AOR = RangerType[]  // array of Rangers\n\n    // wire up file reader\n    const target: DataTransfer = (eventTarget);\n\n    if (target.files.length !== 1) throw new Error('Cannot use multiple files');\n    console.log(`LoadRangersFromExcel(): About to read contents of ${target.files[0].name}`)\n    const reader: FileReader = new FileReader();\n    reader.onload = (e: any) => {\n\n      // read workbook\n      const ab: ArrayBuffer = e.target.result;\n      const wb: XLSX.WorkBook = XLSX.read(ab);\n\n      // grab first sheet\n      const wsname: string = wb.SheetNames[0];\n      const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n      // debugger\n\n      let myJson = JSON.stringify(XLSX.utils.sheet_to_json(ws, { header: 1 }))\n\n      console.log(`myJson = ${myJson}`)\n      let myJson2 = JSON.parse(myJson)\n      console.log(`myJson2 = ${myJson2}`)\n      console.log(`1 Got ${this.rangers.length} rangers from Excel file.`)\n\n      // save data\n      this.rangers = (myJson2)\n      console.log(`2 Got ${this.rangers.length} rangers from Excel file...`)\n\n      //this.rangers = JSON.parse(myJson)\n    };\n    console.log(`3 Got ${this.rangers.length} rangers from Excel file.`)\n\n    this.DisplayRangers(`Excel import from ${target.files[0].name}`)\n    console.log(`4 Got ${this.rangers.length} rangers from Excel file.`)\n\n    reader.readAsArrayBuffer(target.files[0]);\n\n    console.log(`5 Got ${this.rangers.length} rangers from Excel file.`)\n    this.SortRangersByCallsign()\n\n    // this.UpdateLocalStorage\n    return this.rangers\n  }\n\n  //--------------------------------------------------------------------------\n  DisplayRangers(msg: string) {\n    let len = 10\n    if (this.rangers.length  {\n      if (n1.callsign > n2.callsign) { return 1 }\n      if (n1.callsign  {\n      if (b.callsign > a.callsign) return -1\n      if (b.callsign  first.callsign > second.callsign ? 1 : -1)\n\n    console.log(\"SortRangersByCallsign...DONE --- BUT ARE THEY REVERSED?!\")\n    return this.rangers\n  }\n\n  //--------------------------------------------------------------------------\n  loadHardcodedRangers() {\n    console.log(\"Adding all hardcoded Rangers\")\n\n    /* Following from 98070 AND 98013 zip codes, MUST be sorted by call sign!\n        https://wireless2.fcc.gov/UlsApp/UlsSearch/searchAmateur.jsp\n  */\n\n    /* TODO: Implement better fake data and pay attention to the number to create...\n    let teams = this.teamService.getTeams()\n    let rangers = this.rangerService.getRangers()\n    let streets = [\"Ave\", \"St.\", \"Pl.\", \"Court\", \"Circle\"]\n    let notes = [\"Reports beautiful sunrise\", \"Roudy Kids\", \"Approaching Neighborhood CERT\", \"Confused & dazed in the sun\",                \"Wow\", \"na\", \"Can't hear you\", \"Bounced via tail of a comet!\", \"Need confidential meeting: HIPAA\", \"Getting overrun by racoons\"]\n\n        for (let i = 0; i  {\n      if (n1.team > n2.team) { return 1 }\n      if (n1.team \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/settings.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                debugMode\n                            \n                            \n                                fieldReportStatuses\n                            \n                            \n                                    Static\n                                localStorageFieldReportStatusName\n                            \n                            \n                                    Static\n                                secrets\n                            \n                            \n                                    Static\n                                Settings\n                            \n                            \n                                    Static\n                                storageLocalName\n                            \n                            \n                                    Static\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFieldReportStatuses\n                            \n                            \n                                localStorageVoyeur\n                            \n                            \n                                    Static\n                                ResetDefaults\n                            \n                            \n                                ResetFieldReportStatusDefaults\n                            \n                            \n                                    Static\n                                Update\n                            \n                            \n                                updateFieldReportStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/settings.service.ts:43\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldReportStatuses\n                        \n                    \n                \n            \n            \n                \ngetFieldReportStatuses()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/settings.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStorageVoyeur\n                        \n                    \n                \n            \n            \n                \nlocalStorageVoyeur()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/settings.service.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        ResetDefaults\n                        \n                    \n                \n            \n            \n                \n                    \n                    ResetDefaults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/settings.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResetFieldReportStatusDefaults\n                        \n                    \n                \n            \n            \n                \nResetFieldReportStatusDefaults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/settings.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Update\n                        \n                    \n                \n            \n            \n                \n                    \n                    Update(newSettings: SettingsType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/settings.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newSettings\n                                    \n                                                SettingsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFieldReportStatus\n                        \n                    \n                \n            \n            \n                \nupdateFieldReportStatus(newStatuses: FieldReportStatusType[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/settings.service.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newStatuses\n                                    \n                                                FieldReportStatusType[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        debugMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/settings.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldReportStatuses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FieldReportStatusType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/settings.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        localStorageFieldReportStatusName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fieldReportStatuses'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/settings.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        secrets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecretType[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/settings.service.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        Settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SettingsType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/settings.service.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        storageLocalName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'appSettings'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/settings.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/settings.service.ts:43\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport * as secrets from '../../../assets/data/secrets.json' // national secrets... & API-Keys. gitignore's\nimport * as packageJson from '../../../../package.json'\n\nexport type SecretType = {\n  \"id\": number,\n  \"name\": string,\n  \"url\": string,\n  \"key\": string,\n  \"note\": string\n}\n\nexport type SettingsType = {\n  id: number,\n  name: string,\n  application: string,\n  version: string,\n  note: string,\n  defLat: number,\n  defLng: number,\n  defZoom: number,\n  defPlusCode: string,\n  w3wLocale: string,\n  markerSize: number,\n  markerShape: number,\n  defRangerStatus: number\n  allowManualPinDrops: boolean,\n  debugMode: boolean,\n  logToPanel: boolean,\n  logToConsole: boolean\n}\n\nexport type FieldReportStatusType = { status: string, color: string, icon: string }\n\n@Injectable({ providedIn: 'root' })\nexport class SettingsService {\n  static storageLocalName = 'appSettings'\n  static secrets: SecretType[]\n  static Settings: SettingsType\n  static debugMode: any;\n  static localStorageFieldReportStatusName = 'fieldReportStatuses'\n  fieldReportStatuses: FieldReportStatusType[] = []\n  static version: string\n\n  constructor() {\n    console.log(\"Contructing SettingsService\") // on page transition between Entry Screen or Google Maps pages ONLY (others use only static settings)\n\n    // REVIEW: Workaround for \"Error: Should not import the named export (imported as 'secrets') from default-exporting module (only default export is available soon)\"\n    let secretWorkaround = JSON.stringify(secrets)\n    SettingsService.secrets = JSON.parse(secretWorkaround)\n    //console.log('Got secrets from JSON file. e.g., ' + JSON.stringify(SettingsService.secrets[3]))\n    // TODO: https://developer.what3words.com/tutorial/hiding-your-api-key: environmental values, GitHub vault, or  encryption? https://www.doppler.com/\n\n    // populate SettingsService.Settings\n    // BUG: Use subscription/observables instead: so rest of program gets latest values - not just those present right now?\n    // Doesn't auto-update settings that are not exposed in the Settings Edit Component\n    let localStorageSettings = localStorage.getItem(SettingsService.storageLocalName)\n    let needSettings = SettingsService.Settings == undefined\n    if (needSettings) {\n      console.log(\"Get App Settings...\")\n      try {\n        if (localStorageSettings != null && localStorageSettings.indexOf(\"defPlusCode\") > 0) {\n          SettingsService.Settings = JSON.parse(localStorageSettings)\n          console.log(\"Initialized App Settings from localstorage\")\n          needSettings = false\n        }\n      } catch (error: any) {\n        console.log(`localstorage App Settings i.e., ${localStorageSettings} should be deleted & reset: unable to parse them. Error name: ${error.name}; msg: ${error.message}`);\n        // TODO: Do it!\n        // REVIEW:\n        localStorage.removeItem(SettingsService.storageLocalName)\n      }\n    }\n    if (needSettings) { SettingsService.ResetDefaults() }\n\n    // REVIEW: Above may come up with an old version #, so do this after the above\n    // package.json has version: https://www.npmjs.com/package/standard-version: npm run release\n    let packageAsString = JSON.stringify(packageJson)\n    let packageAsJson = JSON.parse(packageAsString)\n    //this.version = packageAsJson.version\n    SettingsService.version = packageAsJson.version\n    SettingsService.Settings.version = packageAsJson.version\n    console.log(`Got version: ${packageAsJson.version} `)\n    // REVIEW: following forces garbage collection of package.json, for security? (would happen at end of constructor too)\n    packageAsString = ''\n    packageAsJson = null\n\n\n    // populate Field Report Statuses\n    let localStorageFieldReportStatuses = localStorage.getItem(SettingsService.localStorageFieldReportStatusName)\n    if (localStorageFieldReportStatuses != undefined) { //|| this.fieldReportStatuses.length == 0\n      console.log(`Got ${localStorageFieldReportStatuses?.length} fieldReportStatuses from LocalStorage, parse 'em`)\n      try {\n        if (localStorageFieldReportStatuses != null && localStorageFieldReportStatuses.indexOf(\"status\") > 0) {\n          this.fieldReportStatuses = JSON.parse(localStorageFieldReportStatuses)\n          console.log(`Initialized ${this.fieldReportStatuses.length} fieldreport statuses from localstorage`)\n        }\n      } catch (error: any) {\n        console.error(`localstorage App Settings i.e., ${SettingsService.localStorageFieldReportStatusName} should be deleted & reset: unable to parse them. Error name: ${error.name}; msg: ${error.message}`);\n        // TODO: Do it!\n        // REVIEW:\n        localStorage.removeItem(SettingsService.localStorageFieldReportStatusName)\n      }\n    }\n    if ((this.fieldReportStatuses == undefined) || (this.fieldReportStatuses == null) || (this.fieldReportStatuses.length == 0)) {\n      this.ResetFieldReportStatusDefaults()\n    }\n    console.log(`${this.fieldReportStatuses.length} FieldReport Statuses initialized ` + (SettingsService.Settings.debugMode? JSON.stringify(this.fieldReportStatuses):\"\"))\n\n  }\n\n  static ResetDefaults() {\n    //original hardcoded defaults... not saved until form is submitted... This form doesn't allow editing of all values\n    console.log(\"Initialize App Settings from hardcoded values\")\n\n    // TODO: Need different sets for each type of map, and perhaps various (selectable/savable) copies of 'preferences'\n    SettingsService.Settings = {\n      id: 0,  // FUTURE: allow different setts of settings (e.g., per location)???\n      name: \"standard hardcoded settings\",\n      application: \"RangerTrak\",\n      version: SettingsService.version,\n      note: \"values set by code, please edit them to serve you!\",\n      defLat: 47.4472,\n      defLng: -122.4627,  // Vashon EOC!\n      defZoom: 17,\n      defPlusCode: '84VVCGWP+VW', // or \"CGWP+VX Vashon, Washington\" = 47.447187,-122.462688\n      w3wLocale: \"Vashon, WA\",\n      markerSize: 5,\n      markerShape: 1,\n      defRangerStatus: 0, // TODO: Allow editing this\n      allowManualPinDrops: false,\n      debugMode: true,\n      logToPanel: true,\n      logToConsole: true\n    }\n  }\n\n  // TODO: Use a Map instead: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#objects_vs._maps\n  ResetFieldReportStatusDefaults() {\n    this.fieldReportStatuses = [\n      { status: 'Normal', color: '', icon: '' },  // Often the default value: see SettingsService.defRangerStatus\n      { status: 'Need Rest', color: 'cce', icon: '' },\n      { status: 'Urgent', color: 'red', icon: '' },\n      { status: 'Objective Update', color: 'aqua', icon: '' },\n      { status: 'Check-in', color: 'grey', icon: '' },\n      { status: 'Check-out', color: 'dark-grey', icon: '' }\n    ]\n    console.log(`ResetFieldReportStatusDefaults reset to ${this.fieldReportStatuses.length} Statuses`)\n    return this.fieldReportStatuses\n  }\n\n  static Update(newSettings: SettingsType) {\n    // TODO: any validation...\n    localStorage.setItem(SettingsService.storageLocalName, JSON.stringify(newSettings));\n    console.log(\"Updated Application Settings to \" + JSON.stringify(newSettings))\n  }\n\n  getFieldReportStatuses() {\n    return this.fieldReportStatuses\n  }\n\n  updateFieldReportStatus(newStatuses: FieldReportStatusType[]) {\n    // TODO: any validation...\n    this.fieldReportStatuses = newStatuses\n    localStorage.setItem(SettingsService.localStorageFieldReportStatusName, JSON.stringify(newStatuses));\n    console.log(\"Replaced FieldReport Statuses with \" + JSON.stringify(newStatuses))\n  }\n\n  localStorageVoyeur() {\n    let key\n    for (var i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShapeService.html":{"url":"injectables/ShapeService.html","title":"injectable - ShapeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShapeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/shape.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getShapeShapes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/shape.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getShapeShapes\n                        \n                    \n                \n            \n            \n                \ngetShapeShapes(file: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/shape.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as L from 'leaflet';\n// https://www.digitalocean.com/community/tutorials/angular-angular-and-leaflet-shape-service\n\n@Injectable({providedIn: 'root'})\nexport class ShapeService {\n\n    constructor(private http: HttpClient) { }\n\n    getShapeShapes(file:string) {\n      return this.http.get(file);\n    }\n  }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StreetAddress.html":{"url":"classes/StreetAddress.html","title":"class - StreetAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StreetAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/street-address.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/street-address.ts:1\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class StreetAddress {\n  //MAIN.dbug(\"Got street address to check\")\n  constructor(){}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/team.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                    Private\n                                gridApi\n                            \n                            \n                                    Private\n                                gridColumnApi\n                            \n                            \n                                    Static\n                                shapes\n                            \n                            \n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFakeTeams\n                            \n                            \n                                getTeams\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBtNormal\n                            \n                            \n                                onBtPrinterFriendly\n                            \n                            \n                                onGridReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/team.service.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFakeTeams\n                        \n                    \n                \n            \n            \n                \ngetFakeTeams(array: TeamType[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/team.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n                                    \n                                                TeamType[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTeams\n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/team.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/team.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBtNormal\n                        \n                    \n                \n            \n            \n                \nonBtNormal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/team.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBtPrinterFriendly\n                        \n                    \n                \n            \n            \n                \nonBtPrinterFriendly()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/team.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGridReady\n                        \n                    \n                \n            \n            \n                \nonGridReady(params: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/team.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { field: \"name\" },\n    { field: \"icon\" },\n    { field: \"color\" },\n    { field: \"fillColor\" },\n    { field: \"shape\", cellEditor: 'agSelectCellEditor', cellEditorParams: { values: TeamService.shapes } },\n    { field: \"note\" }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/team.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gridApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/team.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gridColumnApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/team.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        shapes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Circle',\n    'Star',\n    'Square',\n    'shape4',\n    'shape5'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/team.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TeamType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/team.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { JSONSchema, LocalStorage, StorageMap } from '@ngx-pwa/local-storage';\nimport { Observable, of } from 'rxjs';\nimport { catchError, mergeMap, toArray } from 'rxjs/operators';\n\nexport interface TeamType {\n  name: string\n  icon: string\n  color: string\n  fillColor: string\n  shape: number,  // TODO: this right?!\n  note: string\n}\n\n@Injectable({ providedIn: 'root' })\nexport class TeamService implements OnInit {\n\n  private gridApi: any;\n  private gridColumnApi: any;\n\n  static shapes = [\n    'Circle',\n    'Star',\n    'Square',\n    'shape4',\n    'shape5'\n  ]\n\n  // Marker uses icons; Circle uses color + fillColor; Note is for user's notes\n  teams: TeamType[] = []\n\n\n  // TODO: This should get replaced by Teams[] interface...\n  columns = [\n    { field: \"name\" },\n    { field: \"icon\" },\n    { field: \"color\" },\n    { field: \"fillColor\" },\n    { field: \"shape\", cellEditor: 'agSelectCellEditor', cellEditorParams: { values: TeamService.shapes } },\n    { field: \"note\" }\n  ];\n\n  //icons: \n\n  // Marker uses icons; Circle uses color + fillColor; Note is for user's notes\n /* teams = [\n    { name: \"T1\", icon: \"T1.png\", color: 'Magenta', fillColor: 'grey', shape: this.shapes[1], note: \"\" },\n    { name: \"T2\", icon: \"T2.png\", color: 'Green', fillColor: 'blue', shape: this.shapes[2], note: \"\" },\n    { name: \"Other\", icon: \"Other.png\", color: 'Yellow', fillColor: '#f03', shape: this.shapes[2], note: \"\" }\n  ];\n*/\n\n\n\n\n// https://www.ag-grid.com/angular-data-grid/printing/\nonBtPrinterFriendly() {\n  // Printer Friendly Layout\n  var eGridDiv = document.querySelector('#teamGrid');\n  // eGridDiv.style.width = '';\n  // eGridDiv.style.height = '';\n  this.gridApi.setDomLayout('print');\n}\n\nonBtNormal() {\n  // Normal Layout\n  var eGridDiv = document.querySelector('#teamGrid');\n  // eGridDiv.style.width = '400px';\n  // eGridDiv.style.height = '200px';\n  this.gridApi.setDomLayout(null);\n}\n\nonGridReady(params: any) {\n  this.gridApi = params.api;\n  this.gridColumnApi = params.columnApi;\n}\n\n\n\n\n\n\n\n\n  constructor(private httpClient: HttpClient) {\n    ;\n  }\n\n  ngOnInit() {\n\n    this.getFakeTeams(this.teams)  // BUG: doesn't seem to happen before getTeams is called!\n    //this.LoadFromJSON('teams.json')  //BUG: Not tested!!!\n  }\n\n  getTeams() {\n\n    this.getFakeTeams(this.teams)\n    return this.teams;\n  }\n\n  getFakeTeams(array: TeamType[]) {  // TODO: Should push, not replace...\n    array.push(\n      { name: \"T1\", icon: \"T1.png\", color: 'Magenta', fillColor: 'grey', shape: 1, note: \"\" },\n      { name: \"T2\", icon: \"T2.png\", color: 'Green', fillColor: 'blue', shape: 2, note: \"\" },\n      { name: \"T3\", icon: \"T3.png\", color: 'Red', fillColor: 'yellow', shape: 3, note: \"\" },\n      { name: \"T4\", icon: \"T4.png\", color: 'Blue', fillColor: 'aqua', shape: 4, note: \"\" },\n      { name: \"T5\", icon: \"T5.png\", color: 'Violet', fillColor: '#f03', shape: 5, note: \"\" },\n      { name: \"T6\", icon: \"T6.png\", color: 'DodgerBlue', fillColor: '#f03', shape: 1, note: \"\" },\n      { name: \"T7\", icon: \"T3.png\", color: 'Red', fillColor: 'yellow', shape: 3, note: \"\" },\n      { name: \"T8\", icon: \"T4.png\", color: 'Blue', fillColor: 'aqua', shape: 4, note: \"\" },\n      { name: \"T9\", icon: \"T5.png\", color: 'Violet', fillColor: '#f03', shape: 5, note: \"\" },\n      { name: \"T10\", icon: \"T6.png\", color: 'DodgerBlue', fillColor: '#f03', shape: 1, note: \"\" },\n      { name: \"T11\", icon: \"T3.png\", color: 'Red', fillColor: 'yellow', shape: 3, note: \"\" },\n      { name: \"T12\", icon: \"T4.png\", color: 'Blue', fillColor: 'aqua', shape: 4, note: \"\" },\n      { name: \"T13\", icon: \"T6.png\", color: 'DodgerBlue', fillColor: '#f03', shape: 1, note: \"\" },\n      { name: \"T14\", icon: \"T3.png\", color: 'Red', fillColor: 'yellow', shape: 3, note: \"\" },\n      { name: \"T15\", icon: \"T4.png\", color: 'Blue', fillColor: 'aqua', shape: 4, note: \"\" },\n      { name: \"T16\", icon: \"T5.png\", color: 'Violet', fillColor: '#f03', shape: 5, note: \"\" },\n      { name: \"T17\", icon: \"T6.png\", color: 'DodgerBlue', fillColor: '#f03', shape: 1, note: \"\" },\n      { name: \"T18\", icon: \"T3.png\", color: 'Red', fillColor: 'yellow', shape: 3, note: \"\" },\n      { name: \"T19\", icon: \"T4.png\", color: 'Blue', fillColor: 'aqua', shape: 4, note: \"\" },\n      { name: \"T20\", icon: \"T5.png\", color: 'Violet', fillColor: '#f03', shape: 5, note: \"\" },\n      { name: \"T21\", icon: \"T6.png\", color: 'DodgerBlue', fillColor: '#f03', shape: 1, note: \"\" },\n      { name: \"Other\", icon: \"Other.png\", color: 'Yellow', fillColor: '#f03', shape: 2, note: \"\" }\n    )\n  }\n  //LoadFromJSON(file: string) {\n\n  // https://rxjs.dev/deprecations/subscribe-arguments   --- this from pg 278\n  /*\n  this.httpClient.get('/team/123')\n    .subscribe(data => console.log('id: $(data.id} title: ${data.title}'),\n      (err: HttpErrorResponse) => console.log('Got error: $(err)')\n      */\n}\n\n\n\n/*\n@Injectable({ providedIn: 'root' })\nexport class Team {\n\n//name = \"\" \"T16\", icon: \"T5.png\", color: 'Violet', fillColor: '#f03', shape: 5, note: \"\" },\n\n  static nextId = 0 // BUG: OK if user restarts app during SAME mission #?\n  id: number\n  ts: TeamService\n  name: string\n  note: string\n\n  //icons: \n\n  constructor(//public test: Teams,\n    //public name: string, public icon: string, public color: string, public fillcolor: string, public shape: number, public note: string,\n    teamService: TeamService\n    ) {\n    this.id = Team.nextId++\n    this.ts = teamService\n    this.name = \"test name\"\n    this.note = \"test note\"\n    // add validation code here?! or in forms code?\n  }\n\n  //edit () {   }    TODO: wise to provide this option?!  JUST provide grid editing for now...\n\n  toString() {\n    return \"Team ID:\" + this.id +\n      \"; name: \" + this.name +\n      \"; note: \" + this.note +\n      \";; \"\n  }\n\n  // JUST provide grid editing for now...\n  addTeamRow(): void {\n    this.ts.getTeams().push({ name: \"new Team\", icon: \"Other.png\", color: 'white', fillColor: '#f03', shape: 1, note: \"\" })\n  }\n*/\n/*   models = ['Mercedes-AMG C63', 'BMW M2', 'Audi TT Roadster', 'Mazda MX-5', 'BMW M3', 'Porsche 718 Boxster', 'Porsche 718 Cayman',];\n  colors = ['Red', 'Black', 'Green', 'White', 'Blue'];\n  countries = ['UK', 'Spain', 'France', 'Ireland', 'USA'];\n\n  createRowData() {\n    var rowData = [];\n    for (var i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamType.html":{"url":"interfaces/TeamType.html","title":"interface - TeamType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/team.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            fillColor\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            shape\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shape\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shape:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { JSONSchema, LocalStorage, StorageMap } from '@ngx-pwa/local-storage';\nimport { Observable, of } from 'rxjs';\nimport { catchError, mergeMap, toArray } from 'rxjs/operators';\n\nexport interface TeamType {\n  name: string\n  icon: string\n  color: string\n  fillColor: string\n  shape: number,  // TODO: this right?!\n  note: string\n}\n\n@Injectable({ providedIn: 'root' })\nexport class TeamService implements OnInit {\n\n  private gridApi: any;\n  private gridColumnApi: any;\n\n  static shapes = [\n    'Circle',\n    'Star',\n    'Square',\n    'shape4',\n    'shape5'\n  ]\n\n  // Marker uses icons; Circle uses color + fillColor; Note is for user's notes\n  teams: TeamType[] = []\n\n\n  // TODO: This should get replaced by Teams[] interface...\n  columns = [\n    { field: \"name\" },\n    { field: \"icon\" },\n    { field: \"color\" },\n    { field: \"fillColor\" },\n    { field: \"shape\", cellEditor: 'agSelectCellEditor', cellEditorParams: { values: TeamService.shapes } },\n    { field: \"note\" }\n  ];\n\n  //icons: \n\n  // Marker uses icons; Circle uses color + fillColor; Note is for user's notes\n /* teams = [\n    { name: \"T1\", icon: \"T1.png\", color: 'Magenta', fillColor: 'grey', shape: this.shapes[1], note: \"\" },\n    { name: \"T2\", icon: \"T2.png\", color: 'Green', fillColor: 'blue', shape: this.shapes[2], note: \"\" },\n    { name: \"Other\", icon: \"Other.png\", color: 'Yellow', fillColor: '#f03', shape: this.shapes[2], note: \"\" }\n  ];\n*/\n\n\n\n\n// https://www.ag-grid.com/angular-data-grid/printing/\nonBtPrinterFriendly() {\n  // Printer Friendly Layout\n  var eGridDiv = document.querySelector('#teamGrid');\n  // eGridDiv.style.width = '';\n  // eGridDiv.style.height = '';\n  this.gridApi.setDomLayout('print');\n}\n\nonBtNormal() {\n  // Normal Layout\n  var eGridDiv = document.querySelector('#teamGrid');\n  // eGridDiv.style.width = '400px';\n  // eGridDiv.style.height = '200px';\n  this.gridApi.setDomLayout(null);\n}\n\nonGridReady(params: any) {\n  this.gridApi = params.api;\n  this.gridColumnApi = params.columnApi;\n}\n\n\n\n\n\n\n\n\n  constructor(private httpClient: HttpClient) {\n    ;\n  }\n\n  ngOnInit() {\n\n    this.getFakeTeams(this.teams)  // BUG: doesn't seem to happen before getTeams is called!\n    //this.LoadFromJSON('teams.json')  //BUG: Not tested!!!\n  }\n\n  getTeams() {\n\n    this.getFakeTeams(this.teams)\n    return this.teams;\n  }\n\n  getFakeTeams(array: TeamType[]) {  // TODO: Should push, not replace...\n    array.push(\n      { name: \"T1\", icon: \"T1.png\", color: 'Magenta', fillColor: 'grey', shape: 1, note: \"\" },\n      { name: \"T2\", icon: \"T2.png\", color: 'Green', fillColor: 'blue', shape: 2, note: \"\" },\n      { name: \"T3\", icon: \"T3.png\", color: 'Red', fillColor: 'yellow', shape: 3, note: \"\" },\n      { name: \"T4\", icon: \"T4.png\", color: 'Blue', fillColor: 'aqua', shape: 4, note: \"\" },\n      { name: \"T5\", icon: \"T5.png\", color: 'Violet', fillColor: '#f03', shape: 5, note: \"\" },\n      { name: \"T6\", icon: \"T6.png\", color: 'DodgerBlue', fillColor: '#f03', shape: 1, note: \"\" },\n      { name: \"T7\", icon: \"T3.png\", color: 'Red', fillColor: 'yellow', shape: 3, note: \"\" },\n      { name: \"T8\", icon: \"T4.png\", color: 'Blue', fillColor: 'aqua', shape: 4, note: \"\" },\n      { name: \"T9\", icon: \"T5.png\", color: 'Violet', fillColor: '#f03', shape: 5, note: \"\" },\n      { name: \"T10\", icon: \"T6.png\", color: 'DodgerBlue', fillColor: '#f03', shape: 1, note: \"\" },\n      { name: \"T11\", icon: \"T3.png\", color: 'Red', fillColor: 'yellow', shape: 3, note: \"\" },\n      { name: \"T12\", icon: \"T4.png\", color: 'Blue', fillColor: 'aqua', shape: 4, note: \"\" },\n      { name: \"T13\", icon: \"T6.png\", color: 'DodgerBlue', fillColor: '#f03', shape: 1, note: \"\" },\n      { name: \"T14\", icon: \"T3.png\", color: 'Red', fillColor: 'yellow', shape: 3, note: \"\" },\n      { name: \"T15\", icon: \"T4.png\", color: 'Blue', fillColor: 'aqua', shape: 4, note: \"\" },\n      { name: \"T16\", icon: \"T5.png\", color: 'Violet', fillColor: '#f03', shape: 5, note: \"\" },\n      { name: \"T17\", icon: \"T6.png\", color: 'DodgerBlue', fillColor: '#f03', shape: 1, note: \"\" },\n      { name: \"T18\", icon: \"T3.png\", color: 'Red', fillColor: 'yellow', shape: 3, note: \"\" },\n      { name: \"T19\", icon: \"T4.png\", color: 'Blue', fillColor: 'aqua', shape: 4, note: \"\" },\n      { name: \"T20\", icon: \"T5.png\", color: 'Violet', fillColor: '#f03', shape: 5, note: \"\" },\n      { name: \"T21\", icon: \"T6.png\", color: 'DodgerBlue', fillColor: '#f03', shape: 1, note: \"\" },\n      { name: \"Other\", icon: \"Other.png\", color: 'Yellow', fillColor: '#f03', shape: 2, note: \"\" }\n    )\n  }\n  //LoadFromJSON(file: string) {\n\n  // https://rxjs.dev/deprecations/subscribe-arguments   --- this from pg 278\n  /*\n  this.httpClient.get('/team/123')\n    .subscribe(data => console.log('id: $(data.id} title: ${data.title}'),\n      (err: HttpErrorResponse) => console.log('Got error: $(err)')\n      */\n}\n\n\n\n/*\n@Injectable({ providedIn: 'root' })\nexport class Team {\n\n//name = \"\" \"T16\", icon: \"T5.png\", color: 'Violet', fillColor: '#f03', shape: 5, note: \"\" },\n\n  static nextId = 0 // BUG: OK if user restarts app during SAME mission #?\n  id: number\n  ts: TeamService\n  name: string\n  note: string\n\n  //icons: \n\n  constructor(//public test: Teams,\n    //public name: string, public icon: string, public color: string, public fillcolor: string, public shape: number, public note: string,\n    teamService: TeamService\n    ) {\n    this.id = Team.nextId++\n    this.ts = teamService\n    this.name = \"test name\"\n    this.note = \"test note\"\n    // add validation code here?! or in forms code?\n  }\n\n  //edit () {   }    TODO: wise to provide this option?!  JUST provide grid editing for now...\n\n  toString() {\n    return \"Team ID:\" + this.id +\n      \"; name: \" + this.name +\n      \"; note: \" + this.note +\n      \";; \"\n  }\n\n  // JUST provide grid editing for now...\n  addTeamRow(): void {\n    this.ts.getTeams().push({ name: \"new Team\", icon: \"Other.png\", color: 'white', fillColor: '#f03', shape: 1, note: \"\" })\n  }\n*/\n/*   models = ['Mercedes-AMG C63', 'BMW M2', 'Audi TT Roadster', 'Mazda MX-5', 'BMW M3', 'Porsche 718 Boxster', 'Porsche 718 Cayman',];\n  colors = ['Red', 'Black', 'Green', 'White', 'Blue'];\n  countries = ['UK', 'Spain', 'France', 'Ireland', 'USA'];\n\n  createRowData() {\n    var rowData = [];\n    for (var i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThreeWordsService.html":{"url":"injectables/ThreeWordsService.html","title":"injectable - ThreeWordsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThreeWordsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lazy/shared/services/three-words/three-words.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get3Words\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get3Words\n                        \n                    \n                \n            \n            \n                \nget3Words()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lazy/shared/services/three-words/three-words.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\n// {providedIn: 'root'} ) implies application-level singleton service. This registers service in Root Module Injector\n// of the Module Injector tree - thus available to entire application - whether eager or lazy loaded. If never used, it will be tree shaken out of final build)\n// Registering service in a @NgModule makes it available in that Module only (Singleton within the Module Scope) Using both makes it singleton for the rest of\n// application, while it creates a separate instance for the Module.   - https://www.tektutorialshub.com/angular/providedin-root-any-platform-in-angular/\n// Use ProvidedIn: any when you want every lazy-loaded module to get its own instance of the service. eagerly loaded modules always share the instance provided by the Root Module Injector\n\nexport class ThreeWordsService {\n\n  //constructor() { }\n\n  get3Words() {\n    return \"///verse.moving.miles\"\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UnsavedChangesGuard.html":{"url":"guards/UnsavedChangesGuard.html","title":"guard - UnsavedChangesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UnsavedChangesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/entry/unsavedChangesGuard .ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canDeactivate\n                        \n                    \n                \n            \n            \n                \ncanDeactivate(component: EntryComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/entry/unsavedChangesGuard .ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                EntryComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Component, Injectable } from '@angular/core';\n\nimport { CanDeactivate } from '@angular/router';\nimport { EntryComponent } from './entry.component';\n\n@Injectable()\nexport class UnsavedChangesGuard implements CanDeactivate {\n  canDeactivate(component: EntryComponent) {\n    if (component.callsignCtrl.dirty) {\n      return window.confirm(\"You have unsaved changes. Still want to leave?\")\n    } else {\n      return true;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utility.html":{"url":"classes/Utility.html","title":"class - Utility","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utility\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/utility.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sleep\n                            \n                            \n                                    Static\n                                strToLatLng\n                            \n                            \n                                    Static\n                                zeroFill\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sleep\n                        \n                    \n                \n            \n            \n                \n                    \n                    sleep(ms: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/utility.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ms\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        strToLatLng\n                        \n                    \n                \n            \n            \n                \n                    \n                    strToLatLng(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/utility.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        zeroFill\n                        \n                    \n                \n            \n            \n                \n                    \n                    zeroFill(integ: number, lngth: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/utility.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    integ\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lngth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Utility {\n\n  static sleep(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n  }\n\n  static strToLatLng(str: string) {\n    const latlngStr = str.split(\",\", 2);\n    return new google.maps.LatLng(parseFloat(latlngStr[0]), parseFloat(latlngStr[1]))\n  }\n\n  static zeroFill(integ: number, lngth: number) {\n    var strg = integ.toString();\n    while (strg.length \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/What3Words.html":{"url":"classes/What3Words.html","title":"class - What3Words","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  What3Words\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/3words.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                apiKey\n                            \n                            \n                                config\n                            \n                            \n                                    Static\n                                settings\n                            \n                            \n                                transport\n                            \n                            \n                                w3wService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                autoSuggestOptions_UNUSED\n                            \n                            \n                                Get3WordsFromLatLong\n                            \n                            \n                                getGrid\n                            \n                            \n                                GetLatLongFrom3Words\n                            \n                            \n                                ShapedAs3Words\n                            \n                            \n                                w3wAuto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/3words.ts:107\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"YBIMPRHH\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/3words.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n      host: 'https://api.what3words.com',\n      apiVersion: w3w.ApiVersion.Version3,  // or v3\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/3words.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://api.what3words.com/v3/autosuggest?key=\" + What3Words.apiKey + \"&input=index.home.r&n-results=5&focus=51.521251%2C-0.203586&clip-to-country=BE%2CGB\",\n    \"method\": \"GET\",\n    \"headers\": {}\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/3words.ts:164\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transport\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"axios\" | \"fetch\"\n\n                    \n                \n                \n                    \n                        Default value : 'fetch'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/3words.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        w3wService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     w3w.What3wordsService\n\n                    \n                \n                \n                    \n                        Default value : what3words(What3Words.apiKey, this.config,)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/3words.ts:107\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        autoSuggestOptions_UNUSED\n                        \n                    \n                \n            \n            \n                \n                    \n                    autoSuggestOptions_UNUSED()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/3words.ts:418\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Get3WordsFromLatLong\n                        \n                    \n                \n            \n            \n                \nGet3WordsFromLatLong(lat: number, lng: number, lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/3words.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    lat\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    lng\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGrid\n                        \n                    \n                \n            \n            \n                \ngetGrid(southwest: google.maps.LatLngLiteral, northeast: google.maps.LatLngLiteral)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/3words.ts:287\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    southwest\n                                    \n                                                google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    northeast\n                                    \n                                                google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetLatLongFrom3Words\n                        \n                    \n                \n            \n            \n                \nGetLatLongFrom3Words(threeWords: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/3words.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    threeWords\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ShapedAs3Words\n                        \n                    \n                \n            \n            \n                \nShapedAs3Words(threeWords: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/3words.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    threeWords\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        w3wAuto\n                        \n                    \n                \n            \n            \n                \nw3wAuto(w3wSuggestion: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/3words.ts:336\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    w3wSuggestion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common'\nimport { Component, Inject, OnInit, ViewChild, isDevMode } from '@angular/core'\nimport { AlertsComponent } from '../alerts/alerts.component'\n//import { UrlHandlingStrategy } from \"@angular/router\";\nimport { SettingsService } from \"./services\";\n\n// https://github.com/what3words/w3w-node-wrapper has the answers!!!\n//import * as W3W from \"@what3words/javascript-components\"\n// import what3words, { ApiVersion, What3wordsService, AutosuggestClient, AutosuggestOptions, AutosuggestResponse, ConvertToCoordinatesClient, ConvertToCoordinatesOptions, ConvertTo3waClient, ConvertTo3waOptions } from '@what3words/api';\nimport what3words, * as w3w from '@what3words/api';\n//import { W3W_REGEX } from \"@what3words/javascript-components/dist/types/lib/constants\";\nimport { GoogleMap } from '@angular/google-maps';\n// \n// mainly from https://developer.what3words.com/tutorial/javascript\n\n/*\nhttps://github.com/what3words/w3w-node-wrapper/issues/40\n See also: https://dev.to/przpiw/react-pdf-rendering-4g7b & https://github.com/angular/angular-cli/issues/20819\n\n\n./node_modules/@what3words/api/dist/lib/constants.js:4:11-24 - Error: Module not found: Error: Can't resolve 'os' in 'D:\\Projects\\RangerTrak\\rangertrak\\node_modules\\@what3words\\api\\dist\\lib'\n\nBREAKING CHANGE: webpack ';\n\n  //const\n  config: {\n    host: string,\n    apiVersion: w3w.ApiVersion,\n  } = {\n      host: 'https://api.what3words.com',\n      apiVersion: w3w.ApiVersion.Version3,  // or v3\n    };\n\n  /* The transport is a function responsible for executing the request against the API. Given a\n  ClientRequest the transport should return a promise that resolves to TransportResponse. */\n  // const\n  transport: 'axios' | 'fetch' = 'fetch';\n\n  /* The What3wordsService provides a quick and easy way to instantiate the API clients that can\n  be used to make requests against the what3words API. It also provides helper functions for\n  setting API configuration, such as host and API version and your API key across\n  the what3words API clients.*/\n  //const w3wService: What3wordsService = what3words(What3Words.apiKey, this.config, { this.transport });\n  //const\n  w3wService: w3w.What3wordsService = what3words(What3Words.apiKey, this.config,);\n\n  // Components.What3wordsAddress\n  // Components.What3wordsAutosuggest\n  // Components.What3wordsSymbol\n\n\n  constructor(\n    //@Inject(DOCUMENT) private document: Document\n  ) {\n\n  }\n  /*\n    reg = W3W_REGEX\n    w3w = W3W\n\n    a: What3wordsAddress = {\"iconColor\": \"red\",\n    \"link\": false,\n    \"showTooltip\": true,\n    \"size\": 5,\n    \"target\": \"target\",\n    \"textColor\": \"blue\",\n    \"tooltip\": true,\n    \"tooltipLocation\": \"top\",\n    \"words\": \"///existed.unanswered.articulated\"}\n\n    b: What3wordsAutosuggest = {\n      \"apiKey\": What3Words.apiKey,\n    \"autosuggest_focus\": \"existed.unanswered.articulated\",\n    \"base_url\": \"base\",\n    \"callback\": \"callback()\",\n    \"clip_to_bounding_box\": \"\",\n    \"clip_to_circle\": \"\",\n    \"clip_to_country\": \"US\",\n    \"clip_to_polygon\": \"\",\n    \"headers\": \"\",\n    \"initial_value\": \"\",\n    \"invalid_address_error_message\": \"Bad Address...\",\n    \"language\": \"English\",\n    \"n_focus_results\": 2,\n    \"name\": \"John\",\n    \"return_coordinates\": false,\n    \"typeahead_delay\": 5,\n    //\"variant\"//: Variant; // Can't find Variant...\n    }\n\n    c: What3wordsSymbol = {\"color\": \"green\",\n      \"size\": 7}\n\n    // reg\n    // w3w\n\n    test() {\n      // let x = W3W.\n    }\n  */\n\n  static settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://api.what3words.com/v3/autosuggest?key=\" + What3Words.apiKey + \"&input=index.home.r&n-results=5&focus=51.521251%2C-0.203586&clip-to-country=BE%2CGB\",\n    \"method\": \"GET\",\n    \"headers\": {}\n  }\n\n\n  ShapedAs3Words(threeWords: string): boolean {\n    // from https://developer.what3words.com/tutorial/detecting-if-text-is-in-the-format-of-a-3-word-address\n    var regex = /^\\/{0,}[^0-9`~!@#$%^&*()+\\-_=[{\\]}\\\\|'?/\";:£§º©®\\s]{1,}[.｡。･・︒។։။۔።।][^0-9`~!@#$%^&*()+\\-_=[{\\]}\\\\|'?/\";:£§º©®\\s]{1,}[.｡。･・︒។։။۔።।][^0-9`~!@#$%^&*()+\\-_=[{\\]}\\\\|'?/\";:£§º©®\\s]{1,}$/;\n\n    if (regex.test(threeWords))\n      // is the format of a three word address\n      return true\n    else\n      // is NOT a three word address\n      return false\n  }\n\n  Get3WordsFromLatLong(lat: number, lng: number, lang: string = 'en'): string {\n    /**\n     * Converts a coordinate to a 3 word address\n     * @param {Object} coordinates - The coordinate object\n     * @param {number} coordinates.lat - The latitude\n     * @param {number} coordinates.lng - The longitude\n     * @param {string} [language=en] - The language to return the 3 word address in\n     * @returns {Promise} Promise 3 word address response\n     */\n\n    /* Property 'convertTo3wa' does not exist on type '(apiKey?: string | undefined, config?: ApiClientConfiguration | undefined, opts?: { transport: \"axios\" | \"fetch\" | Transport; } | undefined) => What3wordsService'. */\n\n    const client: w3w.ConvertTo3waClient = w3w.ConvertTo3waClient.init(What3Words.apiKey)\n    const options: w3w.ConvertTo3waOptions = { coordinates: { lat: lat, lng: lng } };\n    // debugger\n    client.run(options)\n      .then((res: any/*ConvertTo3waResponse*/) => console.log('Convert to 3wa', res));\n    // debugger\n\n    /*\n        w3w.ConvertTo3waClient.convertTo3wa({ lat, lng }, lang)\n          .then(function (response: any) {\n            console.log(\"[convertTo3wa]\", JSON.stringify(response));\n            return response\n          })\n          .catch(function (error: any) {\n            console.log(\"[code]\", error.code);\n            console.log(\"[message]\", error.message)\n            return `Error: [code]: ${error.code} [message]: ${error.message}`\n          })\n          */\n    return \"No suggested 3 words\"\n  }\n\n  GetLatLongFrom3Words(threeWords: string) {\n    /**\n     * Returns coordinates for a 3 word address\n     * @param {string} words - The 3 word address words to convert to coordinates\n     * @returns {Promise} - Promise coordinates response\n     */\n\n\n    const client: w3w.ConvertToCoordinatesClient = w3w.ConvertToCoordinatesClient.init(What3Words.apiKey)\n    const options: w3w.ConvertToCoordinatesOptions = { words: threeWords };\n\n    // debugger\n    client.run(options)\n      .then((res: any /*ConvertToCoordinatesResponse*/) => console.log('Convert to coordinates', res));\n    // debugger\n\n    /*\n        w3w.convertToCoordinates(\"filled.count.soap\")\n          .then(function (response: any) {\n            console.log(\"[convertToCoordinates]\", response);\n          })\n          .catch(function (error: any) {\n            console.log(\"[code]\", error.code);\n            console.log(\"[message]\", error.message);\n          })\n    */\n\n    if (threeWords.length) {\n      // something entered...\n\n      console.log(\"3Words='\" + threeWords + \"'\")\n      /*\n            w3w.autosuggest(threeWords, {\n              nFocusResults: 1,\n              //clipTo####: [\"US\"], - done by default\n              // TODO: cliptoboundingbox: { south_lat, west_lng, north_lat, east_lng }, // Clip prevents ANY values outside region\n              focus: { lat: SettingsService.Settings.defLat, lng: SettingsService.Settings.defLong }, // Focus prioritizes words closer to this point\n              nResults: 1\n            })\n              .then(function (response: any) {\n                what3words.api.verifiedWords = response.suggestions[0].words\n                console.log(\"Verified Words='\" + what3words.api.verifiedWords + \"'\")\n                if (threeWords != what3words.api.verifiedWords) {\n                  // TODO: Don't tie to HTML!!!\n                  document.getElementById(\"addressLabel\")!.textContent = \" Verified as: \" + what3words.api.verifiedWords\n                } else {\n                  document.getElementById(\"addressLabel\")!.textContent = \" Verified.\"\n                }\n                what3words.api.convertToCoordinates(what3words.api.verifiedWords).then(function (response: any) {\n                  //async call HAS returned!\n                  what3words.api.updateCoords(response.coordinates.lat, response.coordinates.lng)\n                  // NOTE: Not saving nearest place: too vague to be of value\n                  document.getElementById(\"addressLabel\")!.textContent += \" Near: \" + response.nearestPlace\n                })\n              })\n              .catch(function (error: any) {\n                let errMsg = \"[code]=\" + error.code + \" [message]=\" + error.message + \".\"\n                console.log(\"Unable to verify 3 words entered: \" + errMsg)\n                document.getElementById(\"addressLabel\")!.textContent = \"*** Not able to verify 3 words! ***\"\n              })\n              */\n    }\n    // async call not returned yet\n\n  }\n\n\n\n  getGrid(southwest: google.maps.LatLngLiteral, northeast: google.maps.LatLngLiteral) {\n    /**\n   * Returns a section of the what3words grid\n   * @param {Object} boundingBox - The bounding box for the grid to return\n   * @param {Object} [boundingBox.southwest] - The coordinates of the southwest corner of the bounding box\n   * @param {Object} [boundingBox.southwest.lat] - The latitude of the southwest corner of the bounding box\n   * @param {Object} [boundingBox.southwest.lng] - The longitude of the southwest corner of the bounding box\n   * @param {Object} [boundingBox.northeast] - The coordinates of the northeast corner of the bounding box\n   * @param {Object} [boundingBox.northeast.lat] - The latitude of the northeast corner of the bounding box\n   * @param {Object} [boundingBox.northeast.lng] - The longitude of the northeast corner of the bounding box\n   * @return {Promise} - Promise the grid section\n   */\n\n    // see https://github.com/what3words/w3w-node-wrapper#grid-section\n    /*\n    w3w.gridSection({\n      southwest: southwest, // { lat: 51.508341, lng: -0.125499 },\n      northeast: northeast // { lat: 51.507341, lng: -0.124499 }\n    })\n      .then(function (response: any) {\n        console.log(\"[gridSection]\", response)\n      })\n      .catch(function (error: any) {\n        console.log(\"[code]\", error.code)\n        console.log(\"[message]\", error.message);\n      })\n  }\n\n\n  /*\n  $.ajax(settings).done(function (response) {\n    MAIN.dbug(\"ddd=\" + response)\n  })\n    */\n\n    // No 3 word results outside these values allowed!!\n    // south_lat \n        console.log(`suggestions for \"${w3wSuggestion}\"`, JSON.stringify(res))\n      );\n      // debugger\n    return res\n\n/*\n\"apiKey\": string;\n  \"autosuggest_focus\": string;\n  \"base_url\": string;\n  \"callback\": string;\n  \"clip_to_bounding_box\": string;\n  \"clip_to_circle\": string;\n  \"clip_to_country\": string;\n  \"clip_to_polygon\": string;\n  \"headers\": string;\n  \"initial_value\": string;\n  \"invalid_address_error_message\": string;\n  \"language\": string;\n  \"n_focus_results\": number;\n  \"name\": string;\n  \"return_coordinates\": boolean;\n  \"typeahead_delay\": number;\n  */\n\n\n    /*   what3words.api.autosuggest(\"freshen.overlook.clo\", {\n         nFocusResults: 1,\n         clipToCountry: [\"FR\"],\n         focus: { lat: 48.856618, lng: 2.3522411 },\n         nResults: 1\n\n       })\n         .then(function (response: { suggestions: { words: any }[] }) {\n           var words = response.suggestions[0].words;\n\n           let top3wa = document.getElementById(\"top3wa\");\n           top3wa!.innerHTML += words;\n\n           what3words.api.convertToCoordinates(words).then(function (response: { coordinates: { lat: string; lng: string }; nearestPlace: string }) {\n             let coords = document.getElementById(\"coords\");\n             let nearestPlace = document.getElementById(\"nearest_place\");\n\n             coords!.innerHTML += response.coordinates.lat + ', ' + response.coordinates.lng;\n             nearestPlace!.innerHTML += response.nearestPlace;\n           });\n         })\n         .catch(function (error: { code: any; message: any; }) {\n           console.log(\"[code]\", error.code);\n           console.log(\"[message]\", error.message);\n         });\n   */\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // Javascript autosuggest tutorial:\n  // https://developer.what3words.com/tutorial/javascript-autosuggest-component-v4\n  private autoSuggestOptions_UNUSED() {\n    /* AutoSuggest\n    When presented with a 3 words address which may be incorrectly entered, AutoSuggest returns a list of potential correct 3 word addresses. It needs the first two words plus at least the first character of the third word to produce suggestions.\n\n    This method provides corrections for mis-typed words (including plural VS singular), and words being in the wrong order.\n\n    Optionally, clipping can narrow down the possibilities, and limit results to:\n\n    One or more countries\n    A geographic area (a circle, box or polygon)\n    This dramatically improves results, so we recommend that you use clipping if possible.\n\n    To improve results even further, set the focus to user’s current location. This will make autosuggest return results which are closer to the user.\n\n    More information about autosuggest, including returned results is available in the what3words REST API documentation.\n\n    Example: Basic Autosuggest call\n    */\n    /**\n     * Returns autosuggest results for a search term\n     * @param {string} input - The input to search for autosuggests\n     * @param {Object} [options] - The result filter and clipping options\n     * @param {Object} [options.focus] - The coordinates for the focus of the search\n     * @param {number} [options.focus.lat] - The latitude of the focus\n     * @param {number} [options.focus.lng] - The longitude of the focus\n     * @param {string} [options.nFocusResults] - The number of focused results\n     * @param {string[]} [options.clipToCountry] - The countries to clip results to\n     * @param {Object} [options.clipToBoundingBox] - The bounding box to clip results within\n     * @param {Object} [options.clipToBoundingBox.southwest] - The coordinates of the southwest corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.southwest.lat] - The latitude of the southwest corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.southwest.lng] - The longitude of the southwest corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.northeast] - The coordinates of the northeast corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.northeast.lat] - The latitude of the northeast corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.northeast.lng] - The longitude of the northeast corner of the clipping box\n     * @param {Object} [options.clipToCircle] - The circle to clip results within\n     * @param {Object} [options.clipToCircle.center] - The center of the circle to clip results within\n     * @param {number} [options.clipToCircle.center.lat] - The latitude of the center of the circle to clip results within\n     * @param {number} [options.clipToCircle.center.lng] - The longitude of the center of the circle to clip results within\n     * @param {number} [options.clipToCircle.radius] - The radius of the circle to clip results within\n     * @param {number[]} [options.clipToPolygon] - An array of polygon coordinates to clip results within\n     * @param {string} [options.inputType] - 'text' | 'vocon-hybrid' | 'nmdp-asr' | 'generic-voice'\n     * @param {string} [options.language] - The language to return autosuggest results in\n     * @param {boolean} [options.preferLang] - Whether to bias towards results that are over land vs over the sea.\n     * @returns {Promise} - Promise 3 word address autosuggestions response\n     **/\n    /*\n    w3w.autosuggest(\"fun.with.code\")\n      .then(function (response: any) {\n        console.log(\"[autosuggest]\", response);\n      })\n      .catch(function (error: any) {\n        console.log(\"[code]\", error.code);\n        console.log(\"[message]\", error.message);\n      })\n\n    // Other AutoSuggest forms\n    what3words.api.autosuggest(\"fun.with.code\", { clipToCountry: [\"FR\", \"DE\"] }).then(function (response: any) { console.log(\"[autosuggest]\", response) })\n    what3words.api.autosuggest(\"fun.with.code\", { clipToCircle: { center: { lat: 51.4243877, lng: -0.34745 }, radius: 50 } })\n    what3words.api.autosuggest(\"fun.with.code\", { clipToPolygon: [51.421, -0.343, 52.6, 2.3324, 54.234, 8.343, 51.421, -0.343] })\n    what3words.api.autosuggest(\"fun.with.code\", {\n      clipToBoundingBox: {\n        southwest: { lat: 51.521, lng: -0.343 },\n        northeast: { lat: 52.6, lng: 2.3324 }\n      }\n    })\n    what3words.api.autosuggest(\"fun.with.code\", { focus: { lat: 51.4243877, lng: -0.34745 } })\n    what3words.api.autosuggest(\"fun with code\", { inputType: \"generic-voice\", language: \"en\" })\n    */\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/What3wordsAddress33.html":{"url":"interfaces/What3wordsAddress33.html","title":"interface - What3wordsAddress33","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  What3wordsAddress33\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/3words.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            iconColor\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                        \n                                            showTooltip\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            textColor\n                                        \n                                \n                                \n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                        \n                                            tooltipLocation\n                                        \n                                \n                                \n                                        \n                                            words\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        iconColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showTooltip:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltipLocation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltipLocation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        words\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        words:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common'\nimport { Component, Inject, OnInit, ViewChild, isDevMode } from '@angular/core'\nimport { AlertsComponent } from '../alerts/alerts.component'\n//import { UrlHandlingStrategy } from \"@angular/router\";\nimport { SettingsService } from \"./services\";\n\n// https://github.com/what3words/w3w-node-wrapper has the answers!!!\n//import * as W3W from \"@what3words/javascript-components\"\n// import what3words, { ApiVersion, What3wordsService, AutosuggestClient, AutosuggestOptions, AutosuggestResponse, ConvertToCoordinatesClient, ConvertToCoordinatesOptions, ConvertTo3waClient, ConvertTo3waOptions } from '@what3words/api';\nimport what3words, * as w3w from '@what3words/api';\n//import { W3W_REGEX } from \"@what3words/javascript-components/dist/types/lib/constants\";\nimport { GoogleMap } from '@angular/google-maps';\n// \n// mainly from https://developer.what3words.com/tutorial/javascript\n\n/*\nhttps://github.com/what3words/w3w-node-wrapper/issues/40\n See also: https://dev.to/przpiw/react-pdf-rendering-4g7b & https://github.com/angular/angular-cli/issues/20819\n\n\n./node_modules/@what3words/api/dist/lib/constants.js:4:11-24 - Error: Module not found: Error: Can't resolve 'os' in 'D:\\Projects\\RangerTrak\\rangertrak\\node_modules\\@what3words\\api\\dist\\lib'\n\nBREAKING CHANGE: webpack ';\n\n  //const\n  config: {\n    host: string,\n    apiVersion: w3w.ApiVersion,\n  } = {\n      host: 'https://api.what3words.com',\n      apiVersion: w3w.ApiVersion.Version3,  // or v3\n    };\n\n  /* The transport is a function responsible for executing the request against the API. Given a\n  ClientRequest the transport should return a promise that resolves to TransportResponse. */\n  // const\n  transport: 'axios' | 'fetch' = 'fetch';\n\n  /* The What3wordsService provides a quick and easy way to instantiate the API clients that can\n  be used to make requests against the what3words API. It also provides helper functions for\n  setting API configuration, such as host and API version and your API key across\n  the what3words API clients.*/\n  //const w3wService: What3wordsService = what3words(What3Words.apiKey, this.config, { this.transport });\n  //const\n  w3wService: w3w.What3wordsService = what3words(What3Words.apiKey, this.config,);\n\n  // Components.What3wordsAddress\n  // Components.What3wordsAutosuggest\n  // Components.What3wordsSymbol\n\n\n  constructor(\n    //@Inject(DOCUMENT) private document: Document\n  ) {\n\n  }\n  /*\n    reg = W3W_REGEX\n    w3w = W3W\n\n    a: What3wordsAddress = {\"iconColor\": \"red\",\n    \"link\": false,\n    \"showTooltip\": true,\n    \"size\": 5,\n    \"target\": \"target\",\n    \"textColor\": \"blue\",\n    \"tooltip\": true,\n    \"tooltipLocation\": \"top\",\n    \"words\": \"///existed.unanswered.articulated\"}\n\n    b: What3wordsAutosuggest = {\n      \"apiKey\": What3Words.apiKey,\n    \"autosuggest_focus\": \"existed.unanswered.articulated\",\n    \"base_url\": \"base\",\n    \"callback\": \"callback()\",\n    \"clip_to_bounding_box\": \"\",\n    \"clip_to_circle\": \"\",\n    \"clip_to_country\": \"US\",\n    \"clip_to_polygon\": \"\",\n    \"headers\": \"\",\n    \"initial_value\": \"\",\n    \"invalid_address_error_message\": \"Bad Address...\",\n    \"language\": \"English\",\n    \"n_focus_results\": 2,\n    \"name\": \"John\",\n    \"return_coordinates\": false,\n    \"typeahead_delay\": 5,\n    //\"variant\"//: Variant; // Can't find Variant...\n    }\n\n    c: What3wordsSymbol = {\"color\": \"green\",\n      \"size\": 7}\n\n    // reg\n    // w3w\n\n    test() {\n      // let x = W3W.\n    }\n  */\n\n  static settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://api.what3words.com/v3/autosuggest?key=\" + What3Words.apiKey + \"&input=index.home.r&n-results=5&focus=51.521251%2C-0.203586&clip-to-country=BE%2CGB\",\n    \"method\": \"GET\",\n    \"headers\": {}\n  }\n\n\n  ShapedAs3Words(threeWords: string): boolean {\n    // from https://developer.what3words.com/tutorial/detecting-if-text-is-in-the-format-of-a-3-word-address\n    var regex = /^\\/{0,}[^0-9`~!@#$%^&*()+\\-_=[{\\]}\\\\|'?/\";:£§º©®\\s]{1,}[.｡。･・︒។։။۔።।][^0-9`~!@#$%^&*()+\\-_=[{\\]}\\\\|'?/\";:£§º©®\\s]{1,}[.｡。･・︒។։။۔።।][^0-9`~!@#$%^&*()+\\-_=[{\\]}\\\\|'?/\";:£§º©®\\s]{1,}$/;\n\n    if (regex.test(threeWords))\n      // is the format of a three word address\n      return true\n    else\n      // is NOT a three word address\n      return false\n  }\n\n  Get3WordsFromLatLong(lat: number, lng: number, lang: string = 'en'): string {\n    /**\n     * Converts a coordinate to a 3 word address\n     * @param {Object} coordinates - The coordinate object\n     * @param {number} coordinates.lat - The latitude\n     * @param {number} coordinates.lng - The longitude\n     * @param {string} [language=en] - The language to return the 3 word address in\n     * @returns {Promise} Promise 3 word address response\n     */\n\n    /* Property 'convertTo3wa' does not exist on type '(apiKey?: string | undefined, config?: ApiClientConfiguration | undefined, opts?: { transport: \"axios\" | \"fetch\" | Transport; } | undefined) => What3wordsService'. */\n\n    const client: w3w.ConvertTo3waClient = w3w.ConvertTo3waClient.init(What3Words.apiKey)\n    const options: w3w.ConvertTo3waOptions = { coordinates: { lat: lat, lng: lng } };\n    // debugger\n    client.run(options)\n      .then((res: any/*ConvertTo3waResponse*/) => console.log('Convert to 3wa', res));\n    // debugger\n\n    /*\n        w3w.ConvertTo3waClient.convertTo3wa({ lat, lng }, lang)\n          .then(function (response: any) {\n            console.log(\"[convertTo3wa]\", JSON.stringify(response));\n            return response\n          })\n          .catch(function (error: any) {\n            console.log(\"[code]\", error.code);\n            console.log(\"[message]\", error.message)\n            return `Error: [code]: ${error.code} [message]: ${error.message}`\n          })\n          */\n    return \"No suggested 3 words\"\n  }\n\n  GetLatLongFrom3Words(threeWords: string) {\n    /**\n     * Returns coordinates for a 3 word address\n     * @param {string} words - The 3 word address words to convert to coordinates\n     * @returns {Promise} - Promise coordinates response\n     */\n\n\n    const client: w3w.ConvertToCoordinatesClient = w3w.ConvertToCoordinatesClient.init(What3Words.apiKey)\n    const options: w3w.ConvertToCoordinatesOptions = { words: threeWords };\n\n    // debugger\n    client.run(options)\n      .then((res: any /*ConvertToCoordinatesResponse*/) => console.log('Convert to coordinates', res));\n    // debugger\n\n    /*\n        w3w.convertToCoordinates(\"filled.count.soap\")\n          .then(function (response: any) {\n            console.log(\"[convertToCoordinates]\", response);\n          })\n          .catch(function (error: any) {\n            console.log(\"[code]\", error.code);\n            console.log(\"[message]\", error.message);\n          })\n    */\n\n    if (threeWords.length) {\n      // something entered...\n\n      console.log(\"3Words='\" + threeWords + \"'\")\n      /*\n            w3w.autosuggest(threeWords, {\n              nFocusResults: 1,\n              //clipTo####: [\"US\"], - done by default\n              // TODO: cliptoboundingbox: { south_lat, west_lng, north_lat, east_lng }, // Clip prevents ANY values outside region\n              focus: { lat: SettingsService.Settings.defLat, lng: SettingsService.Settings.defLong }, // Focus prioritizes words closer to this point\n              nResults: 1\n            })\n              .then(function (response: any) {\n                what3words.api.verifiedWords = response.suggestions[0].words\n                console.log(\"Verified Words='\" + what3words.api.verifiedWords + \"'\")\n                if (threeWords != what3words.api.verifiedWords) {\n                  // TODO: Don't tie to HTML!!!\n                  document.getElementById(\"addressLabel\")!.textContent = \" Verified as: \" + what3words.api.verifiedWords\n                } else {\n                  document.getElementById(\"addressLabel\")!.textContent = \" Verified.\"\n                }\n                what3words.api.convertToCoordinates(what3words.api.verifiedWords).then(function (response: any) {\n                  //async call HAS returned!\n                  what3words.api.updateCoords(response.coordinates.lat, response.coordinates.lng)\n                  // NOTE: Not saving nearest place: too vague to be of value\n                  document.getElementById(\"addressLabel\")!.textContent += \" Near: \" + response.nearestPlace\n                })\n              })\n              .catch(function (error: any) {\n                let errMsg = \"[code]=\" + error.code + \" [message]=\" + error.message + \".\"\n                console.log(\"Unable to verify 3 words entered: \" + errMsg)\n                document.getElementById(\"addressLabel\")!.textContent = \"*** Not able to verify 3 words! ***\"\n              })\n              */\n    }\n    // async call not returned yet\n\n  }\n\n\n\n  getGrid(southwest: google.maps.LatLngLiteral, northeast: google.maps.LatLngLiteral) {\n    /**\n   * Returns a section of the what3words grid\n   * @param {Object} boundingBox - The bounding box for the grid to return\n   * @param {Object} [boundingBox.southwest] - The coordinates of the southwest corner of the bounding box\n   * @param {Object} [boundingBox.southwest.lat] - The latitude of the southwest corner of the bounding box\n   * @param {Object} [boundingBox.southwest.lng] - The longitude of the southwest corner of the bounding box\n   * @param {Object} [boundingBox.northeast] - The coordinates of the northeast corner of the bounding box\n   * @param {Object} [boundingBox.northeast.lat] - The latitude of the northeast corner of the bounding box\n   * @param {Object} [boundingBox.northeast.lng] - The longitude of the northeast corner of the bounding box\n   * @return {Promise} - Promise the grid section\n   */\n\n    // see https://github.com/what3words/w3w-node-wrapper#grid-section\n    /*\n    w3w.gridSection({\n      southwest: southwest, // { lat: 51.508341, lng: -0.125499 },\n      northeast: northeast // { lat: 51.507341, lng: -0.124499 }\n    })\n      .then(function (response: any) {\n        console.log(\"[gridSection]\", response)\n      })\n      .catch(function (error: any) {\n        console.log(\"[code]\", error.code)\n        console.log(\"[message]\", error.message);\n      })\n  }\n\n\n  /*\n  $.ajax(settings).done(function (response) {\n    MAIN.dbug(\"ddd=\" + response)\n  })\n    */\n\n    // No 3 word results outside these values allowed!!\n    // south_lat \n        console.log(`suggestions for \"${w3wSuggestion}\"`, JSON.stringify(res))\n      );\n      // debugger\n    return res\n\n/*\n\"apiKey\": string;\n  \"autosuggest_focus\": string;\n  \"base_url\": string;\n  \"callback\": string;\n  \"clip_to_bounding_box\": string;\n  \"clip_to_circle\": string;\n  \"clip_to_country\": string;\n  \"clip_to_polygon\": string;\n  \"headers\": string;\n  \"initial_value\": string;\n  \"invalid_address_error_message\": string;\n  \"language\": string;\n  \"n_focus_results\": number;\n  \"name\": string;\n  \"return_coordinates\": boolean;\n  \"typeahead_delay\": number;\n  */\n\n\n    /*   what3words.api.autosuggest(\"freshen.overlook.clo\", {\n         nFocusResults: 1,\n         clipToCountry: [\"FR\"],\n         focus: { lat: 48.856618, lng: 2.3522411 },\n         nResults: 1\n\n       })\n         .then(function (response: { suggestions: { words: any }[] }) {\n           var words = response.suggestions[0].words;\n\n           let top3wa = document.getElementById(\"top3wa\");\n           top3wa!.innerHTML += words;\n\n           what3words.api.convertToCoordinates(words).then(function (response: { coordinates: { lat: string; lng: string }; nearestPlace: string }) {\n             let coords = document.getElementById(\"coords\");\n             let nearestPlace = document.getElementById(\"nearest_place\");\n\n             coords!.innerHTML += response.coordinates.lat + ', ' + response.coordinates.lng;\n             nearestPlace!.innerHTML += response.nearestPlace;\n           });\n         })\n         .catch(function (error: { code: any; message: any; }) {\n           console.log(\"[code]\", error.code);\n           console.log(\"[message]\", error.message);\n         });\n   */\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // Javascript autosuggest tutorial:\n  // https://developer.what3words.com/tutorial/javascript-autosuggest-component-v4\n  private autoSuggestOptions_UNUSED() {\n    /* AutoSuggest\n    When presented with a 3 words address which may be incorrectly entered, AutoSuggest returns a list of potential correct 3 word addresses. It needs the first two words plus at least the first character of the third word to produce suggestions.\n\n    This method provides corrections for mis-typed words (including plural VS singular), and words being in the wrong order.\n\n    Optionally, clipping can narrow down the possibilities, and limit results to:\n\n    One or more countries\n    A geographic area (a circle, box or polygon)\n    This dramatically improves results, so we recommend that you use clipping if possible.\n\n    To improve results even further, set the focus to user’s current location. This will make autosuggest return results which are closer to the user.\n\n    More information about autosuggest, including returned results is available in the what3words REST API documentation.\n\n    Example: Basic Autosuggest call\n    */\n    /**\n     * Returns autosuggest results for a search term\n     * @param {string} input - The input to search for autosuggests\n     * @param {Object} [options] - The result filter and clipping options\n     * @param {Object} [options.focus] - The coordinates for the focus of the search\n     * @param {number} [options.focus.lat] - The latitude of the focus\n     * @param {number} [options.focus.lng] - The longitude of the focus\n     * @param {string} [options.nFocusResults] - The number of focused results\n     * @param {string[]} [options.clipToCountry] - The countries to clip results to\n     * @param {Object} [options.clipToBoundingBox] - The bounding box to clip results within\n     * @param {Object} [options.clipToBoundingBox.southwest] - The coordinates of the southwest corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.southwest.lat] - The latitude of the southwest corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.southwest.lng] - The longitude of the southwest corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.northeast] - The coordinates of the northeast corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.northeast.lat] - The latitude of the northeast corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.northeast.lng] - The longitude of the northeast corner of the clipping box\n     * @param {Object} [options.clipToCircle] - The circle to clip results within\n     * @param {Object} [options.clipToCircle.center] - The center of the circle to clip results within\n     * @param {number} [options.clipToCircle.center.lat] - The latitude of the center of the circle to clip results within\n     * @param {number} [options.clipToCircle.center.lng] - The longitude of the center of the circle to clip results within\n     * @param {number} [options.clipToCircle.radius] - The radius of the circle to clip results within\n     * @param {number[]} [options.clipToPolygon] - An array of polygon coordinates to clip results within\n     * @param {string} [options.inputType] - 'text' | 'vocon-hybrid' | 'nmdp-asr' | 'generic-voice'\n     * @param {string} [options.language] - The language to return autosuggest results in\n     * @param {boolean} [options.preferLang] - Whether to bias towards results that are over land vs over the sea.\n     * @returns {Promise} - Promise 3 word address autosuggestions response\n     **/\n    /*\n    w3w.autosuggest(\"fun.with.code\")\n      .then(function (response: any) {\n        console.log(\"[autosuggest]\", response);\n      })\n      .catch(function (error: any) {\n        console.log(\"[code]\", error.code);\n        console.log(\"[message]\", error.message);\n      })\n\n    // Other AutoSuggest forms\n    what3words.api.autosuggest(\"fun.with.code\", { clipToCountry: [\"FR\", \"DE\"] }).then(function (response: any) { console.log(\"[autosuggest]\", response) })\n    what3words.api.autosuggest(\"fun.with.code\", { clipToCircle: { center: { lat: 51.4243877, lng: -0.34745 }, radius: 50 } })\n    what3words.api.autosuggest(\"fun.with.code\", { clipToPolygon: [51.421, -0.343, 52.6, 2.3324, 54.234, 8.343, 51.421, -0.343] })\n    what3words.api.autosuggest(\"fun.with.code\", {\n      clipToBoundingBox: {\n        southwest: { lat: 51.521, lng: -0.343 },\n        northeast: { lat: 52.6, lng: 2.3324 }\n      }\n    })\n    what3words.api.autosuggest(\"fun.with.code\", { focus: { lat: 51.4243877, lng: -0.34745 } })\n    what3words.api.autosuggest(\"fun with code\", { inputType: \"generic-voice\", language: \"en\" })\n    */\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/What3wordsAutosuggest33.html":{"url":"interfaces/What3wordsAutosuggest33.html","title":"interface - What3wordsAutosuggest33","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  What3wordsAutosuggest33\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/3words.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apiKey\n                                        \n                                \n                                \n                                        \n                                            autosuggest_focus\n                                        \n                                \n                                \n                                        \n                                            base_url\n                                        \n                                \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            clip_to_bounding_box\n                                        \n                                \n                                \n                                        \n                                            clip_to_circle\n                                        \n                                \n                                \n                                        \n                                            clip_to_country\n                                        \n                                \n                                \n                                        \n                                            clip_to_polygon\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            initial_value\n                                        \n                                \n                                \n                                        \n                                            invalid_address_error_message\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            n_focus_results\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            return_coordinates\n                                        \n                                \n                                \n                                        \n                                            typeahead_delay\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autosuggest_focus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autosuggest_focus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        base_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clip_to_bounding_box\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clip_to_bounding_box:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clip_to_circle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clip_to_circle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clip_to_country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clip_to_country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clip_to_polygon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clip_to_polygon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initial_value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial_value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalid_address_error_message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invalid_address_error_message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        n_focus_results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        n_focus_results:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        return_coordinates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        return_coordinates:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typeahead_delay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        typeahead_delay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common'\nimport { Component, Inject, OnInit, ViewChild, isDevMode } from '@angular/core'\nimport { AlertsComponent } from '../alerts/alerts.component'\n//import { UrlHandlingStrategy } from \"@angular/router\";\nimport { SettingsService } from \"./services\";\n\n// https://github.com/what3words/w3w-node-wrapper has the answers!!!\n//import * as W3W from \"@what3words/javascript-components\"\n// import what3words, { ApiVersion, What3wordsService, AutosuggestClient, AutosuggestOptions, AutosuggestResponse, ConvertToCoordinatesClient, ConvertToCoordinatesOptions, ConvertTo3waClient, ConvertTo3waOptions } from '@what3words/api';\nimport what3words, * as w3w from '@what3words/api';\n//import { W3W_REGEX } from \"@what3words/javascript-components/dist/types/lib/constants\";\nimport { GoogleMap } from '@angular/google-maps';\n// \n// mainly from https://developer.what3words.com/tutorial/javascript\n\n/*\nhttps://github.com/what3words/w3w-node-wrapper/issues/40\n See also: https://dev.to/przpiw/react-pdf-rendering-4g7b & https://github.com/angular/angular-cli/issues/20819\n\n\n./node_modules/@what3words/api/dist/lib/constants.js:4:11-24 - Error: Module not found: Error: Can't resolve 'os' in 'D:\\Projects\\RangerTrak\\rangertrak\\node_modules\\@what3words\\api\\dist\\lib'\n\nBREAKING CHANGE: webpack ';\n\n  //const\n  config: {\n    host: string,\n    apiVersion: w3w.ApiVersion,\n  } = {\n      host: 'https://api.what3words.com',\n      apiVersion: w3w.ApiVersion.Version3,  // or v3\n    };\n\n  /* The transport is a function responsible for executing the request against the API. Given a\n  ClientRequest the transport should return a promise that resolves to TransportResponse. */\n  // const\n  transport: 'axios' | 'fetch' = 'fetch';\n\n  /* The What3wordsService provides a quick and easy way to instantiate the API clients that can\n  be used to make requests against the what3words API. It also provides helper functions for\n  setting API configuration, such as host and API version and your API key across\n  the what3words API clients.*/\n  //const w3wService: What3wordsService = what3words(What3Words.apiKey, this.config, { this.transport });\n  //const\n  w3wService: w3w.What3wordsService = what3words(What3Words.apiKey, this.config,);\n\n  // Components.What3wordsAddress\n  // Components.What3wordsAutosuggest\n  // Components.What3wordsSymbol\n\n\n  constructor(\n    //@Inject(DOCUMENT) private document: Document\n  ) {\n\n  }\n  /*\n    reg = W3W_REGEX\n    w3w = W3W\n\n    a: What3wordsAddress = {\"iconColor\": \"red\",\n    \"link\": false,\n    \"showTooltip\": true,\n    \"size\": 5,\n    \"target\": \"target\",\n    \"textColor\": \"blue\",\n    \"tooltip\": true,\n    \"tooltipLocation\": \"top\",\n    \"words\": \"///existed.unanswered.articulated\"}\n\n    b: What3wordsAutosuggest = {\n      \"apiKey\": What3Words.apiKey,\n    \"autosuggest_focus\": \"existed.unanswered.articulated\",\n    \"base_url\": \"base\",\n    \"callback\": \"callback()\",\n    \"clip_to_bounding_box\": \"\",\n    \"clip_to_circle\": \"\",\n    \"clip_to_country\": \"US\",\n    \"clip_to_polygon\": \"\",\n    \"headers\": \"\",\n    \"initial_value\": \"\",\n    \"invalid_address_error_message\": \"Bad Address...\",\n    \"language\": \"English\",\n    \"n_focus_results\": 2,\n    \"name\": \"John\",\n    \"return_coordinates\": false,\n    \"typeahead_delay\": 5,\n    //\"variant\"//: Variant; // Can't find Variant...\n    }\n\n    c: What3wordsSymbol = {\"color\": \"green\",\n      \"size\": 7}\n\n    // reg\n    // w3w\n\n    test() {\n      // let x = W3W.\n    }\n  */\n\n  static settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://api.what3words.com/v3/autosuggest?key=\" + What3Words.apiKey + \"&input=index.home.r&n-results=5&focus=51.521251%2C-0.203586&clip-to-country=BE%2CGB\",\n    \"method\": \"GET\",\n    \"headers\": {}\n  }\n\n\n  ShapedAs3Words(threeWords: string): boolean {\n    // from https://developer.what3words.com/tutorial/detecting-if-text-is-in-the-format-of-a-3-word-address\n    var regex = /^\\/{0,}[^0-9`~!@#$%^&*()+\\-_=[{\\]}\\\\|'?/\";:£§º©®\\s]{1,}[.｡。･・︒។։။۔።।][^0-9`~!@#$%^&*()+\\-_=[{\\]}\\\\|'?/\";:£§º©®\\s]{1,}[.｡。･・︒។։။۔።।][^0-9`~!@#$%^&*()+\\-_=[{\\]}\\\\|'?/\";:£§º©®\\s]{1,}$/;\n\n    if (regex.test(threeWords))\n      // is the format of a three word address\n      return true\n    else\n      // is NOT a three word address\n      return false\n  }\n\n  Get3WordsFromLatLong(lat: number, lng: number, lang: string = 'en'): string {\n    /**\n     * Converts a coordinate to a 3 word address\n     * @param {Object} coordinates - The coordinate object\n     * @param {number} coordinates.lat - The latitude\n     * @param {number} coordinates.lng - The longitude\n     * @param {string} [language=en] - The language to return the 3 word address in\n     * @returns {Promise} Promise 3 word address response\n     */\n\n    /* Property 'convertTo3wa' does not exist on type '(apiKey?: string | undefined, config?: ApiClientConfiguration | undefined, opts?: { transport: \"axios\" | \"fetch\" | Transport; } | undefined) => What3wordsService'. */\n\n    const client: w3w.ConvertTo3waClient = w3w.ConvertTo3waClient.init(What3Words.apiKey)\n    const options: w3w.ConvertTo3waOptions = { coordinates: { lat: lat, lng: lng } };\n    // debugger\n    client.run(options)\n      .then((res: any/*ConvertTo3waResponse*/) => console.log('Convert to 3wa', res));\n    // debugger\n\n    /*\n        w3w.ConvertTo3waClient.convertTo3wa({ lat, lng }, lang)\n          .then(function (response: any) {\n            console.log(\"[convertTo3wa]\", JSON.stringify(response));\n            return response\n          })\n          .catch(function (error: any) {\n            console.log(\"[code]\", error.code);\n            console.log(\"[message]\", error.message)\n            return `Error: [code]: ${error.code} [message]: ${error.message}`\n          })\n          */\n    return \"No suggested 3 words\"\n  }\n\n  GetLatLongFrom3Words(threeWords: string) {\n    /**\n     * Returns coordinates for a 3 word address\n     * @param {string} words - The 3 word address words to convert to coordinates\n     * @returns {Promise} - Promise coordinates response\n     */\n\n\n    const client: w3w.ConvertToCoordinatesClient = w3w.ConvertToCoordinatesClient.init(What3Words.apiKey)\n    const options: w3w.ConvertToCoordinatesOptions = { words: threeWords };\n\n    // debugger\n    client.run(options)\n      .then((res: any /*ConvertToCoordinatesResponse*/) => console.log('Convert to coordinates', res));\n    // debugger\n\n    /*\n        w3w.convertToCoordinates(\"filled.count.soap\")\n          .then(function (response: any) {\n            console.log(\"[convertToCoordinates]\", response);\n          })\n          .catch(function (error: any) {\n            console.log(\"[code]\", error.code);\n            console.log(\"[message]\", error.message);\n          })\n    */\n\n    if (threeWords.length) {\n      // something entered...\n\n      console.log(\"3Words='\" + threeWords + \"'\")\n      /*\n            w3w.autosuggest(threeWords, {\n              nFocusResults: 1,\n              //clipTo####: [\"US\"], - done by default\n              // TODO: cliptoboundingbox: { south_lat, west_lng, north_lat, east_lng }, // Clip prevents ANY values outside region\n              focus: { lat: SettingsService.Settings.defLat, lng: SettingsService.Settings.defLong }, // Focus prioritizes words closer to this point\n              nResults: 1\n            })\n              .then(function (response: any) {\n                what3words.api.verifiedWords = response.suggestions[0].words\n                console.log(\"Verified Words='\" + what3words.api.verifiedWords + \"'\")\n                if (threeWords != what3words.api.verifiedWords) {\n                  // TODO: Don't tie to HTML!!!\n                  document.getElementById(\"addressLabel\")!.textContent = \" Verified as: \" + what3words.api.verifiedWords\n                } else {\n                  document.getElementById(\"addressLabel\")!.textContent = \" Verified.\"\n                }\n                what3words.api.convertToCoordinates(what3words.api.verifiedWords).then(function (response: any) {\n                  //async call HAS returned!\n                  what3words.api.updateCoords(response.coordinates.lat, response.coordinates.lng)\n                  // NOTE: Not saving nearest place: too vague to be of value\n                  document.getElementById(\"addressLabel\")!.textContent += \" Near: \" + response.nearestPlace\n                })\n              })\n              .catch(function (error: any) {\n                let errMsg = \"[code]=\" + error.code + \" [message]=\" + error.message + \".\"\n                console.log(\"Unable to verify 3 words entered: \" + errMsg)\n                document.getElementById(\"addressLabel\")!.textContent = \"*** Not able to verify 3 words! ***\"\n              })\n              */\n    }\n    // async call not returned yet\n\n  }\n\n\n\n  getGrid(southwest: google.maps.LatLngLiteral, northeast: google.maps.LatLngLiteral) {\n    /**\n   * Returns a section of the what3words grid\n   * @param {Object} boundingBox - The bounding box for the grid to return\n   * @param {Object} [boundingBox.southwest] - The coordinates of the southwest corner of the bounding box\n   * @param {Object} [boundingBox.southwest.lat] - The latitude of the southwest corner of the bounding box\n   * @param {Object} [boundingBox.southwest.lng] - The longitude of the southwest corner of the bounding box\n   * @param {Object} [boundingBox.northeast] - The coordinates of the northeast corner of the bounding box\n   * @param {Object} [boundingBox.northeast.lat] - The latitude of the northeast corner of the bounding box\n   * @param {Object} [boundingBox.northeast.lng] - The longitude of the northeast corner of the bounding box\n   * @return {Promise} - Promise the grid section\n   */\n\n    // see https://github.com/what3words/w3w-node-wrapper#grid-section\n    /*\n    w3w.gridSection({\n      southwest: southwest, // { lat: 51.508341, lng: -0.125499 },\n      northeast: northeast // { lat: 51.507341, lng: -0.124499 }\n    })\n      .then(function (response: any) {\n        console.log(\"[gridSection]\", response)\n      })\n      .catch(function (error: any) {\n        console.log(\"[code]\", error.code)\n        console.log(\"[message]\", error.message);\n      })\n  }\n\n\n  /*\n  $.ajax(settings).done(function (response) {\n    MAIN.dbug(\"ddd=\" + response)\n  })\n    */\n\n    // No 3 word results outside these values allowed!!\n    // south_lat \n        console.log(`suggestions for \"${w3wSuggestion}\"`, JSON.stringify(res))\n      );\n      // debugger\n    return res\n\n/*\n\"apiKey\": string;\n  \"autosuggest_focus\": string;\n  \"base_url\": string;\n  \"callback\": string;\n  \"clip_to_bounding_box\": string;\n  \"clip_to_circle\": string;\n  \"clip_to_country\": string;\n  \"clip_to_polygon\": string;\n  \"headers\": string;\n  \"initial_value\": string;\n  \"invalid_address_error_message\": string;\n  \"language\": string;\n  \"n_focus_results\": number;\n  \"name\": string;\n  \"return_coordinates\": boolean;\n  \"typeahead_delay\": number;\n  */\n\n\n    /*   what3words.api.autosuggest(\"freshen.overlook.clo\", {\n         nFocusResults: 1,\n         clipToCountry: [\"FR\"],\n         focus: { lat: 48.856618, lng: 2.3522411 },\n         nResults: 1\n\n       })\n         .then(function (response: { suggestions: { words: any }[] }) {\n           var words = response.suggestions[0].words;\n\n           let top3wa = document.getElementById(\"top3wa\");\n           top3wa!.innerHTML += words;\n\n           what3words.api.convertToCoordinates(words).then(function (response: { coordinates: { lat: string; lng: string }; nearestPlace: string }) {\n             let coords = document.getElementById(\"coords\");\n             let nearestPlace = document.getElementById(\"nearest_place\");\n\n             coords!.innerHTML += response.coordinates.lat + ', ' + response.coordinates.lng;\n             nearestPlace!.innerHTML += response.nearestPlace;\n           });\n         })\n         .catch(function (error: { code: any; message: any; }) {\n           console.log(\"[code]\", error.code);\n           console.log(\"[message]\", error.message);\n         });\n   */\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // Javascript autosuggest tutorial:\n  // https://developer.what3words.com/tutorial/javascript-autosuggest-component-v4\n  private autoSuggestOptions_UNUSED() {\n    /* AutoSuggest\n    When presented with a 3 words address which may be incorrectly entered, AutoSuggest returns a list of potential correct 3 word addresses. It needs the first two words plus at least the first character of the third word to produce suggestions.\n\n    This method provides corrections for mis-typed words (including plural VS singular), and words being in the wrong order.\n\n    Optionally, clipping can narrow down the possibilities, and limit results to:\n\n    One or more countries\n    A geographic area (a circle, box or polygon)\n    This dramatically improves results, so we recommend that you use clipping if possible.\n\n    To improve results even further, set the focus to user’s current location. This will make autosuggest return results which are closer to the user.\n\n    More information about autosuggest, including returned results is available in the what3words REST API documentation.\n\n    Example: Basic Autosuggest call\n    */\n    /**\n     * Returns autosuggest results for a search term\n     * @param {string} input - The input to search for autosuggests\n     * @param {Object} [options] - The result filter and clipping options\n     * @param {Object} [options.focus] - The coordinates for the focus of the search\n     * @param {number} [options.focus.lat] - The latitude of the focus\n     * @param {number} [options.focus.lng] - The longitude of the focus\n     * @param {string} [options.nFocusResults] - The number of focused results\n     * @param {string[]} [options.clipToCountry] - The countries to clip results to\n     * @param {Object} [options.clipToBoundingBox] - The bounding box to clip results within\n     * @param {Object} [options.clipToBoundingBox.southwest] - The coordinates of the southwest corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.southwest.lat] - The latitude of the southwest corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.southwest.lng] - The longitude of the southwest corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.northeast] - The coordinates of the northeast corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.northeast.lat] - The latitude of the northeast corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.northeast.lng] - The longitude of the northeast corner of the clipping box\n     * @param {Object} [options.clipToCircle] - The circle to clip results within\n     * @param {Object} [options.clipToCircle.center] - The center of the circle to clip results within\n     * @param {number} [options.clipToCircle.center.lat] - The latitude of the center of the circle to clip results within\n     * @param {number} [options.clipToCircle.center.lng] - The longitude of the center of the circle to clip results within\n     * @param {number} [options.clipToCircle.radius] - The radius of the circle to clip results within\n     * @param {number[]} [options.clipToPolygon] - An array of polygon coordinates to clip results within\n     * @param {string} [options.inputType] - 'text' | 'vocon-hybrid' | 'nmdp-asr' | 'generic-voice'\n     * @param {string} [options.language] - The language to return autosuggest results in\n     * @param {boolean} [options.preferLang] - Whether to bias towards results that are over land vs over the sea.\n     * @returns {Promise} - Promise 3 word address autosuggestions response\n     **/\n    /*\n    w3w.autosuggest(\"fun.with.code\")\n      .then(function (response: any) {\n        console.log(\"[autosuggest]\", response);\n      })\n      .catch(function (error: any) {\n        console.log(\"[code]\", error.code);\n        console.log(\"[message]\", error.message);\n      })\n\n    // Other AutoSuggest forms\n    what3words.api.autosuggest(\"fun.with.code\", { clipToCountry: [\"FR\", \"DE\"] }).then(function (response: any) { console.log(\"[autosuggest]\", response) })\n    what3words.api.autosuggest(\"fun.with.code\", { clipToCircle: { center: { lat: 51.4243877, lng: -0.34745 }, radius: 50 } })\n    what3words.api.autosuggest(\"fun.with.code\", { clipToPolygon: [51.421, -0.343, 52.6, 2.3324, 54.234, 8.343, 51.421, -0.343] })\n    what3words.api.autosuggest(\"fun.with.code\", {\n      clipToBoundingBox: {\n        southwest: { lat: 51.521, lng: -0.343 },\n        northeast: { lat: 52.6, lng: 2.3324 }\n      }\n    })\n    what3words.api.autosuggest(\"fun.with.code\", { focus: { lat: 51.4243877, lng: -0.34745 } })\n    what3words.api.autosuggest(\"fun with code\", { inputType: \"generic-voice\", language: \"en\" })\n    */\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/What3wordsSymbol33.html":{"url":"interfaces/What3wordsSymbol33.html","title":"interface - What3wordsSymbol33","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  What3wordsSymbol33\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/3words.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common'\nimport { Component, Inject, OnInit, ViewChild, isDevMode } from '@angular/core'\nimport { AlertsComponent } from '../alerts/alerts.component'\n//import { UrlHandlingStrategy } from \"@angular/router\";\nimport { SettingsService } from \"./services\";\n\n// https://github.com/what3words/w3w-node-wrapper has the answers!!!\n//import * as W3W from \"@what3words/javascript-components\"\n// import what3words, { ApiVersion, What3wordsService, AutosuggestClient, AutosuggestOptions, AutosuggestResponse, ConvertToCoordinatesClient, ConvertToCoordinatesOptions, ConvertTo3waClient, ConvertTo3waOptions } from '@what3words/api';\nimport what3words, * as w3w from '@what3words/api';\n//import { W3W_REGEX } from \"@what3words/javascript-components/dist/types/lib/constants\";\nimport { GoogleMap } from '@angular/google-maps';\n// \n// mainly from https://developer.what3words.com/tutorial/javascript\n\n/*\nhttps://github.com/what3words/w3w-node-wrapper/issues/40\n See also: https://dev.to/przpiw/react-pdf-rendering-4g7b & https://github.com/angular/angular-cli/issues/20819\n\n\n./node_modules/@what3words/api/dist/lib/constants.js:4:11-24 - Error: Module not found: Error: Can't resolve 'os' in 'D:\\Projects\\RangerTrak\\rangertrak\\node_modules\\@what3words\\api\\dist\\lib'\n\nBREAKING CHANGE: webpack ';\n\n  //const\n  config: {\n    host: string,\n    apiVersion: w3w.ApiVersion,\n  } = {\n      host: 'https://api.what3words.com',\n      apiVersion: w3w.ApiVersion.Version3,  // or v3\n    };\n\n  /* The transport is a function responsible for executing the request against the API. Given a\n  ClientRequest the transport should return a promise that resolves to TransportResponse. */\n  // const\n  transport: 'axios' | 'fetch' = 'fetch';\n\n  /* The What3wordsService provides a quick and easy way to instantiate the API clients that can\n  be used to make requests against the what3words API. It also provides helper functions for\n  setting API configuration, such as host and API version and your API key across\n  the what3words API clients.*/\n  //const w3wService: What3wordsService = what3words(What3Words.apiKey, this.config, { this.transport });\n  //const\n  w3wService: w3w.What3wordsService = what3words(What3Words.apiKey, this.config,);\n\n  // Components.What3wordsAddress\n  // Components.What3wordsAutosuggest\n  // Components.What3wordsSymbol\n\n\n  constructor(\n    //@Inject(DOCUMENT) private document: Document\n  ) {\n\n  }\n  /*\n    reg = W3W_REGEX\n    w3w = W3W\n\n    a: What3wordsAddress = {\"iconColor\": \"red\",\n    \"link\": false,\n    \"showTooltip\": true,\n    \"size\": 5,\n    \"target\": \"target\",\n    \"textColor\": \"blue\",\n    \"tooltip\": true,\n    \"tooltipLocation\": \"top\",\n    \"words\": \"///existed.unanswered.articulated\"}\n\n    b: What3wordsAutosuggest = {\n      \"apiKey\": What3Words.apiKey,\n    \"autosuggest_focus\": \"existed.unanswered.articulated\",\n    \"base_url\": \"base\",\n    \"callback\": \"callback()\",\n    \"clip_to_bounding_box\": \"\",\n    \"clip_to_circle\": \"\",\n    \"clip_to_country\": \"US\",\n    \"clip_to_polygon\": \"\",\n    \"headers\": \"\",\n    \"initial_value\": \"\",\n    \"invalid_address_error_message\": \"Bad Address...\",\n    \"language\": \"English\",\n    \"n_focus_results\": 2,\n    \"name\": \"John\",\n    \"return_coordinates\": false,\n    \"typeahead_delay\": 5,\n    //\"variant\"//: Variant; // Can't find Variant...\n    }\n\n    c: What3wordsSymbol = {\"color\": \"green\",\n      \"size\": 7}\n\n    // reg\n    // w3w\n\n    test() {\n      // let x = W3W.\n    }\n  */\n\n  static settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://api.what3words.com/v3/autosuggest?key=\" + What3Words.apiKey + \"&input=index.home.r&n-results=5&focus=51.521251%2C-0.203586&clip-to-country=BE%2CGB\",\n    \"method\": \"GET\",\n    \"headers\": {}\n  }\n\n\n  ShapedAs3Words(threeWords: string): boolean {\n    // from https://developer.what3words.com/tutorial/detecting-if-text-is-in-the-format-of-a-3-word-address\n    var regex = /^\\/{0,}[^0-9`~!@#$%^&*()+\\-_=[{\\]}\\\\|'?/\";:£§º©®\\s]{1,}[.｡。･・︒។։။۔።।][^0-9`~!@#$%^&*()+\\-_=[{\\]}\\\\|'?/\";:£§º©®\\s]{1,}[.｡。･・︒។։။۔።।][^0-9`~!@#$%^&*()+\\-_=[{\\]}\\\\|'?/\";:£§º©®\\s]{1,}$/;\n\n    if (regex.test(threeWords))\n      // is the format of a three word address\n      return true\n    else\n      // is NOT a three word address\n      return false\n  }\n\n  Get3WordsFromLatLong(lat: number, lng: number, lang: string = 'en'): string {\n    /**\n     * Converts a coordinate to a 3 word address\n     * @param {Object} coordinates - The coordinate object\n     * @param {number} coordinates.lat - The latitude\n     * @param {number} coordinates.lng - The longitude\n     * @param {string} [language=en] - The language to return the 3 word address in\n     * @returns {Promise} Promise 3 word address response\n     */\n\n    /* Property 'convertTo3wa' does not exist on type '(apiKey?: string | undefined, config?: ApiClientConfiguration | undefined, opts?: { transport: \"axios\" | \"fetch\" | Transport; } | undefined) => What3wordsService'. */\n\n    const client: w3w.ConvertTo3waClient = w3w.ConvertTo3waClient.init(What3Words.apiKey)\n    const options: w3w.ConvertTo3waOptions = { coordinates: { lat: lat, lng: lng } };\n    // debugger\n    client.run(options)\n      .then((res: any/*ConvertTo3waResponse*/) => console.log('Convert to 3wa', res));\n    // debugger\n\n    /*\n        w3w.ConvertTo3waClient.convertTo3wa({ lat, lng }, lang)\n          .then(function (response: any) {\n            console.log(\"[convertTo3wa]\", JSON.stringify(response));\n            return response\n          })\n          .catch(function (error: any) {\n            console.log(\"[code]\", error.code);\n            console.log(\"[message]\", error.message)\n            return `Error: [code]: ${error.code} [message]: ${error.message}`\n          })\n          */\n    return \"No suggested 3 words\"\n  }\n\n  GetLatLongFrom3Words(threeWords: string) {\n    /**\n     * Returns coordinates for a 3 word address\n     * @param {string} words - The 3 word address words to convert to coordinates\n     * @returns {Promise} - Promise coordinates response\n     */\n\n\n    const client: w3w.ConvertToCoordinatesClient = w3w.ConvertToCoordinatesClient.init(What3Words.apiKey)\n    const options: w3w.ConvertToCoordinatesOptions = { words: threeWords };\n\n    // debugger\n    client.run(options)\n      .then((res: any /*ConvertToCoordinatesResponse*/) => console.log('Convert to coordinates', res));\n    // debugger\n\n    /*\n        w3w.convertToCoordinates(\"filled.count.soap\")\n          .then(function (response: any) {\n            console.log(\"[convertToCoordinates]\", response);\n          })\n          .catch(function (error: any) {\n            console.log(\"[code]\", error.code);\n            console.log(\"[message]\", error.message);\n          })\n    */\n\n    if (threeWords.length) {\n      // something entered...\n\n      console.log(\"3Words='\" + threeWords + \"'\")\n      /*\n            w3w.autosuggest(threeWords, {\n              nFocusResults: 1,\n              //clipTo####: [\"US\"], - done by default\n              // TODO: cliptoboundingbox: { south_lat, west_lng, north_lat, east_lng }, // Clip prevents ANY values outside region\n              focus: { lat: SettingsService.Settings.defLat, lng: SettingsService.Settings.defLong }, // Focus prioritizes words closer to this point\n              nResults: 1\n            })\n              .then(function (response: any) {\n                what3words.api.verifiedWords = response.suggestions[0].words\n                console.log(\"Verified Words='\" + what3words.api.verifiedWords + \"'\")\n                if (threeWords != what3words.api.verifiedWords) {\n                  // TODO: Don't tie to HTML!!!\n                  document.getElementById(\"addressLabel\")!.textContent = \" Verified as: \" + what3words.api.verifiedWords\n                } else {\n                  document.getElementById(\"addressLabel\")!.textContent = \" Verified.\"\n                }\n                what3words.api.convertToCoordinates(what3words.api.verifiedWords).then(function (response: any) {\n                  //async call HAS returned!\n                  what3words.api.updateCoords(response.coordinates.lat, response.coordinates.lng)\n                  // NOTE: Not saving nearest place: too vague to be of value\n                  document.getElementById(\"addressLabel\")!.textContent += \" Near: \" + response.nearestPlace\n                })\n              })\n              .catch(function (error: any) {\n                let errMsg = \"[code]=\" + error.code + \" [message]=\" + error.message + \".\"\n                console.log(\"Unable to verify 3 words entered: \" + errMsg)\n                document.getElementById(\"addressLabel\")!.textContent = \"*** Not able to verify 3 words! ***\"\n              })\n              */\n    }\n    // async call not returned yet\n\n  }\n\n\n\n  getGrid(southwest: google.maps.LatLngLiteral, northeast: google.maps.LatLngLiteral) {\n    /**\n   * Returns a section of the what3words grid\n   * @param {Object} boundingBox - The bounding box for the grid to return\n   * @param {Object} [boundingBox.southwest] - The coordinates of the southwest corner of the bounding box\n   * @param {Object} [boundingBox.southwest.lat] - The latitude of the southwest corner of the bounding box\n   * @param {Object} [boundingBox.southwest.lng] - The longitude of the southwest corner of the bounding box\n   * @param {Object} [boundingBox.northeast] - The coordinates of the northeast corner of the bounding box\n   * @param {Object} [boundingBox.northeast.lat] - The latitude of the northeast corner of the bounding box\n   * @param {Object} [boundingBox.northeast.lng] - The longitude of the northeast corner of the bounding box\n   * @return {Promise} - Promise the grid section\n   */\n\n    // see https://github.com/what3words/w3w-node-wrapper#grid-section\n    /*\n    w3w.gridSection({\n      southwest: southwest, // { lat: 51.508341, lng: -0.125499 },\n      northeast: northeast // { lat: 51.507341, lng: -0.124499 }\n    })\n      .then(function (response: any) {\n        console.log(\"[gridSection]\", response)\n      })\n      .catch(function (error: any) {\n        console.log(\"[code]\", error.code)\n        console.log(\"[message]\", error.message);\n      })\n  }\n\n\n  /*\n  $.ajax(settings).done(function (response) {\n    MAIN.dbug(\"ddd=\" + response)\n  })\n    */\n\n    // No 3 word results outside these values allowed!!\n    // south_lat \n        console.log(`suggestions for \"${w3wSuggestion}\"`, JSON.stringify(res))\n      );\n      // debugger\n    return res\n\n/*\n\"apiKey\": string;\n  \"autosuggest_focus\": string;\n  \"base_url\": string;\n  \"callback\": string;\n  \"clip_to_bounding_box\": string;\n  \"clip_to_circle\": string;\n  \"clip_to_country\": string;\n  \"clip_to_polygon\": string;\n  \"headers\": string;\n  \"initial_value\": string;\n  \"invalid_address_error_message\": string;\n  \"language\": string;\n  \"n_focus_results\": number;\n  \"name\": string;\n  \"return_coordinates\": boolean;\n  \"typeahead_delay\": number;\n  */\n\n\n    /*   what3words.api.autosuggest(\"freshen.overlook.clo\", {\n         nFocusResults: 1,\n         clipToCountry: [\"FR\"],\n         focus: { lat: 48.856618, lng: 2.3522411 },\n         nResults: 1\n\n       })\n         .then(function (response: { suggestions: { words: any }[] }) {\n           var words = response.suggestions[0].words;\n\n           let top3wa = document.getElementById(\"top3wa\");\n           top3wa!.innerHTML += words;\n\n           what3words.api.convertToCoordinates(words).then(function (response: { coordinates: { lat: string; lng: string }; nearestPlace: string }) {\n             let coords = document.getElementById(\"coords\");\n             let nearestPlace = document.getElementById(\"nearest_place\");\n\n             coords!.innerHTML += response.coordinates.lat + ', ' + response.coordinates.lng;\n             nearestPlace!.innerHTML += response.nearestPlace;\n           });\n         })\n         .catch(function (error: { code: any; message: any; }) {\n           console.log(\"[code]\", error.code);\n           console.log(\"[message]\", error.message);\n         });\n   */\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // Javascript autosuggest tutorial:\n  // https://developer.what3words.com/tutorial/javascript-autosuggest-component-v4\n  private autoSuggestOptions_UNUSED() {\n    /* AutoSuggest\n    When presented with a 3 words address which may be incorrectly entered, AutoSuggest returns a list of potential correct 3 word addresses. It needs the first two words plus at least the first character of the third word to produce suggestions.\n\n    This method provides corrections for mis-typed words (including plural VS singular), and words being in the wrong order.\n\n    Optionally, clipping can narrow down the possibilities, and limit results to:\n\n    One or more countries\n    A geographic area (a circle, box or polygon)\n    This dramatically improves results, so we recommend that you use clipping if possible.\n\n    To improve results even further, set the focus to user’s current location. This will make autosuggest return results which are closer to the user.\n\n    More information about autosuggest, including returned results is available in the what3words REST API documentation.\n\n    Example: Basic Autosuggest call\n    */\n    /**\n     * Returns autosuggest results for a search term\n     * @param {string} input - The input to search for autosuggests\n     * @param {Object} [options] - The result filter and clipping options\n     * @param {Object} [options.focus] - The coordinates for the focus of the search\n     * @param {number} [options.focus.lat] - The latitude of the focus\n     * @param {number} [options.focus.lng] - The longitude of the focus\n     * @param {string} [options.nFocusResults] - The number of focused results\n     * @param {string[]} [options.clipToCountry] - The countries to clip results to\n     * @param {Object} [options.clipToBoundingBox] - The bounding box to clip results within\n     * @param {Object} [options.clipToBoundingBox.southwest] - The coordinates of the southwest corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.southwest.lat] - The latitude of the southwest corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.southwest.lng] - The longitude of the southwest corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.northeast] - The coordinates of the northeast corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.northeast.lat] - The latitude of the northeast corner of the clipping box\n     * @param {Object} [options.clipToBoundingBox.northeast.lng] - The longitude of the northeast corner of the clipping box\n     * @param {Object} [options.clipToCircle] - The circle to clip results within\n     * @param {Object} [options.clipToCircle.center] - The center of the circle to clip results within\n     * @param {number} [options.clipToCircle.center.lat] - The latitude of the center of the circle to clip results within\n     * @param {number} [options.clipToCircle.center.lng] - The longitude of the center of the circle to clip results within\n     * @param {number} [options.clipToCircle.radius] - The radius of the circle to clip results within\n     * @param {number[]} [options.clipToPolygon] - An array of polygon coordinates to clip results within\n     * @param {string} [options.inputType] - 'text' | 'vocon-hybrid' | 'nmdp-asr' | 'generic-voice'\n     * @param {string} [options.language] - The language to return autosuggest results in\n     * @param {boolean} [options.preferLang] - Whether to bias towards results that are over land vs over the sea.\n     * @returns {Promise} - Promise 3 word address autosuggestions response\n     **/\n    /*\n    w3w.autosuggest(\"fun.with.code\")\n      .then(function (response: any) {\n        console.log(\"[autosuggest]\", response);\n      })\n      .catch(function (error: any) {\n        console.log(\"[code]\", error.code);\n        console.log(\"[message]\", error.message);\n      })\n\n    // Other AutoSuggest forms\n    what3words.api.autosuggest(\"fun.with.code\", { clipToCountry: [\"FR\", \"DE\"] }).then(function (response: any) { console.log(\"[autosuggest]\", response) })\n    what3words.api.autosuggest(\"fun.with.code\", { clipToCircle: { center: { lat: 51.4243877, lng: -0.34745 }, radius: 50 } })\n    what3words.api.autosuggest(\"fun.with.code\", { clipToPolygon: [51.421, -0.343, 52.6, 2.3324, 54.234, 8.343, 51.421, -0.343] })\n    what3words.api.autosuggest(\"fun.with.code\", {\n      clipToBoundingBox: {\n        southwest: { lat: 51.521, lng: -0.343 },\n        northeast: { lat: 52.6, lng: 2.3324 }\n      }\n    })\n    what3words.api.autosuggest(\"fun.with.code\", { focus: { lat: 51.4243877, lng: -0.34745 } })\n    what3words.api.autosuggest(\"fun with code\", { inputType: \"generic-voice\", language: \"en\" })\n    */\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/X404Component.html":{"url":"components/X404Component.html","title":"component - X404Component","body":"\n                   \n\n\n\n\n\n  Components\n  \n  X404Component\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/x404/x404.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rangertrak-x404\n            \n\n            \n                styleUrls\n                ./x404.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./x404.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/x404/x404.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/x404/x404.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n// TODO: https://bobrov.dev/blog/angular-smart-404-page/\n\n@Component({\n  selector: 'rangertrak-x404',\n  templateUrl: './x404.component.html',\n  styleUrls: ['./x404.component.scss']\n})\nexport class X404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        We can't find that page: Error 404\nReturn Home\n\n    \n\n    \n                \n                    ./x404.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'We can\\'t find that page: Error 404Return Home'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'rangertrak-about'},{'name': 'AlertsComponent', 'selector': 'rangertrak-alerts'},{'name': 'AppComponent', 'selector': 'rangertrak-root'},{'name': 'ColorEditor', 'selector': 'editor-cell'},{'name': 'EntryComponent', 'selector': 'rangertrak-entry'},{'name': 'FieldReportsComponent', 'selector': 'rangertrak-field-reports'},{'name': 'FooterComponent', 'selector': 'rangertrak-footer'},{'name': 'GmapComponent', 'selector': 'rangertrak-gmap'},{'name': 'IconComponent', 'selector': 'icon'},{'name': 'LazyComponent', 'selector': 'lazy'},{'name': 'LmapComponent', 'selector': 'rangertrak-lmap'},{'name': 'LogComponent', 'selector': 'rangertrak-log'},{'name': 'MoodEditor', 'selector': 'editor-cell'},{'name': 'MoodRenderer', 'selector': 'mood-cell'},{'name': 'NavbarComponent', 'selector': 'rangertrak-navbar'},{'name': 'RangersComponent', 'selector': 'rangertrak-rangers'},{'name': 'SettingsComponent', 'selector': 'rangertrak-settings'},{'name': 'X404Component', 'selector': 'rangertrak-x404'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'X404Component'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.11.38 (2022-02-12)\n0.11.37 (2022-02-11)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/alerts/alerts.component.ts\n            \n            component\n            AlertsComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/entry/entry.component.ts\n            \n            component\n            EntryComponent\n            \n                0 %\n                (0/76)\n            \n        \n        \n            \n                \n                src/app/entry/entry.component.ts\n            \n            component\n            IconComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/entry/entry.component.ts\n            \n            variable\n            THUMBUP_ICON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/entry/entry.component.ts\n            \n            variable\n            Vashon\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/entry/unsavedChangesGuard .ts\n            \n            guard\n            UnsavedChangesGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/field-reports/field-reports.component.ts\n            \n            component\n            FieldReportsComponent\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/field-reports/field-reports.component.ts\n            \n            pipe\n            myUnusedPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/gmap/gmap.component.ts\n            \n            component\n            GmapComponent\n            \n                0 %\n                (0/36)\n            \n        \n        \n            \n                \n                src/app/gmap/gmap.component.ts\n            \n            variable\n            google\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/gmap/gmap.component.ts\n            \n            variable\n            marker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lazy/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lazy/lazy.component.ts\n            \n            component\n            LazyComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/lazy/shared/services/three-words/three-words.service.ts\n            \n            injectable\n            ThreeWordsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/lmap/lmap.component.ts\n            \n            component\n            LmapComponent\n            \n                0 %\n                (0/39)\n            \n        \n        \n            \n                \n                src/app/lmap/lmap.component.ts\n            \n            function\n            initShapesLayer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lmap/lmap.component.ts\n            \n            variable\n            iconDefault\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lmap/lmap.component.ts\n            \n            variable\n            iconRetinaUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lmap/lmap.component.ts\n            \n            variable\n            iconUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lmap/lmap.component.ts\n            \n            variable\n            markerIcon\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lmap/lmap.component.ts\n            \n            variable\n            shadowUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/log/log.component.ts\n            \n            component\n            LogComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/rangers/csvImport.ts\n            \n            class\n            csvImport\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/rangers/csvImport.ts\n            \n            variable\n            gridOptions1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/rangers/rangers.component.ts\n            \n            component\n            RangersComponent\n            \n                0 %\n                (0/46)\n            \n        \n        \n            \n                \n                src/app/settings/color-editor.component.ts\n            \n            component\n            ColorEditor\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/settings/mood-editor.component.ts\n            \n            component\n            MoodEditor\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/settings/mood-renderer.component.ts\n            \n            component\n            MoodRenderer\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/shared/3words.ts\n            \n            class\n            What3Words\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/3words.ts\n            \n            interface\n            What3wordsAddress33\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/3words.ts\n            \n            interface\n            What3wordsAutosuggest33\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/shared/3words.ts\n            \n            interface\n            What3wordsSymbol33\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/coordinate.ts\n            \n            class\n            Coord\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/coordinate.ts\n            \n            class\n            Coordinate\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/coordinate.ts\n            \n            class\n            Point\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/coordinate.ts\n            \n            function\n            DDToDMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/coordinate.ts\n            \n            function\n            strToLatLng\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/google-geocode.ts\n            \n            class\n            GoogleGeocode\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/map.ts\n            \n            class\n            Map\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/map.ts\n            \n            interface\n            LayerType\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/mission.ts\n            \n            class\n            Mission\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/op-period.ts\n            \n            class\n            OpPeriod\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/open-location-code.ts\n            \n            class\n            CodeArea\n            \n                27 %\n                (3/11)\n            \n        \n        \n            \n                \n                src/app/shared/open-location-code.ts\n            \n            class\n            OpenLocationCode\n            \n                33 %\n                (13/39)\n            \n        \n        \n            \n                \n                src/app/shared/open-location-code.ts\n            \n            variable\n            LATITUDE_MAX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/open-location-code.ts\n            \n            variable\n            LONGITUDE_MAX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/plus-code.ts\n            \n            class\n            PlusCode\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/plus-code.ts\n            \n            function\n            PlusCode2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/point.ts\n            \n            class\n            Point\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/point.ts\n            \n            function\n            DMSToDD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/post.service.ts\n            \n            injectable\n            PostService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/data.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/field-report.service.ts\n            \n            injectable\n            FieldReportService\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/shared/services/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/marker.service.ts\n            \n            injectable\n            MarkerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/services/popup.service.ts\n            \n            injectable\n            PopupService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/ranger.service.ts\n            \n            injectable\n            RangerService\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/shared/services/ranger.service.ts\n            \n            interface\n            RangerType\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/services/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/shared/services/shape.service.ts\n            \n            injectable\n            ShapeService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/storagemap.ts\n            \n            class\n            AngularComponentOrService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/services/team.service.ts\n            \n            injectable\n            TeamService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/services/team.service.ts\n            \n            interface\n            TeamType\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/street-address.ts\n            \n            class\n            StreetAddress\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/utility.ts\n            \n            class\n            Utility\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/x404/x404.component.ts\n            \n            component\n            X404Component\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/csvImport.html":{"url":"classes/csvImport.html","title":"class - csvImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  csvImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rangers/csvImport.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                gridApi\n                            \n                            \n                                    Private\n                                gridColumnApi\n                            \n                            \n                                onGridReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertDataToWorkbook\n                            \n                            \n                                    Static\n                                importExcel2\n                            \n                            \n                                importExcel2\n                            \n                            \n                                makeRequest\n                            \n                            \n                                populateGrid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/rangers/csvImport.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gridApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/rangers/csvImport.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gridColumnApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/rangers/csvImport.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGridReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/rangers/csvImport.ts:88\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertDataToWorkbook\n                        \n                    \n                \n            \n            \n                \nconvertDataToWorkbook(data1: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rangers/csvImport.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data1\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        importExcel2\n                        \n                    \n                \n            \n            \n                \n                    \n                    importExcel2()\n                \n            \n\n\n            \n                \n                    Defined in src/app/rangers/csvImport.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        importExcel2\n                        \n                    \n                \n            \n            \n                \nimportExcel2()\n                \n            \n\n\n            \n                \n                    Defined in src/app/rangers/csvImport.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeRequest\n                        \n                    \n                \n            \n            \n                \nmakeRequest(method: any, url: string, success: any, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rangers/csvImport.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    success\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        populateGrid\n                        \n                    \n                \n            \n            \n                \npopulateGrid(workbook: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rangers/csvImport.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workbook\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as XLSX from 'xlsx';\nimport { Inject, Injectable } from '@angular/core'\nimport { DOCUMENT } from '@angular/common';\n\n// based on https://ag-grid.com/javascript-data-grid/excel-import/#example-excel-import\n// https://oss.sheetjs.com/sheetjs/\n\nlet gridOptions1 = {\n  columnDefs: [\n    { field: \"athlete\", minWidth: 180 },\n    { field: \"age\" },\n    { field: \"country\", minWidth: 150 },\n    { field: \"year\" },\n    { field: \"date\", minWidth: 130 },\n    { field: \"sport\", minWidth: 100 },\n    { field: \"gold\" },\n    { field: \"silver\" },\n    { field: \"bronze\" },\n    { field: \"total\" }\n  ],\n\n  defaultColDef: {\n    resizable: true,\n    minWidth: 80,\n    flex: 1\n  },\n\n  rowData: []\n};\n\n\n\n// `export` function that exports the `data` property to a new file\n\nexport class csvImport {\n  static importExcel2() {\n    throw new Error('Method not implemented.');\n  }\n\n  private gridApi: any\n  private gridColumnApi: any\n\n  constructor(\n    //private teamService: TeamService,\n    //private rangerService: RangerService,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    //this.teamService = teamService\n    //this.rangerService = rangerService\n    //this.now = new Date()\n    this.gridApi = \"\"\n    this.gridColumnApi = \"\"\n\n    // wait for the document to be loaded, otherwise\n    // AG Grid will not find the div in the document.\n    this.document.addEventListener(\"DOMContentLoaded\", () => {\n\n      //debugger\n      // lookup the container we want the Grid to use\n      let eGridDiv = document.querySelector('#rangerGrid')\n\n      // create the grid passing in the div to use together with the columns & data we want to use\n      //new agGrid.Grid(eGridDiv, gridOptions)\n    }\n    )\n\n\n  }\n\n  // XMLHttpRequest in promise format\n  // File input button with an event handler to parse the workbook\n  makeRequest(method: any, url: string, success: any, error: any) {\n    let httpRequest = new XMLHttpRequest();\n    httpRequest.open(\"GET\", url, true);\n    httpRequest.responseType = \"arraybuffer\";\n\n    httpRequest.open(method, url);\n    httpRequest.onload = () => {\n      success(httpRequest.response);\n    };\n    httpRequest.onerror = () => {\n      error(httpRequest.response);\n    };\n    httpRequest.send();\n  }\n\n  onGridReady = (params: any) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    // params.api.sizeColumnsToFit() //https://ag-grid.com/angular-data-grid/column-sizing/#example-default-resizing\n    // TODO: use this line, or next routine?!\n  }\n\n  // read the raw data and convert it to a XLSX workbook\n  // `data` property: array of arrays\n  convertDataToWorkbook(data1: any) {\n    /* convert data to binary string */\n    let data = new Uint8Array(data1);\n    let arr = new Array();\n\n    for (let i = 0; i !== data.length; ++i) {\n      arr[i] = String.fromCharCode(data[i]);\n    }\n\n    let bstr = arr.join(\"\");\n\n    return XLSX.read(bstr, { type: \"binary\" });\n  }\n\n  // pull out the values we're after, converting it into an array of rowData\n  // Simple angular table which binds to the `data` property\n  populateGrid(workbook: any) {\n    // our data is in the first sheet\n    let firstSheetName = workbook.SheetNames[0];\n    let worksheet = workbook.Sheets[firstSheetName];\n\n    // we expect the following columns to be present\n    let columns:any = {\n      'A': 'athlete',\n      'B': 'age',\n      'C': 'country',\n      'D': 'year',\n      'E': 'date',\n      'F': 'sport',\n      'G': 'gold',\n      'H': 'silver',\n      'I': 'bronze',\n      'J': 'total'\n    };\n\n    let rowData = [];\n\n    // start at the 2nd row - the first row are the headers\n    let rowIndex = 2;\n\n    // iterate over the worksheet pulling out the columns we're expecting\n    while (worksheet['A' + rowIndex]) {\n      //debugger\n      let row:any = {};\n      Object.keys(columns).forEach((column) => {\n        //console.log(` column=${column}; w=${worksheet[column + rowIndex].w}`)\n        /*\n            column=A; w=Gong Jinjie\n            csvImport.ts:142  column=B; w=25\n            csvImport.ts:142  column=C; w=China\n            csvImport.ts:142  column=D; w=2012\n            csvImport.ts:142  column=E; w=12/8/12\n            csvImport.ts:142  column=F; w=Cycling\n            csvImport.ts:142  column=G; w=0\n            csvImport.ts:142  column=H; w=1\n            csvImport.ts:142  column=I; w=0\n            csvImport.ts:142  column=J; w=1\n            csvImport.ts:142  column=A; w=Olga Kaniskina\n            csvImport.ts:142  column=B; w=27\n            csvImport.ts:142  column=C; w=Russia\n            csvImport.ts:142  column=D; w=2012\n            csvImport.ts:142  column=E; w=12/8/12\n            csvImport.ts:142  column=F; w=Athletics\n            csvImport.ts:142  column=G; w=0\n            csvImport.ts:142  column=H; w=1\n            csvImport.ts:142  column=I; w=0\n            csvImport.ts:142  column=J; w=1\n            csvImport.ts:142  column=A; w=Vavrinec Hradílek\n        */\n\n        row[columns[column]] = worksheet[column + rowIndex].w;\n      });\n\n      rowData.push(row);\n\n      rowIndex++;\n    }\n\n    // finally, set the imported rowData into the grid\n    // gets core.mjs:6484 ERROR TypeError: this.gridApi.setRowData is not a function\n    //this.gridApi.setRowData(rowData);\n  }\n\n  importExcel2() {\n    //debugger\n    this.makeRequest('GET',\n      'https://www.ag-grid.com/example-assets/olympic-data.xlsx',\n      // success\n      (data: any) => {\n        let workbook = this.convertDataToWorkbook(data);\n\n        this.populateGrid(workbook);\n      },\n      // error\n      (error: any) => {\n        throw error;\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-material-components/color-picker : ^7.0.1\n        \n            @angular-material-components/datetime-picker : ^7.0.1\n        \n            @angular/animations : ~13.2.3\n        \n            @angular/cdk : ^13.2.3\n        \n            @angular/cli : ^13.2.4\n        \n            @angular/common : ~13.2.3\n        \n            @angular/compiler : ~13.2.3\n        \n            @angular/core : ^13.2.3\n        \n            @angular/fire : ^7.2.1\n        \n            @angular/forms : ^13.2.3\n        \n            @angular/google-maps : ^13.2.3\n        \n            @angular/material : ^13.2.3\n        \n            @angular/platform-browser : ~13.2.3\n        \n            @angular/platform-browser-dynamic : ~13.2.3\n        \n            @angular/router : ~13.2.3\n        \n            @angular/service-worker : ^13.2.3\n        \n            @fortawesome/angular-fontawesome : ^0.10.1\n        \n            @fortawesome/fontawesome-svg-core : ^1.3.0\n        \n            @fortawesome/free-brands-svg-icons : ^6.0.0\n        \n            @fortawesome/free-regular-svg-icons : ^6.0.0\n        \n            @fortawesome/free-solid-svg-icons : ^6.0.0\n        \n            @googlemaps/markerclusterer : ^1.0.24\n        \n            @material/banner : ^13.0.0\n        \n            @material/slider : ^13.0.0\n        \n            @mdi/js : ^6.5.95\n        \n            @ngx-pwa/local-storage : ^13.0.2\n        \n            @popperjs/core : ^2.11.2\n        \n            @types/google-maps : ^3.2.3\n        \n            @what3words/api : ^4.0.4\n        \n            ag-grid-angular : ^27.0.0\n        \n            ag-grid-community : ^27.0.1\n        \n            dayjs : ^1.10.7\n        \n            firebase : ^9.6.7\n        \n            leaflet : ^1.7.1\n        \n            leaflet.markercluster : ^1.5.3\n        \n            rxfire : ^6.0.3\n        \n            rxjs : ^7.5.4\n        \n            tslib : ^2.3.1\n        \n            xlsx : ^0.18.2\n        \n            xlsx-style : ^0.8.13\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DirEnum   (src/.../coordinate.ts)\n                        \n                        \n                            FieldReportSource   (src/.../field-report.service.ts)\n                        \n                        \n                            MapType   (src/.../map.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/coordinate.ts\n    \n        \n            \n                \n                    \n                        \n                        DirEnum\n                    \n                \n                        \n                            \n                                 E\n                            \n                        \n                        \n                            \n                                Value : East\n                            \n                        \n                        \n                            \n                                 W\n                            \n                        \n                        \n                            \n                                Value : West\n                            \n                        \n                        \n                            \n                                 N\n                            \n                        \n                        \n                            \n                                Value : North\n                            \n                        \n                        \n                            \n                                 S\n                            \n                        \n                        \n                            \n                                Value : South\n                            \n                        \n            \n        \n\n    src/app/shared/services/field-report.service.ts\n    \n        \n            \n                \n                    \n                        \n                        FieldReportSource\n                    \n                \n                        \n                            \n                                 Voice\n                            \n                        \n                        \n                            \n                                 Packet\n                            \n                        \n                        \n                            \n                                 APRS\n                            \n                        \n                        \n                            \n                                 Email\n                            \n                        \n            \n        \n\n    src/app/shared/map.ts\n    \n        \n            \n                \n                    \n                        \n                        MapType\n                    \n                \n                        \n                            \n                                 Google\n                            \n                        \n                        \n                            \n                                 ESRI_Leaflet\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DDToDMS   (src/.../coordinate.ts)\n                        \n                        \n                            DMSToDD   (src/.../point.ts)\n                        \n                        \n                            initShapesLayer   (src/.../lmap.component.ts)\n                        \n                        \n                            PlusCode2   (src/.../plus-code.ts)\n                        \n                        \n                            strToLatLng   (src/.../coordinate.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/coordinate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DDToDMS\n                        \n                    \n                \n            \n            \n                \nDDToDMS(D: number, lng: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    D\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    lng\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strToLatLng\n                        \n                    \n                \n            \n            \n                \nstrToLatLng(str: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/shared/point.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DMSToDD\n                        \n                    \n                \n            \n            \n                \nDMSToDD(dms: Point)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dms\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/lmap/lmap.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initShapesLayer\n                        \n                    \n                \n            \n            \n                \ninitShapesLayer()\n                \n            \n\n\n\n\n        \n    \n    src/app/shared/plus-code.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PlusCode2\n                        \n                    \n                \n            \n            \n                \nPlusCode2()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRangertrak\nThis application aids tracking & mapping CERT, ACS, other teams, rangers & individuals roaming around, who are only reliably connected via HAM radio or other non-data supporting means. They can radio in their locations - in a variety of formats, and be centrally tracked..\nTrack & map search & rescue members reporting in verbally, without internet or cell access\nThis is a disconnected browser based app for tracking & mapping CERT, ACS, other teams, rangers & individuals roaming around, who are only reliably connected via HAM radio or other non-data supporting means. They can radio in their locations - using a variety of location codes, and be centrally tracked.\nThere are a number of ways to geocode a latitude & longitude. See https://en.wikipedia.org/wiki/Open_Location_Code#Other_geocode_systems for a list.\nFeatures\n\nProgressive Web App (PWA) this should be able to function (in the future, possibly with some degredation) even if the person using this is offline.\nVersions after 0.0.10 are generated with Angular, so will run on most modern web browsers, regardless of device/form factor\nOpen Source: free & available to enhance\nSupports recording locatinos as: lat/long, or What3Words, Google +Codes, or physical Street Addresses\nAuto-lookup of Ham Radio operators by callsign\nGoogle or Leaflet/ESRI maps\nRangers can be in Teams; both are easily edited/sorted/filters\n\nFuture Roadmap\n\nTo work with out flaws!\nSave and reload data to local files\nimproved docs: screenshots and architectural diagrams\n\nconsider https://github.com/EventEmitter2/EventEmitter2 for multi-threaded msgs with service workers\n\n\n\nItems (still) requiring online access\n\nGeoCoding an address\nAll maps (for now)\n3Word functionality (for now)\n\nTo Run\n\n(Future:) Simply visit https://www.RangerTrak.org once and the 2nd time you visit you will be given an option to 'install/download' the web page/application. That should put an icon on your homescreen or desktop that you can thereafter access without Internet access!\n\nTo Build and Test\n\nGrab a local copy of Github.com/eocOnline/Rangertrak\n\nInstall NodeJS and NPM\n\ncd RangerTrak\n\nnpm install\n\nng serve -o\n\nor Run ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\n\n\nRunning unit tests\n\nRun ng test to execute the unit tests via Karma.\n\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nArchitecture\n\n![This architecural diagram is unimplemented yet]( .\\src\\docs\\RangerTrak.png \"Future architectural diagram\")\n\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\neoc.online\neoc.online provides free tools for Emergency Operations Centers and emergency services. For more information and to report issues please visit http://eoc.online.\n©2022 eoc.online, under the MIT License\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 eoc.online\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LazyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LazyRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/myUnusedPipe.html":{"url":"pipes/myUnusedPipe.html","title":"pipe - myUnusedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  myUnusedPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/field-reports/field-reports.component.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        myUnusedPipe\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(val: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/field-reports/field-reports.component.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Component, Inject, Pipe, PipeTransform, OnInit } from '@angular/core';\nimport { FieldReportService, FieldReportType, FieldReportStatusType, RangerService, SettingsService, TeamService } from '../shared/services';\n\nimport { DOCUMENT, formatDate } from '@angular/common'\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Pipe({ name: 'myUnusedPipe' })\nexport class myUnusedPipe implements PipeTransform {\n  transform(val: string) {\n    return val.toUpperCase()\n  }\n}\n\n// TODO: https://blog.ag-grid.com/refresh-grid-after-data-change/\n// https://stackblitz.com/edit/ag-grid-angular-hello-world-n3aceq?file=src%2Fapp%2Fapp.component.ts\n// https://www.ag-grid.com/javascript-data-grid/immutable-data/\n//\n/*\nonGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n\n    this.http\n      .get(\n        \"https://raw.githubusercontent.com/ag-grid/ag-grid/master/grid-packages/ag-grid-docs/src/olympicWinnersSmall.json\"\n      )\n      .subscribe((data: any[]) => {\n        data.length = 10;\n        data = data.map((row, index) => {\n          return { ...row, id: index + 1 };\n        });\n        this.backupRowData = data;\n        this.rowData = data;\n      });\n  }\n*/\n\n@Component({\n  selector: 'rangertrak-field-reports',\n  templateUrl: './field-reports.component.html',\n  styleUrls: ['./field-reports.component.scss']\n})\nexport class FieldReportsComponent implements OnInit {\n\n  fieldReports: FieldReportType[] = []\n  fieldReportStatuses: FieldReportStatusType[] = []\n  private settings\n\n  private gridApi: any\n  private gridColumnApi\n  now: Date\n  http: any\n  numSeperatorWarnings = 0\n  maxSeperatorWarnings = 3\n  numFakesForm!: FormGroup\n  nFakes = 10\n\n  // https://www.ag-grid.com/angular-data-grid/grid-interface/#grid-options-1\n  gridOptions = {\n    // PROPERTIES\n    rowSelection: \"multiple\",\n    // pagination: true,\n\n    // EVENT handlers\n    // onRowClicked: event => console.log('A row was clicked'),\n\n    // CALLBACKS\n    // getRowHeight: (params) => 25\n  }\n\n  defaultColDef = {\n    flex: 1, //https://ag-grid.com/angular-data-grid/column-sizing/#column-flex\n    minWidth: 100,\n    editable: true,\n    resizable: true,\n    sortable: true,\n    filter: true,\n    floatingFilter: true\n  }\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private fieldReportService: FieldReportService,\n    private teamService: TeamService,\n    private rangerService: RangerService,\n    private settingsService: SettingsService,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.now = new Date()\n    this.gridApi = \"\"\n    this.gridColumnApi = \"\"\n\n    this.settings = SettingsService\n    this.fieldReportStatuses = settingsService.getFieldReportStatuses() // TODO: Only obtained at construction, won't reflect an update from the settings page??? : SUBSCRIBE!!\n  }\n\n\n  myDateGetter = (params: { data: FieldReportType }) => {\n    const weekday = [\"Sun \", \"Mon \", \"Tue \", \"Wed \", \"Thu \", \"Fri \", \"Sat \"]\n    let dt = 'unknown date'\n    let d: Date = params.data.date\n    //console.log(`Day is: ${d.toISOString()}`)\n    //console.log(`WeekDay is: ${d.getDay}`)\n\n    try {  // TODO: Use the date pipe instead?\n      //weekday[d.getDay()] +\n      dt = formatDate(d, 'M-dd HH:MM:ss', 'en-US')\n      //console.log(`Day is: ${params.data.date.toISOString()}`)\n    } catch (error: any) {\n      dt = `Bad date format: Error name: ${error.name}; msg: ${error.message}`\n    }\n\n    // https://www.w3schools.com/jsref/jsref_obj_date.asp\n    //console.log(`Day is: ${params.data.date.toISOString()}`)\n    /*\n        if (this.isValidDate(d)) {\n          dt = weekday[d.getDay()] + formatDate(d, 'yyyy-MM-dd HH:MM:ss', 'en-US')\n          console.log(`Day is: ${params.data.date.toISOString()}`)\n        }\n    */\n    return dt\n  }\n\n  myMinuteGetter = (params: { data: FieldReportType }) => {\n    // performance.now() is better - for elapsed time...\n    //let pi: number = 3.14159265359\n    let dt = new Date(params.data.date).getTime()\n    let milliseconds = Date.now() - dt\n    let seconds: string = (Math.round(milliseconds / 1000) % 60).toString().padStart(2, '0')\n    let minutes: string = Math.round((milliseconds / (1000 * 60)) % 60).toString().padStart(2, '0')\n    let hours = Math.round((milliseconds / (1000 * 60 * 60)) % 24);\n    return (`${hours}:${minutes}:${seconds}`)\n  }\n\n  columnDefs = [\n    { headerName: \"ID\", field: \"id\", headerTooltip: 'Is this even needed?!' }, // TODO:\n    { headerName: \"CallSign\", field: \"callsign\", tooltipField: \"team\" },\n    // { headerName: \"Team\", field: \"team\" },\n    { headerName: \"Address\", field: \"address\", singleClickEdit: true, flex: 50 }, //, maxWidth: 200\n    { headerName: \"Lat\", field: \"lat\", singleClickEdit: true },\n    { headerName: \"Lng\", field: \"lng\", cellClass: 'number-cell' },\n    {\n      headerName: \"Time\", headerTooltip: 'Report date',\n      valueGetter: this.myDateGetter,\n    },\n    {\n      headerName: \"Elapsed\", headerTooltip: 'Hrs:Min:Sec since report',\n      valueGetter: this.myMinuteGetter,\n    },\n    {\n      headerName: \"Status\", field: \"status\", flex: 50,\n      cellStyle: (params: { value: string; }) => {\n        //this.fieldReportStatuses.forEach(function(value) { (params.value === value.status) ? { backgroundColor: value.color }  : return(null) }\n        for (let i = 0; i  {\n    if (params.data.status == 'Urgent') {\n      return \"cell-pass\" // see stylesheet for this\n    }\n    if (params.data.status == 'Check-in') {\n      return \"cell-pass\" // see stylesheet for this\n    }\n    return(``)\n  }\n*/\n\n  ngOnInit(): void {\n    console.log(\"Field Report Form ========== ngInit ==== at \", Date.now)\n\n    // TODO: This doesn't actually get the very latest field Report entries: do it by subuscription instead????\n    this.fieldReports = this.fieldReportService.getFieldReports()\n    console.log(`Now have ${this.fieldReports.length} Field Reports retrieved from Local Storage and/or fakes generated`)\n\n    this.numFakesForm = this.formBuilder.group({})\n\n    if (!this.settings.debugMode) {\n      console.log(\"running in non-debug mode\")\n      // this.displayHide(\"enter__Fake--id\") // debug mode SHOULD be ON...\n    } else {\n      console.log(\"running in debug mode\")\n      this.displayShow(\"enter__Fake--id\")\n    }\n\n    if (this.gridApi) {\n      this.gridApi.refreshCells()\n    } else {\n      console.log(\"no this.gridApi yet in ngOnInit()\")\n    }\n  }\n\n  reloadPage() {\n    window.location.reload()\n  }\n\n  isValidDate(d: any) {\n    return d instanceof Date //&& !isNaN(d);\n    /*\n        if (Object.prototype.toString.call(d) !== \"[object Date]\") {\n          console.log(`bad date type:${Object.prototype.toString.call(d)}`)\n          return false\n        } // invalid date\n        if (isNaN(d.getTime())) {\n          console.log(`bad time`)\n          return false\n        } // d.valueOf() could also work  // invalid time\n        return true  // valid date\n        */\n  }\n\n  // filteredReports:FieldReportType[] = this.fieldReportService.filterFieldReportsByDate(Date(-12*60*60*1000), Date(5*60*1000)) //FUTURE:\n\n  onGridReady = (params: any) => {\n    console.log(\"Field Report Form onGridReady\")\n\n    this.gridApi = params.api\n    this.gridColumnApi = params.columnApi\n\n    params.api.sizeColumnsToFit() //https://ag-grid.com/angular-data-grid/column-sizing/#example-default-resizing // TODO: use this line, or next routine?!\n  }\n\n  //onFirstDataRendered(params: any) {\n  refreshGrid() {\n    if (this.gridApi) {\n      this.gridApi.refreshCells()\n      this.gridApi.sizeColumnsToFit();\n    } else {\n      console.log(\"no this.gridApi yet in refreshGrid()\")\n    }\n  }\n\n  // following from https://ag-grid.com/javascript-data-grid/csv-export/\n  getValue(inputSelector: string) {\n    //let selector = this.document.querySelector(inputSelector) as HTMLSelectElement\n    let selector = this.document.getElementById('columnSeparator') as HTMLSelectElement\n    var sel = selector.selectedIndex;\n    var opt = selector.options[sel];\n    var selVal = (opt).value;\n    var selText = (opt).text\n    // console.log(`Got column seperator text:\"${selText}\", val:\"${selVal}\"`)\n\n    switch (selVal) {\n      case 'none':\n        return;\n      case 'tab':\n        return '\\t';\n      default:\n        return selVal;\n    }\n  }\n\n  getParams() {\n    let dt = new Date()\n    return {\n      columnSeparator: this.getValue('columnSeparator'),\n      fileName: `FieldReportsExport.${dt.getFullYear()}-${dt.getMonth() + 1}-${dt.getDate()}_${dt.getHours()}:${dt.getMinutes()}.csv`,  // REVIEW: ONLY month is zero based, requires +1?!\n    }\n  }\n\n  onSeperatorChange() {\n    var params = this.getParams();\n    if (params.columnSeparator && this.numSeperatorWarnings++ \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_LazyModule\n\n\n\ncluster_LazyModule_declarations\n\n\n\ncluster_LazyModule_imports\n\n\n\ncluster_LazyModule_exports\n\n\n\ncluster_LazyModule_providers\n\n\n\n\nAlertsComponent\n\nAlertsComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAlertsComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nColorEditor\n\nColorEditor\n\nAppModule -->\n\nColorEditor->AppModule\n\n\n\n\n\nEntryComponent\n\nEntryComponent\n\nAppModule -->\n\nEntryComponent->AppModule\n\n\n\n\n\nFieldReportsComponent\n\nFieldReportsComponent\n\nAppModule -->\n\nFieldReportsComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGmapComponent\n\nGmapComponent\n\nAppModule -->\n\nGmapComponent->AppModule\n\n\n\n\n\nLmapComponent\n\nLmapComponent\n\nAppModule -->\n\nLmapComponent->AppModule\n\n\n\n\n\nLogComponent\n\nLogComponent\n\nAppModule -->\n\nLogComponent->AppModule\n\n\n\n\n\nMoodEditor\n\nMoodEditor\n\nAppModule -->\n\nMoodEditor->AppModule\n\n\n\n\n\nMoodRenderer\n\nMoodRenderer\n\nAppModule -->\n\nMoodRenderer->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nRangersComponent\n\nRangersComponent\n\nAppModule -->\n\nRangersComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nX404Component\n\nX404Component\n\nAppModule -->\n\nX404Component->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLazyModule\n\nLazyModule\n\nAppModule -->\n\nLazyModule->AppModule\n\n\n\n\n\nAboutComponent \n\nAboutComponent \n\nAboutComponent  -->\n\nLazyModule->AboutComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nFieldReportService\n\nFieldReportService\n\nAppModule -->\n\nFieldReportService->AppModule\n\n\n\n\n\nMarkerService\n\nMarkerService\n\nAppModule -->\n\nMarkerService->AppModule\n\n\n\n\n\nPopupService\n\nPopupService\n\nAppModule -->\n\nPopupService->AppModule\n\n\n\n\n\nRangerService\n\nRangerService\n\nAppModule -->\n\nRangerService->AppModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nAppModule -->\n\nSettingsService->AppModule\n\n\n\n\n\nShapeService\n\nShapeService\n\nAppModule -->\n\nShapeService->AppModule\n\n\n\n\n\nTeamService\n\nTeamService\n\nAppModule -->\n\nTeamService->AppModule\n\n\n\n\n\nAboutComponent\n\nAboutComponent\n\nLazyModule -->\n\nAboutComponent->LazyModule\n\n\n\n\n\nLazyComponent\n\nLazyComponent\n\nLazyModule -->\n\nLazyComponent->LazyModule\n\n\n\n\n\nLazyRoutingModule\n\nLazyRoutingModule\n\nLazyModule -->\n\nLazyRoutingModule->LazyModule\n\n\n\n\n\nThreeWordsService\n\nThreeWordsService\n\nLazyModule -->\n\nThreeWordsService->LazyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        1 Route\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addressType   (src/.../lmap.component.ts)\n                        \n                        \n                            AOA   (src/.../rangers.component.ts)\n                        \n                        \n                            AOA   (src/.../ranger.service.ts)\n                        \n                        \n                            DirType   (src/.../coordinate.ts)\n                        \n                        \n                            FieldReportStatusType   (src/.../settings.service.ts)\n                        \n                        \n                            FieldReportType   (src/.../field-report.service.ts)\n                        \n                        \n                            MarkerType   (src/.../marker.service.ts)\n                        \n                        \n                            Placement   (src/.../entry.component.ts)\n                        \n                        \n                            SecretType   (src/.../settings.service.ts)\n                        \n                        \n                            SettingsType   (src/.../settings.service.ts)\n                        \n                        \n                            Strategy   (src/.../entry.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/lmap/lmap.component.ts\n    \n    \n        \n            \n                \n                    \n                    addressType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/rangers/rangers.component.ts\n    \n    \n        \n            \n                \n                    \n                    AOA\n                \n            \n            \n                \n                        any[][]\n\n                \n            \n        \n    \n    src/app/shared/services/ranger.service.ts\n    \n    \n        \n            \n                \n                    \n                    AOA\n                \n            \n            \n                \n                        any[][]\n\n                \n            \n        \n    \n    src/app/shared/coordinate.ts\n    \n    \n        \n            \n                \n                    \n                    DirType\n                \n            \n            \n                \n                        \"E\" | \"W\" | \"N\" | \"S\"\n\n                \n            \n        \n    \n    src/app/shared/services/settings.service.ts\n    \n    \n        \n            \n                \n                    \n                    FieldReportStatusType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SecretType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SettingsType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/shared/services/field-report.service.ts\n    \n    \n        \n            \n                \n                    \n                    FieldReportType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/shared/services/marker.service.ts\n    \n    \n        \n            \n                \n                    \n                    MarkerType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/entry/entry.component.ts\n    \n    \n        \n            \n                \n                    \n                    Placement\n                \n            \n            \n                \n                        \"auto\" | \"auto-start\" | \"auto-end\" | \"top\" | \"top-start\" | \"top-end\" | \"bottom\" | \"bottom-start\" | \"bottom-end\" | \"right\" | \"right-start\" | \"right-end\" | \"left\" | \"left-start\" | \"left-end\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Strategy\n                \n            \n            \n                \n                        \"absolute\" | \"fixed\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            google   (src/.../gmap.component.ts)\n                        \n                        \n                            gridOptions1   (src/.../csvImport.ts)\n                        \n                        \n                            iconDefault   (src/.../lmap.component.ts)\n                        \n                        \n                            iconRetinaUrl   (src/.../lmap.component.ts)\n                        \n                        \n                            iconUrl   (src/.../lmap.component.ts)\n                        \n                        \n                            LATITUDE_MAX   (src/.../open-location-code.ts)\n                        \n                        \n                            LONGITUDE_MAX   (src/.../open-location-code.ts)\n                        \n                        \n                            marker   (src/.../gmap.component.ts)\n                        \n                        \n                            markerIcon   (src/.../lmap.component.ts)\n                        \n                        \n                            shadowUrl   (src/.../lmap.component.ts)\n                        \n                        \n                            THUMBUP_ICON   (src/.../entry.component.ts)\n                        \n                        \n                            Vashon   (src/.../entry.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/gmap/gmap.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        google\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        marker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         google.maps.Marker\n\n                    \n                \n\n\n        \n    \n\n    src/app/rangers/csvImport.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gridOptions1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  columnDefs: [\n    { field: \"athlete\", minWidth: 180 },\n    { field: \"age\" },\n    { field: \"country\", minWidth: 150 },\n    { field: \"year\" },\n    { field: \"date\", minWidth: 130 },\n    { field: \"sport\", minWidth: 100 },\n    { field: \"gold\" },\n    { field: \"silver\" },\n    { field: \"bronze\" },\n    { field: \"total\" }\n  ],\n\n  defaultColDef: {\n    resizable: true,\n    minWidth: 80,\n    flex: 1\n  },\n\n  rowData: []\n}\n                    \n                \n\n\n        \n    \n\n    src/app/lmap/lmap.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        iconDefault\n                        \n                    \n                \n            \n                \n                    \n                        Default value : L.icon({\n  iconRetinaUrl,\n  iconUrl,\n  shadowUrl,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  tooltipAnchor: [16, -28],\n  shadowSize: [41, 41]\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconRetinaUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/imgs/marker-icon-2x.png'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/imgs/marker-icon.png'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markerIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : L.icon({\n  iconSize: [20, 25],\n  iconUrl: 'https://unpkg.com/leaflet/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet/dist/images/marker-shadow.png'\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shadowUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/imgs/marker-shadow.png'\n                    \n                \n\n\n        \n    \n\n    src/app/shared/open-location-code.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LATITUDE_MAX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 90\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LONGITUDE_MAX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 180\n                    \n                \n\n\n        \n    \n\n    src/app/entry/entry.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        THUMBUP_ICON\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n  \n    \n    \n  \n`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Vashon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         google.maps.LatLngLiteral\n\n                    \n                \n                \n                    \n                        Default value : { lat: 47.4471, lng: -122.4627 }\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
