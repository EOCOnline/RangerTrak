 <!doctype html>
<html lang="en">
<!-- ©2019 eoc.online, under the MIT License -->
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Ranger Track</title>
  <link rel="shortcut icon" href="icons/favicon.png" type="image/x-icon">
  <link rel="stylesheet" href="css/jsgrid.min.css"/>
  <link rel="stylesheet" href="css/jsgrid-theme.min.css"/>
  <link rel="stylesheet" href="css/leaflet.css"/>
  <link rel="stylesheet" href="css/MarkerCluster.css"/>
  <!--Next is not needed if using your own iconCreateFunction - vs. the default one   base vs. smoothness-->
  <link rel="stylesheet" href="css/MarkerCluster.Default.css"/>
  <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans+Condensed:300|Saira+Extra+Condensed|Roboto|Boogaloo|Anton|Faster+One">
  <link rel="stylesheet" href="css/MarkerCluster.Default.css"/>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">

  <style>
    .indented {
      margin-left: 5vw;
    }

    .jsgrid {
      font-family: 'Open Sans Condensed','Saira Extra Condensed', "Helvetica Neue Light","Open Sans",Helvetica, sans-serif;
      /* font-size: small; */
      border: 1px;
    }

    .xxxxxjsgrid-grid-body {
      height:60%;
    }

    #alerts {
      border: 2px solid darkgoldenrod;
      color: darkorange;
      font-family: "Boogaloo","Anton","Roboto","Open Sans",Helvetica, sans-serif;
      font-size: x-large;
      text-align: center;
    }

    #panels {
      width: 95vw;
      height: 80vh;
    }

    /* #region  - Sticky navbar attempt - also see js code at bottom */
    .ui-tabs-anchor {
      background-color: rgb(187, 221, 124);
      font-size: small;
      /* position: fixed; */
    }

    /* Style the navbar */
    #navbar55 {
      overflow: hidden;
      background-color: #333;
    }

    /* Navbar links */
    #navbar55 a {
      float: left;
      display: block;
    }

    /* Page content */
    .content55 {
      padding: 16px;
    }

    /* The sticky class is added to the navbar with JS when it reaches its scroll position */
    .sticky {
      position: fixed;
      top: 0;
      width: 100%;
    }

    /* Add some top padding to the page content to prevent sudden quick movement (as the navigation bar gets a new position at the top of the page (position:fixed and top:0) */
    .sticky + .content {
      padding-top: 60px;
    }
    /* #endregion */

    .copyLeft {
      text-decoration:none;
      font-size: small;
      float:right;
      margin-right: 3vw;
      font-family: "Faster One","Open Sans",Helvetica, sans-serif;
    }

    h4 {
      margin-bottom: 0px;
    }

    .leaflet-popup-content {
      margin: 5px;
      font-size: x-small;
      font-family: 'Open Sans Condensed','Saira Extra Condensed', "Helvetica Neue Light","Open Sans",Helvetica, sans-serif;
    }

    fieldset {
      border: 0px;
      /*
        border-left: 0px;
        border-bottom: 0px;
        border-color: rgb(233, 233, 233);
      */
    }
    legend {
      /* Used for FieldSet text?
        font-family: "Helvetica Neue Light","Open Sans",Helvetica, sans-serif;
      */
      font-weight: bold;
      margin-left: -20px;
    }

    input {
      /*
        input[type=text] {
        width: 100%;
        box-sizing: border-box;
      */
      padding: 4px 6px;
      margin: 1px 0;
      border: 2px solid grey;
      border-radius: 5px;
    }

    #license-label {
      display: block;
      /*font-weight: bold;
      margin-left: 20%; */
    }
    #license-icon {
      float: right;
      height: 32px;
      width: 32px;
    }
    #licensee-name {
      margin: 0;
      padding: 0;
    }
    #entryPanel {
      font-family: "Roboto","Helvetica Neue Light","Open Sans",Helvetica, sans-serif;
      font-size: larger;
    }

    #smallMapId {
      display: block;
      float: right;
      height: 30vh;
      width: 40vw;
      border: 1px brown;
      background-color: aliceblue;
    }

    #bigGoogMapId {
      width: 100%;
      height: 70vh;
      border: 1px;
    }
  </style>

  <!-- loadFromLocalStorage ???
    Move these to bottom of body?? -->
  <!--script src="js/jquery.min.js"></script>  <-- 4.4.1 -->
  <script src="js/jquery-1.12.4.js"></script>
  <script src="js/jquery-ui-1.12.1.js"></script>
  <script src="js/leaflet.js"></script>
  <script src="js/leaflet.markercluster.js"></script>
  <script src="js/jsgrid.min.js"></script>
  <script src="js/what3words.js?key=YOUR_API_KEY"></script>
  <script src="js/openlocationcode.js"></script>
  <script src="js/esri-leaflet.js"></script>
  <script src="js/FileSaver.js"></script>
  <script src="js/tableexport.js"></script>
  <!-- script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script -->
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js" integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV" crossorigin="anonymous"></script>

  <script>
      // https://api.jqueryui.com/tabs/
      $( function() {
        $( "#panels" ).tabs();
      } );
  </script>
  <!-- Above for local (no Internet) usage ... retrieved from:

      <link href="https://fonts.googleapis.com/css?family=Open+Sans+Condensed:300|Saira+Extra+Condensed" rel="stylesheet">

      <link type="text/css" rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css" />
      <link type="text/css" rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css" />
      <link rel="stylesheet" href="https://unpkg.com/leaflet@1.4.0/dist/leaflet.css" integrity="sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA==" crossorigin=""/>

      <script src="https://code.jquery.com/jquery4.4.1.min.js"></script>
      <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
      integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>
      <script src="https://unpkg.com/leaflet@1.4.0/dist/leaflet.js" integrity="sha512-QVftwZFqvtRNi0ZyCtsznlKSWOStnDORoefr1enyq5mVL4tmKB3S/EnC3rRJcxCPavG10IcrVGSmPh6Qw5lwrg==" crossorigin=""></script>
      <script type="text/javascript" src="hvascript" src="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js"></script>
      <script src="https://assets.what3words.com/sdk/v3/what3words.js?key=YOUR_API_KEY"></script>
      <script src="https://unpkg.com/esri-leaflet@2.2.4/dist/esri-leaflet.js"
      integrity="sha512-tyPum7h2h36X52O2gz+Pe8z/3l+Y9S1yEUscbVs5r5aEY5dFmP1WWRY/WLLElnFHa+k1JBQZSCDGwEAnm2IxAQ=="
      crossorigin=""></script>
  -->
</head>

<body onload="resetForm()" id="default" cz-shortcut-listen="true">
    <!--#region panels -->
    <div id="panels">
      <ul>
        <li><a href="#entryPanel">Location Entry</a></li>
        <li><a href="#locationsPanel">Locations</a></li>
        <li><a href="#mapLeafletPanel">Leaflet Map</a></li>
        <li><a href="#mapGoogPanel">Google Map</a></li>
        <li><a href="#participantsPanel">Participants</a></li>
        <li><a href="#settingsPanel">Settings</a></li>
        <li><a href="#debugLogPanel">Log</a></li>
        <li><a href="#aboutPanel">About</a></li>
      </ul>

      <div id="entryPanel">
          <form id="locationEntry"> <!-- method="post" -->
            <fieldset><legend>Who</legend>
              <div id="license-label" Title="Enter any part of the call sign (or enter Backspace to see all) - then click on one">
                CallSign: <input id="license" value="" size="8" autofocus>
                <span id="team-label" Title="Enter any part of their team name (or enter Backspace to see all) - then click on one">
                Team: <input id="team" value="" size="8"></span>
                <span id="licensee-name" value=""></span>
                <img id="license-icon" src="images/transparent_1x1.png"   value="images/transparent_1x1.png" class="ui-state-default" alt=""/>
              </div>
              <!-- span id="team-label" Title="Enter any part of their team name (or enter Backspace to see all) - then click on one">
                Team: <input id="team" value=""></span -->
              <!--
                https://html.com/attributes/input-list/
                or https://leaverou.github.io/awesomplete/ (no listing...)
                https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist
                https://www.w3schools.com/tags/tryit.asp?filename=tryhtml5_datalist Works, but NOT on this page!!!
              -->

              <!--
                Phone: <input type="tel" name="phone" pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" value="206-">
                <span>Format: 123456-7890</span>
              -->
            </fieldset>

            <fieldset><legend>Where</legend>
              Street Address, +Code, or What3Words (optional): <input name="addresses" id="addresses" type="text" size="15" value=""
              placeholder="" title ="Enter www.Plus.Codes, www.What3Words.com, or streeet address for geocoding."
              onchange="chkAddresses()"> <!-- placeholder="84VVCGWP+VW" title ="Enter short or full PlusCode" placeholder="pil.tutles.binde"-->
              <span id="addressLabel" value=""></span>
              <span id="pCodeGlobal"></span>
              <br>
              Latitude: &nbsp;&nbsp;
                <input name="latitudeQ" id="latitudeQ" type="text" value="N" size="1"
                  pattern="'e','E','w','W'" title="E or W" onchange="DMSCoordsChanged()"> <!-- Quadrant -->
                <input name="latitudeD" id="latitudeD" type="text" value="47" size="2" min="0" max = "180" onchange="DMSCoordsChanged()">°
                <input name="latitudeM" id="latitudeM" type="text" value="" size="2"  min="0" max="59" onchange="DMSCoordsChanged()">'
                <input name="latitudeS" id="latitudeS" type="text" value="" size="5" min="0" max="59.99" onchange="DMSCoordsChanged()">"
                &nbsp;&nbsp; or &nbsp;&nbsp;<input name="latitudeDD" id="latitudeDD" type="text" size="7" min="-180" max = "180" onchange="DDCoordsChanged()">°
                </br>
              Longitude:
                <input name="longitudeQ" id="longitudeQ" type="text" value="W" size="1"
                  pattern="'n','N','s','S'"  title="N or S" onchange="DMSCoordsChanged()">
                <input name="longitudeD" id="longitudeD" type="text" value="122" size="2" max = "180" onchange="DMSCoordsChanged()">°
                <input name="longitudeM" id="longitudeM" type="text" value="" size="2"  min="0" max="59" onchange="DMSCoordsChanged()">'
                <input name="longitudeS" id="longitudeS" type="text" value="" size="5"  min="0" max="59.99" onchange="DMSCoordsChanged()">"
                &nbsp;&nbsp; or &nbsp;&nbsp;<input name="longitudeDD" id="longitudeDD" type="text" size="7"  min="-180" max="180" onchange="DDCoordsChanged()">°
              </br>
            </fieldset>

            <div id="smallMapId"></div>

            <fieldset><legend>When</legend>
              <input type="datetime-local" id="datetime" onfocus="setCurrentTime()">
            </fieldset>

            <fieldset><legend>What</legend>
              Status: <input name="status" id="status" type="checkbox" title="Status is only for your use, ignored otherwise." value=unchecked><br>
              Notes:  <input name="notes" id="notes" type="text" size="30" title="Notes are only for your use, ignored otherwise." value=""><br>
            </fieldset>
            <br>

            <input id="submitButton" type="button" value="Publish Location" onclick="publishLocation()";>
            <input type="reset" value="Reset Form" onclick="resetForm()">
          </form>
          <br>
          <div id="upshotTitle"></div>
          <div id="upshotGrid"></div>
          <!-- div id="upshotMap">
              <div id="upshotMapId" style="width: 100px; height: 100px;"></div>
          </div -->
       </div>
      <div id="locationsPanel">
        <div id="jsLocationsGrid"></div>
        <form id="saveToFile">
          <input id="submitButton" type="button" value="Display 'Export to CSV' Button" onclick="saveLocationsToFile()">
        </form>
       </div>

       <div id="mapLeafletPanel" onactivate="resetMap()">
        <p>Click zooms to cluster's bounds or shows coordinates, scroll wheel zooms & drag mouse to move.</p>
        <form id="mapLeafletEntry">
          <fieldset><legend>Filter</legend>
            <div Title="Only entries matching ALL the following filters will be displayed.">
              Team: <input id="teamFilterId" value="" size="8" autofocus>
              AND  Callsign: <input id="callFilterId" size="8" value="">
              AND  Within <input id="minuteFilterId" size="5" value="0">
              Minutes of <input id="baseTimeFilterId" size="15" value="">
            </div>
          </fieldset>
          <input id="submitButton" type="button" value="Filter Map" onclick="filterLeafletMap()";>
          <strong>← Click this button to recenter map & zoom to markers!</strong>
          <!--input type="reset" value="Reset Map" onclick="resetMapForm()"-->
          </form>
          <br>
        <div id="bigLeafletMapId" style="width: 100%; height: 70vh;"></div>
       </div>
       <div id="mapGoogPanel">
        <div>N.B., Markers are hardwired still: they do NOT reflect current positions!!! Use Scroll wheel to zoom & hold down the mouse key to move.
        </div>
        <div id="bigGoogMapId"></div>
       </div>
      <div id="participantsPanel">
        <h4>N.B., Any edits only apply to this session! Refreshing the page will restore original values - for now.</h4>
        <br>

        <form id="partStorage">
          <fieldset><legend>Participants</legend></fieldset>
          <details>
            <summary>Instructions</summary>
            This list of participants was taken from the FCC Database in May 2019.

            It has been significantly reformatted and your edits may alter it further.
            To maintain these changes between browser sessions, we can write the following table to the Browser Local Storage where it will remain until deleted. (There is a 5MB maximum per domain, per browser.)
          </details>

          Save Participants Data?<br>
          <input type="radio" name="dataAction" value="Nothing" checked>Continue to use the following data, but do not replace any existing stored data (safest option).<br>
          <input type="radio" name="dataAction" value="Load">Use saved data to overwrite the following data<br>
          <input type="radio" name="dataAction" value="Save">Save following data to browser local storage, overwriting any existing data there.<br>
          <fieldset><legend>Ma, Save Yer Data:</legend>
            <div Title="">
              Name to store this data as: <input id="localStorageName" value="LOCAL_STORAGE_NAME">
            </div>
          </fieldset>
          <input type="radio" name="dataAction" value="DELETE!">Delete app\'s data in browser local storage<br>
          <br>

          <input id="submitButton" type="button" value="Save Settings" onclick="chkPartStorage()">
          <input type="reset" value="Reset">
          <!-- Add a cancel buton too?-->
        </form>


        <div id="jsParticipantsGrid"></div>
       </div>
      <div id="settingsPanel">
          <h4>N.B., Any edits only apply to this session! Refreshing the page will restore original values - for now.</h4>
          <br>
          To change font size, try using CTRL+mouse wheel or your browser's view size settings. (Let me know if that's not sufficient.)
          <br><br>
          <fieldset><legend>Teams</legend></fieldset>
          <details>
            <summary>Instructions</summary>
            If Shape = 'Marker', then display the icon<br>
            If Shape = 'Circle', then display circles using color & fillColor<br>
            Note is ignored & for your use, if desired
          </details>
          <div id="teamGrid"></div>
          <br>

          <form id="SettingEntry"> <!-- method="post" -->
            <fieldset><legend>Markers & Icons:</legend>
              <div Title="">
                Circle Marker Size: <input id="circleSize" value="">
              </div>
            </fieldset>

            <fieldset><legend>Default Location</legend>
              <details>
                <summary>Guidance</summary>
                <ul>
                <li>This sets initial (default) values for lat & long.</li>
                <li>What3Words uses this to set the focus, prioritizing suggested
                results (for incorrect words) by proximity to this point.</li>
                <li>PlusCodes uses this for converting short to full/global codes.</li>
                <li>Maps do not use this. They are auto-centered on the bounding
                coordinates centroid of all points entered and the map is then
                zoomed to show all points.</li>
              </ul>
              </details>
              <div Title="">
                Lat: &nbsp;&nbsp;&nbsp;<input id="defLat" value="" title = "Only enter decimal degrees" autofocus><br>
                Long: <input id="defLong" value="" title = "Only enter decimal degrees"><br>
                <!-- is defaultPlusCode or suggested 3 words even needed??? -->
                Plus Code<input id="defPlusCode" value="" hidden>
              </div>
            </fieldset>

            <fieldset><legend>Debug:</legend>
              <div Title="">
                Output to Debug Log Panel <input name="debugToScreen" id="debugToScreen" type="checkbox" value=checked>
                <br>
                Output to Browser Console <input name="debugToConsole" id="debugToConsole" type="checkbox" value=unchecked>
              </div>
            </fieldset>

            <input id="submitButton" type="button" value="Save Settings" onclick="chkSettings()">
            <input type="reset" value="Reset">
            <!-- Add a cancel buton too?-->
            </form>

          <div id="settings"></div>
       </div>
       <div id="debugLogPanel">
        <div id="dbugLog"></div>
       </div>
       <div id="aboutPanel">
      <p>Version 4.2</p>
      <p>This is a sample application for tracking & mapping CERT, ACS, other
         teams, rangers & individuals roaming around, who are only reliably
         connected via HAM radio or other non-data supporting means. They can
         radio in their locations - in a variety of formats, and be centrally tracked.
      </p>
      <p>
        This should be able to function (with some degredation) even if the person
        using this is offline also.
      </p>
      <p>
        Items requiring online access:
        <ul>
          <li>GeoCoding an address</li>
          <li>All maps (for now)</li>
          <li>3Word functionality (for now)</li>
        </ul>
      </p>

      <p>eoc.online provides free tools for Emergency Operations Centers and
          emergency services. For more information and <strong>to report
          issues</strong> please visit <a href="http://eoc.online" target="_blank">http://eoc.online</a>.
      </p>

      <details>
        <summary>©2019 eoc.online, under the MIT License</summary>
        <small><p class="indented">Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p>
        <p class="indented">The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p>
        <p class="indented">THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>
        <p class="indented">-- from <a href="https://opensource.org/licenses/MIT" target="_blank">https://opensource.org/licenses/MIT</a></p>
      </small>
      </details>


     </div>
    </div>

    <a href="http://eoc.online" target="_blank" class="copyLeft">©2019 http://eoc.online - Free Tools for EOCs</a>
    <br>
    <div id="alerts"></div>
    <!--#endregion -->

<!---------------------------------------------------------------------->
<script>
  //#region //TODO: Make all global vars local. Maybe encapsulate in a function.
  var LOCAL_STORAGE_NAME = "eoc.online.RangerTracker.";
  var bigMap;
  var smallMap;
  var smallMapMarkers = [];
  var mapLeafletMarkers = [];
  var mapGoogMarkers = [];
  var mapEsriMarkers = [];
  var googMap;
  var esriMap;
  var initialized = false;
  var iconDir = "icons/"; // relative to js directory

  // Set focus for 3 words, PlusCodes and center of displayed big map
  var DEF_LAT = 47.4472;
  var DEF_LONG = -122.4627;  // Vashon EOC!
  var DEF_PCODE = 'CGWP+VV'; // '84VVCGWP+VW'is in the middle of the Pacific Ocean!!!; // or "CGWP+VX Vashon, Washington" = 47.447187,-122.462688
  var defPCodeLabel = " for Vashon, WA locale; Full code: ";
  // Set form default
  var initLatDD = "47.4472";
  var initLngDD = "-122.4627";
  var debug2Screen = true;
  var debug2Console = false;

  var TWords;
  var verifiedWords;

  var CIRCLE_SIZE = 5;
  var defTeamColor = "Red";
  var defTeamShape = "Circle";
  var defTeamFillColor = "Yellow";
  var defTeamOpacity = 0.4;

  var mapboxUrl = 'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=YOUR_API_KEY';
  // Default Public token: YOUR_API_KEY
  // Secret RangerTrak Token 18Sep2020: YOUR_API_KEY
  // <script src='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js'></scrip   t>
  // <link href='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css' rel='stylesheet' />


  var mapboxAttribution2 = 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
  '<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
  'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>';

  var mapboxAttribution = '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors';

  // TODO: make changes if user is on or off line?
  // https://www.w3schools.com/jsref/event_onoffline.asp
  // https://www.w3schools.com/js/js_htmldom_events.asp
  //#endregion

  function dbug(msg, alerts) {
    var dt = new Date();
    var time = zeroFill(dt.getHours(),2) + ":" + zeroFill(dt.getMinutes(),2) + ":" + zeroFill(dt.getSeconds(),2) + ":" + zeroFill(dt.getMilliseconds(),4);
    var dbugLog = time + "-  &nbsp;&nbsp;" + msg + "<br>" + document.getElementById("dbugLog").innerHTML;
    document.getElementById("dbugLog").innerHTML = dbugLog;
    // TODO: Only if settings say to do this!
    // console.log("Ranger Track: " + dbugLog); // Convert dbugLog from HTML to plain text...
    if (alerts==true) {
      $('#alerts').html("<strong>Alert!</strong> "+time + "-  &nbsp;&nbsp;" + msg);
      $('#alerts').fadeIn().delay(2500).fadeOut();
    }
  }

  // BUGBUG: Need to have at least one entry; also due to Hoisting, must be up here...
  // https://www.w3schools.com/js/js_function_closures.asp

  var teamLocations2 = [{
      CallSign:"", Licensee:"", Team:"", Date:"", Latitude:0, Longitude:0, Status:false, Notes:""
    }];

  var teamLocations = [{
      CallSign:"KB7MTM", Licensee:"Michael Meyer", Team:"T1", Date:"2019-05-05T13:43", Latitude:47.4294, Longitude:-122.4606, Status: false, Notes:"Michael's getting some coffee"
    }];
    //"3Words": "<a href='https://map.what3words.com/unspoiled.saving.automobiles' target='_blank'>unspoiled.saving.automobiles</a>",

  // Marker uses icons; Circle uses color + fillColor; Note is for user's notes
  var teams = [
    { value: "T1", icon: "T1.png", color: 'Magenta', fillColor: 'grey', shape: "Circle", note: ""},
    { value: "T2", icon: "T2.png", color: 'Green', fillColor: 'blue', shape: "Marker", note: ""},
    { value: "T3", icon: "T3.png", color: 'Red', fillColor: 'yellow', shape: "Circle", note: ""},
    { value: "T4", icon: "T4.png", color: 'Blue', fillColor: 'aqua', shape: "Marker", note: ""},
    { value: "T5", icon: "T5.png", color: 'Violet', fillColor: '#f03', shape: "Marker", note: ""},
    { value: "T6", icon: "T6.png", color: 'DodgerBlue', fillColor: '#f03', shape: "Circle", note: ""},
    { value: "Other", icon: "Other.png", color: 'Yellow', fillColor: '#f03', shape: "Circle", note: ""}
    ];

  function zeroFill(integ, lngth) {
    var strg = integ.toString();
    while (strg.length < lngth)
      strg = "0" + strg;
    return strg;
  }

  function resetForm () {
    // BUGBUG: This gets called, but THEN forms gets reset to defaults - destroying coords & time...
    dbug("Form reset");

    ////////document.getElementById("teamChoice").value = "T";
    document.getElementById("addressLabel").innerHTML = " for Vashon, WA locale; Full code: ";
    document.getElementById("pCodeGlobal").innerHTML = DEF_PCODE;

    // Works on Publish LOcation, but NOT Reset Form!!!
    updateCoords(initLatDD, initLngDD);

    // BUGBUG: Works on Publish Location, but NOT for Reset Form!!!
    setCurrentTime();

    /*
      // BUGBUG: Never worked...
      // don't allow changing month/year... TODO: Unless within x hours of month/year-end
      var mindt = dt.getFullYear()+ "-" + zeroFill(dt.getMonth(),2) + "-01T00:00";
      document.getElementById("datetime").min = mindt;
      var maxdt = dt.getFullYear()+ "-" + zeroFill(dt.getMonth(),2) + "41T00:00";
      document.getElementById("datetime").max = maxdt;
    */
  }

  // Could capture data entry user's current location as default or ???
  window.onload = function () {

    dbug("Window onload");

    resetForm();
    initSettings(); // Should only happen once

    initSmallMap();
    initLeafletMap();
    // initGoogMap(); init happens as callback of google maps js load
    displayLocationGrid();
    filterLocations();
    displayParticipantsGrid();
    displayTeamGrid();

    //document.getElementById("ui.id4").addEventListener("onfocus", filterLeafletMap());
    // https://www.w3schools.com/jquery/jquery_events.asp
    // https://www.w3schools.com/jsref/met_element_addeventlistener.asp
    // https://api.jqueryui.com/tabs/#event-activate

    // BUGBUG: How to get notified when user clicks on the Map tab???
    //$("#ui.id4.ui-tabs-anchor").activate(resetMap());
    $( "#panels" ).tabs(); //alert("#panels activated!");

    // ui-id-3 from below

    //$("#ui.id4.ui-tabs-anchor").activate(alert("#ui.id4.ui-tabs-anchor activated!"));
    //$("#ui.id4").activate(alert("#ui.id4 activated!"));
    //$("#mapLeafletPanel").activate(alert("#mapLeafletPanel activated!"));
    //$("mapLeafletPanel").activate(alert("mapLeafletPanel activated!"));
    // $( ".selector" ).on( "tabsactivate", function( event, ui ) {} );

    /*
      <ul role="tablist" class="ui-tabs-nav ui-corner-all ui-helper-reset ui-helper-clearfix ui-widget-header">
        <li role="tab" tabindex="-1" class="ui-tabs-tab ui-corner-top ui-state-default ui-tab" aria-controls="entryPanel" aria-labelledby="ui-id-1" aria-selected="false" aria-expanded="false"><a href="#entryPanel" role="presentation" tabindex="-1" class="ui-tabs-anchor" id="ui-id-1">Location Entry</a></li>

        <li role="tab" tabindex="0" class="ui-tabs-tab ui-corner-top ui-state-default ui-tab ui-tabs-active ui-state-active" aria-controls="locationsPanel" aria-labelledby="ui-id-2" aria-selected="true" aria-expanded="true"><a href="#locationsPanel" role="presentation" tabindex="-1" class="ui-tabs-anchor" id="ui-id-2">Locations</a></li>

        <li role="tab" tabindex="-1" class="ui-tabs-tab ui-corner-top ui-state-default ui-tab" aria-controls="debugLogPanel" aria-labelledby="ui-id-8" aria-selected="false" aria-expanded="false"><a href="#debugLogPanel" role="presentation" tabindex="-1" class="ui-tabs-anchor" id="ui-id-8">Log</a></li>
      </ul>
    */

    document.getElementById("ui-id-3").addEventListener("activate", filterLeafletMap());
    //document.getElementById("ui.id.3").addEventListener("activate", filterLeafletMap());

    //displayMyMap();
    displayGoogMap();

    localStorageCatalog();
  }

  //https://stackoverflow.com/questions/951021/what-is-the-javascript-version-of-sleep
  function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
  }

  function PointDD([latDD, lngDD]) {
    this.latDD = latDD;
    this.lngDD = lngDD;

    this.latDMS = DDToDMS(latDD, false);
    this.lngDMS = DDToDMS(lngDD, true);
  }

  function DMS(dir, deg, min, sec) {
    this.dir = dir; // e, E, w, W, s, S, n, N
    this.deg = deg;
    this.min = min;
    this.sec = sec;
  }

  function PointDMS([latDMS, lngDMS]) {
    this.latDMS = latDMS;
    this.lngDMS = lngDMS;

    this.latDD = DMSToDD(latDMS, false);
    this.lngDD = DMStoDD(lngDMS, true);
  }

  // Map constructor
  // "Map" conflicts with Google...
  function Map2(name, mapType) {
    this.name = name;
    this.mapType = mapType; // TODO: throw if not "leaflet" || "google"
    this.markers = [];
    this.bounds = [infinity, infinity, -infinity, -infinity]; // minLat, minLng, maxLat, maxLng
    this. clearMarkers = function() {
      dbug("map.clearMarkers()");
    };
    this.reset = function() {
      dbug("map.reset()");
      ;
    };

  };

  // Marker constructor
  function Marker(id, markerType) {

  }




  async function resetMap() {
    dbug("resetMap");
    await sleep(2000);
    dbug("resetMap has slept");
    filterLeafletMap();
    dbug("resetMap complete");
  }

  function setCurrentTime() {
    // WORKAROUND: This works on Publish Location AND Reset Form
    var dt = new Date();
    var newdt = dt.getFullYear()+ "-" + zeroFill(dt.getMonth()+1,2) + "-" + zeroFill(dt.getDate(),2)
      + "T" + zeroFill(dt.getHours(),2) +":" + zeroFill(dt.getMinutes(),2);
      dbug("setting Date:" + newdt);
    document.getElementById("datetime").value = newdt;
    document.getElementById("baseTimeFilterId").value = newdt;
  }

  function publishLocation() {
    dbug("Publishing Location");
    // If data to be loaded/saved/deleted, then ignore data entry...
    var doDataEntry = false;
    //var length;
    var dataAction = "Nothing"; //document.getElementById("dataAction").value;
    switch (dataAction)
    {
      case "Load":
        teamLocations = loadFromLocalStorage();
        break;
      case "Save":
        saveToLocalStorage(teamLocations);
        break;
      case "DELETE!":
        deleteLocalStorage();
        break;
      default:
        //Nothing
        doDataEntry = true;
        break;
    }

    if (doDataEntry) {

      //#region
      /*
        var callSign = document.getElementById("license").value;
        var licensee = document.getElementById("licensee-name").innerHTML; //binaryStringSearch(callSigns,callSign);
        dbug(callSign + "-" + licensee);

        var datetime = document.getElementById("datetime").value;

        var latDD = document.getElementById("latitudeDD").value;
        var lngDD = document.getElementById("longitudeDD").value;
        dbug("latDD: "+latDD+"; lngDD: "+lngDD);

        var team = document.getElementById("teamChoice").value;
        dbug("Team:"+team);

        var status = document.getElementById("status").value;
        var notes = document.getElementById("notes").value;
        dbug("Status: "+status+"; Notes: '"+notes);
      */
     //#endregion

      // Save user's Team, especialy if they hadn't one before...
      var lic = document.getElementById("license").value;
      var teamm = document.getElementById("team").value;
      var i;
      //dbug("__Publish Location: Update Callsign " + lic + "'s team to " + teamm);
      for (i=0; i<callSigns.length; i++) {
        //dbug("  Check match on Callsign=" + lic + "=="+callSigns[i].value);
        if (callSigns[i].value == lic) {
          //dbug("^^^^^^^Found match on Callsign=" + lic + "=="+callSigns[i].value);
          if (callSigns[i].team != teamm) {
            //dbug("0000000000 Now update Team...");
            callSigns[i].team = teamm;
          }
          else {
            //dbug("Teams matched...");
          }
        }
      }

      // Store data in array
      if (!teamLocations) {
        teamLocations = {
        CallSign: lic,
        Licensee: document.getElementById("licensee-name").innerHTML,
        Team: teamm,
        Date: document.getElementById("datetime").value,
        Latitude: document.getElementById("latitudeDD").value,
        Longitude: document.getElementById("longitudeDD").value,
        Status: document.getElementById("status").value,
        Notes: document.getElementById("notes").value
        };
      } else {
        teamLocations.push({
        CallSign: lic,
        Licensee: document.getElementById("licensee-name").innerHTML,
        Team: teamm,
        Date: document.getElementById("datetime").value,
        Latitude: document.getElementById("latitudeDD").value,
        Longitude: document.getElementById("longitudeDD").value,
        Status: document.getElementById("status").value,
        Notes: document.getElementById("notes").value
      });
      }



      // TODO: How to check for & notify of error?
      // Autosave data??
      // saveToLocalStorage(teamLocations);
    }

    displayStatus();
    dbug ("Location Published", true);
    displayLocationGrid();
    filterLocations();
    //(document.getElementById("latitudeDD").value, document.getElementById("longitudeDD").value);
    displayParticipantsGrid();
    displayTeamGrid();
    resetForm();
    //dbug("End Publish Location");
  }

  function initSettings() {
    dbug("initSettings()...");

    document.getElementById("defLat").value = DEF_LAT;
    document.getElementById("defLong").value = DEF_LONG;
    document.getElementById("defPlusCode").value = DEF_PCODE;
    document.getElementById("circleSize").value = CIRCLE_SIZE;
    document.getElementById("debugToScreen").checked  = debug2Screen;
    document.getElementById("debugToConsole").checked = debug2Console;

    /*
      $("#defLat").value = DEF_LAT;
      $("#defLong").value = DEF_LONG;
      $("#defPlusCode").value = DEF_PCODE;
      $("#circleSize").value = CIRCLE_SIZE;
      $("#debugToScreen").checked  = debug2Screen;
      $("#debugToConsole").checked = debug2Console;
    */
    //filterLeafletMap();
    initialized = true;
  }

  function chkSettings() {
    dbug("chkSettings()...");
    DEF_LAT = document.getElementById("defLat").value;
    DEF_LONG = document.getElementById("defLong").value;
    DEF_PCODE = document.getElementById("defPlusCode").value;
    CIRCLE_SIZE = document.getElementById("circleSize").value;
    debug2Screen = $("#debugToScreen").checked;
    debug2Console = $("#debugToConsole").checked;

    dbug("chkSettings(): CIRCLE_SIZE="+CIRCLE_SIZE);
  }

  function displayStatus() {
    $("#upshotTitle").replaceWith("<div id='upshotTitle'>Published OK:</div>");
    // Just display most recently pushed entry...
    $("#upshotGrid").jsGrid({
      width: "100%",
      height: "130px",
      filtering: false,
      inserting: false,
      editing: false,
      sorting: false,
      paging: false,
      data: teamLocations.slice(-1),
      fields: [
        { name: "CallSign", type: "text", width: 13, validate: "required" },
        { name: "Licensee", type: "text", width: 30 },
        { name: "Team", type: "text",  width: 15 },
        { name: "Date", type: "text", width: 30 },
        { name: "Latitude", type: "number", width: 20 },
        { name: "Longitude", type: "number", width: 20 },
        { name: "Status", type: "checkbox", title: "Status", sorting: false, width: 10 },
        { name: "Notes", type: "text", title: "Notes", width: 40 }
      ]
    });
  }

  function displayLocationGrid() {
    $("#jsLocationsGrid").jsGrid({
      width: "100%",
      height: "600px",
      filtering: true,
      inserting: true,
      editing: true,
      sorting: true,
      paging: true,
      data: teamLocations,
      fields: [
        { name: "CallSign", type: "text", width: 13, validate: "required" },
        { name: "Licensee", type: "text", width: 30 },
        { name: "Team", type: "text",  width: 15 },
        { name: "Date", type: "text", width: 15 },
        { name: "Latitude", type: "number", width: 20 },
        { name: "Longitude", type: "number", width: 20 },
        { name: "Status", type: "checkbox", title: "Status", sorting: false, width: 10 },
        { name: "Notes", type: "text", title: "Notes", width: 40 },
        { type: "control" }
      ]
    });
  }

  function chkPartStorage() {
    // Save/restore/merge/clear participant Storage, i.e., teamLocations[]
    dbug("chkPartStorage...");
    ;
  }


  function initLeafletMap() {
    // https://leaflet.github.io/Leaflet.markercluster/example/marker-clustering-zoomtobounds.html
    // https://leafletjs.com/examples/layers-control/
    // TODO: This needs to get moved to actual point/marker display...
    var //p1 = L.marker([DEF_LAT, DEF_LONG]).bindPopup('Person 1 - John'),
        //p2 = L.marker([DEF_LAT-.1, DEF_LONG-.02]).bindPopup('Person 2 - Fred'),
        //p3 = L.marker([DEF_LAT+.02, DEF_LONG+.01]).bindPopup('Person 3 - Sally'),
        //p4 = L.marker([DEF_LAT+.01, DEF_LONG+.02]).bindPopup('Person 4 - Bucky'),
        //p5 = L.marker([DEF_LAT, DEF_LONG]).bindPopup('Person 5 - maryAnne'),
        //p6 = L.marker([DEF_LAT-.13, DEF_LONG-.025]).bindPopup('Person 6 - Cathy'),
        //p7 = L.marker([DEF_LAT+.022, DEF_LONG+.014]).bindPopup('Person 7 - Michael'),
        p8 = L.marker([DEF_LAT+.011, DEF_LONG+.022]).bindPopup('Person 8 - Olivia');

    //Instead of adding them directly to the map, you can do the following, using the LayerGroup class:
    var Team1 = L.layerGroup([p8]); //, p2, p3, p4]);
    var Team2 = L.layerGroup([p8]); //, p6, p7, p8]);

    var grayscale = L.tileLayer(mapboxUrl, {id: 'mapId1', attribution: mapboxAttribution});
    var streets   = L.tileLayer(mapboxUrl, {id: 'mapId2', attribution: mapboxAttribution});
    var mstreets  = L.tileLayer(mapboxUrl, {maxZoom: 16, attribution: mapboxAttribution, id: 'mapbox.streets'})
    var estreets = L.esri.basemapLayer('Streets');

    //https://leafletjs.com/reference-1.4.0.html#control-layers
    var baseMaps = {
      //"<span style='color: gray'>Grayscale</span>": grayscale,    // grayscale may no longer exist??
      //"Streets": streets
    };
    var overlayMaps = {
      "Team1": Team1,
      "Team2": Team2
    };

    bigMap   = L.map('bigLeafletMapId', {maxZoom: 20,
      layers: [estreets] // actual layers on map   //, Team1, Team2
    });
    bigMap.setView([DEF_LAT, DEF_LONG], 8);


    // Add the layer widget to the map, requires maxzoom?
    L.control.layers(baseMaps, overlayMaps).addTo(bigMap);

    //L.tileLayer(mapboxUrl, {maxZoom: 18, attribution: mapboxAttribution,id: 'mapbox.streets'}).addTo(bigMap);
  }

  function initSmallMap() {
    smallMap = L.map('smallMapId' ).setView([DEF_LAT, DEF_LONG], 12);
    L.esri.basemapLayer('Streets').addTo(smallMap);

    /*
    L.tileLayer(mapboxUrl, {
      maxZoom: 18,
      attribution: mapboxAttribution,
      id: 'mapbox.streets'
    }).addTo(smallMap);
    */
    smallMap.setView([DEF_LAT,DEF_LONG], 12);

    smallMap.on('click', onSmallMapClick);
    // TODO: There are now 2 leaflet containers. OK?
    $('.leaflet-container').css('cursor','crosshair'); // reset cursor with ''!

    // Display coordinates if map is clicked
    var popup2 = L.popup();

    function onSmallMapClick(e) {
      popup2
        .setLatLng(e.latlng)
        .setContent(e.latlng.toString())
        .openOn(smallMap);
    }
  }

  function initGoogMap() {
    // https://developers.google.com/maps/documentation/
    googMap = new google.maps.Map(document.getElementById('bigGoogMapId'), {
      center: {lat: DEF_LAT, lng: DEF_LONG},
      zoom: 11,
      mapTypeId: 'terrain' // line is optional
    });
    /*
      MapTypes:
      roadmap - displays the default road map view. This is the default map type.
      satellite - displays Google Earth satellite images.
      hybrid - displays a mixture of normal and satellite views.
      terrain - displays a physical map based on terrain information.
    */

    var trafficLayer = new google.maps.TrafficLayer();
    trafficLayer.setMap(googMap);

    // https://developers.google.com/maps/documentation/javascript/maptypes
    // map.setTilt(45);
  }

  function filterLeafletMap() {
    dbug("filterLeafletMap...");
    /* Sorting:
      var points = [40, 100, 1, 5, 25, 10];
      points.sort(function(a, b){return a - b});
    */
    var team = document.getElementById("teamFilterId").value;
    var call = document.getElementById("callFilterId").value;
    var filters = {
      Team: document.getElementById("teamFilterId").value,
      CallSign: document.getElementById("callFilterId").value,
      Minutes: document.getElementById("minuteFilterId").value,
      BaseTime: document.getElementById("baseTimeFilterId").value
    };

    dbug("Filtering on: "
      + filters.Team + " AND "
      + filters.CallSign + " AND "
      + filters.Minutes + " AND "
      + filters.BaseTime);

    filterLocations(filters);
  }

  function filterLocations(filters) {

    // clear any previous markers
    clearLeafletMarkers();
    clearGoogMarkers();
    clearEsriMarkers();

    // Track min/max marker bounds
    var arrayOfLatLngs = [];
    var _this = this;
    var minLat=Infinity, minLng=Infinity, maxLat=-Infinity, maxLng=-Infinity;

    // setup a marker group
    // TODO: Move to map provider layer...
    var markers = L.markerClusterGroup();
    markers.clearLayers();
    //mapLeafletMarkers;


    if (teamLocations) {
    for (var i = 0; i < teamLocations.length; i++) {
      //dbug("Displaying marker "+i);
      // https://leafletjs.com/reference-1.4.0.html#marker
      var llat = teamLocations[i].Latitude;
      var llong = teamLocations[i].Longitude;

      /* Alternatives:
        // function myArrayMax(arr) {  return Math.max.apply(null, arr);   }
        // or by another index/object
        // var cars = [  {type:"Volvo", year:2016},   {type:"Saab", year:2001} ];   cars.sort(function(a, b){return a.year - b.year});
        // for string properties:
        // cars.sort(function(a, b){ var x = a.type.toLowerCase();  var y = b.type.toLowerCase();  if (x < y) {return -1;}  if (x > y) {return 1;}  return 0; });

        // new filtered array:
        // BUT: 11% slower: https://jsperf.com/array-filter-performance
        // var numbers = [45, 4, 9, 16, 25]; var over18 = numbers.filter(myFunction);  function myFunction(value, index, array) {  return value > 18;  }

        https://stackoverflow.com/questions/10557486
        https://api.jquery.com/jQuery.grep/
      */

      if (filters!=null) {
        // Process Filters...
        //dbug("Filters Received");

        //Filter Team?
        //dbug("Team["+i+"]="+teamLocations[i].Team);
        if (filters.Team.length!=0 && (teamLocations[i].Team!=filters.Team)) {
          dbug("#### Filtered out Team: ["+i+"]="+teamLocations[i].Team);
          continue;
        }

        // Filter CallSign?
        //dbug("Call["+i+"]="+teamLocations[i].CallSign);
        if (filters.CallSign.length!=0 && (teamLocations[i].CallSign!=filters.CallSign)) {
          dbug("#### Filtered out CallSign: ["+i+"]="+teamLocations[i].CallSign);
          continue;
        }

        // Filter based on time?
        //dbug("Time["+i+"]  =  "+teamLocations[i].Date);
        //dbug("BaseTime="+filters.BaseTime+"; minutes="+filters.Minutes);
        //dbug("Minutes="+Date.parse(teamLocations[i].Date)/60000.0);

        //dbug("Time Diff="+Math.abs(Date.parse(teamLocations[i].Date) - Date.parse(filters.BaseTime))/60000.0+"<br><br>");

        // Milliseconds/minute = 60+1000
        if (filters.Minutes!=0 && filters.BaseTime.length!=0 &&
        (Math.abs(Date.parse(teamLocations[i].Date) - Date.parse(filters.BaseTime)) >= filters.Minutes*60000.0) ) {
          dbug("#### Filtered out Time: ["+i+"]="+teamLocations[i].CallSign);
          continue;
        }
      }

      minLat = Math.min(minLat,llat);
      minLng = Math.min(minLng,llong);
      maxLat = Math.max(maxLat,llat);
      maxLng = Math.max(maxLng,llong);

      // setup the bounds
      arrayOfLatLngs.push([llat,llong]);

      // dbug("Coords='" + llat + ", " + llong + "'");
      // dbug("Map bounds reset to: ["+minLat+","+minLng+"], ["+maxLat+","+maxLng+"]");

      var color = defTeamColor;
      var shape = defTeamShape;
      var fillColor = defTeamFillColor;
      var fillOpacity = defTeamOpacity;

      var numTeams = teams.length;
      var teamsIndex;

      var team = teamLocations[i].Team;
      // dbug("teamLocations["+i+"]="+team);

      for (teamsIndex=0; teamsIndex<numTeams; teamsIndex++) {
        // dbug("filterLocations: teams["+teamsIndex+"].value='"+teams[teamsIndex].value+"' == team='"+team+"'");
        if (teams[teamsIndex].value == team) {
          color = teams[teamsIndex].color; //TODO: if !empty // BUGBUG: Likely assumes every team has values in the teams array. Unlikely, hah!
          fillColor = teams[teamsIndex].fillColor;
          //fillOpacity = teams[teamIndex].fillOpacity;
          shape = teams[teamsIndex].shape;
          // dbug("filterLocations: Teams index="+teamsIndex + "; color:"+color+"; fillColor:"+fillColor+"; fillOpacity:"+fillOpacity+"; shape:"+shape);
          break;
        }
      }




      displayLeafletMarkers();
      displayGoogMarkers();
      displayEsriMarkers();



      var newMarker;

      switch(shape) {
        case "Marker":
          // https://leafletjs.com/reference-1.4.0.html#icon

          var myIcon = L.icon({
                iconUrl: (iconDir+teams[teamsIndex].icon),
                iconSize: [32, 37],
                iconAnchor: [20, 20],
                popupAnchor: [-5, -5],
                //shadowUrl: 'my-icon-shadow.png',
                //shadowSize: [68, 95],
                //shadowAnchor: [22, 94]
            });

          newMarker = L.marker([llat, llong], {icon: myIcon}
              // , title: teamLocations[i].CallSign + "<br>" + teamLocations[i].Date
              )
              .bindPopup(
                teamLocations[i].CallSign + " - " + teamLocations[i].Licensee + "<br>"
                + teamLocations[i].Date.replace("T", " ") + "<br>"
                + teamLocations[i].Notes );
          //dbug("Created Marker. icon=" + iconDir + teams[teamsIndex].icon + "; " );
          break;

        case "Circle":
        default:
          newMarker = L.circle([llat, llong], CIRCLE_SIZE, {
              color: color,
              fillColor: fillColor,
              fillOpacity: fillOpacity,
            }, title="").bindPopup(
                teamLocations[i].CallSign + " - " + teamLocations[i].Licensee + "<br>"
                + teamLocations[i].Date.replace("T", " ") + "<br>"
                + teamLocations[i].Notes
              );


        // Note: You may run into issues with the popups closing when you mouse onto the popup itself,
        // so you might need to adjust the popup anchor in (see popup settings) to show your popups a
        // bit farther away from marker itself so it doesn't disappear too easily.
        // http://gis.stackexchange.com/questions/31951/ddg#95795

        /*
          // sample code for having all popups open if users hovers over any point...
          var markers = getAllMarkers(); // up to you to implement, say it returns an Array<L.Marker>
          for (var i = 0; i < markers.length; i++) {
              var currentMarker = markers[i];
              currentMarker.on('mouseover', currentMarker.openPopup.bind(currentMarker));
          }
        */
        //dbug("Created Circle!");
        //Done with this row, get next
        break;
      }

      newMarker.on('mouseover', function (e) { this.openPopup();  });
      newMarker.on('mouseout' , function (e) { this.closePopup(); });

      // marker.bindPopup(View(event));
      // add marker
      markers.addLayer(newMarker);
    } // Done adding this row to the map

    // https://stackoverflow.com/questions/14106687/how-do-i-change-the-default-cursor-in-leaflet-maps
    bigMap.on('click', onMapClick);
    $('.leaflet-container').css('cursor','crosshair'); // reset cursor with ''!

    // Display coordinates if map is clicked
    var popup = L.popup();

    function onMapClick(e) {
      popup
        .setLatLng(e.latlng)
        .setContent(e.latlng.toString())
        .openOn(bigMap);
    }

    // add the group to the map
    // for more see https://github.com/Leaflet/Leaflet.markercluster
    //markerCluster needs maxzoom
    bigMap.addLayer(markers);

    //markers.on('clusterclick', function (a) {
	  //// markers.zoomToBounds({padding: [20, 20]});
    //});

    /*markers.on('clusterclick', function (a) {
			a.layer.zoomToBounds();
    });
    */

    var bounds = new L.LatLngBounds(arrayOfLatLngs);
    bigMap.fitBounds(bounds);
    bigMap.invalidateSize();

  // TODO: Zoom in to closest view that shows all points:
  // https://leafletjs.com/reference-1.4.0.html#map-methods-for-modifying-map-state
  // dbug("Set map bounds to: ["+minLat+","+minLng+"], ["+maxLat+","+maxLng+"]");
  // bigMap.fitBounds(L.latLngBounds([minLat,minLng], [maxLat,maxLng]));
  // bigMap.fitBounds([minLat,minLng], [maxLat,maxLng]);

  // bigMap.updateSize();
  //bigMap.invalidateSize(true);
  // GridLayer.redraw()
  // bigMap._onResize();
    }
}

  function clearLeafletMarkers(){
    // https://stackoverflow.com/questions/28636723/how-to-clear-leaflet-map-of-all-markers-and-layers-before-adding-new-ones
    // https://github.com/Leaflet/Leaflet.markercluster#using-the-plugin
    mapLeafletMarkers = [];
    for (var i = 0; i < smallMapMarkers.length; i++){
        smallMap.removeLayer(smallMapMarkers[i]);
      }

      //smallMap.getPane('markerPane').clearLayers; //clearLayers;
      smallMap.clearLayers;
  }

  function clearGoogMarkers() {
    mapGoogMarkers = [];
  }

  function clearEsriMarkers() {
    mapEsriMarkers = [];
  }

  function displayLeafletMarkers(){

  //Clear previous markers...


      // https://leafletjs.com/reference-1.5.0.html#marker
      //var marker = L.marker([lat, long]).addTo(smallMap);
      // Keep link to marker, for later alteration/deletion
      //smallMapMarkers.push(marker);


    mapLeafletMarkers = [];
  }

  function displayGoogMarkers() {
    mapGoogMarkers = [];
  }

  function displayEsriMarkers() {
    mapEsriMarkers = [];
  }

  function displaySmallMap(lat,long) {
    dbug("Display marker on small map at: " + lat + ", " + long);

    // Clear previous markers...
    for (var i = 0; i < smallMapMarkers.length; i++){
      smallMap.removeLayer(smallMapMarkers[i]);
    }

    //smallMap.getPane('markerPane').clearLayers; //clearLayers;
    smallMap.clearLayers;

    // https://leafletjs.com/reference-1.5.0.html#marker
    var marker = L.marker([lat, long]).addTo(smallMap);
    // Keep link to marker, for later alteration/deletion
    smallMapMarkers.push(marker);

    var circle = L.circle([lat,long], {
      color: 'red',
      fillColor: 'yellow',
      fillOpacity: 0.3,
      radius: 10
    }).addTo(smallMap);
    smallMapMarkers.push(circle);

    smallMap.setView([lat,long], 12); // Alter this zoom scale from 12 to 18 for super close up
    //smallMap.panTo([lat,long]);

    // var bounds = new L.LatLngBounds(arrayOfLatLngs);
    //smallMap.fitBounds(bounds);
    //smallMap.invalidateSize();
  }

  function displayMyMap() {
      var mymap = L.map('mapid').setView([51.505, -0.09], 13);
    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=YOUR_API_KEY', {
      maxZoom: 18,
      attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
        '<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
        'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
      id: 'mapbox.streets'
    }).addTo(mymap);
    L.marker([51.5, -0.09]).addTo(mymap)
      .bindPopup("<b>Hello world!</b><br />I am a popup.").openPopup();
    L.circle([51.508, -0.11], 500, {
      color: 'red',
      fillColor: '#f03',
      fillOpacity: 0.5
    }).addTo(mymap).bindPopup("I am a circle.");
    /*L.polygon([
      [51.509, -0.08],
      [51.503, -0.06],
      [51.51, -0.047]
    ]).addTo(mymap).bindPopup("I am a polygon.");
    */
    /*var popup = L.popup();

    function onMapClick(e) {
      popup
        .setLatLng(e.latlng)
        .setContent("You clicked the map at " + e.latlng.toString())
        .openOn(mymap);
    }

    mymap.on('click', onMapClick);
    */
  }

  function displayGoogMap(filters) {
    dbug("displayGoogMap");

    // Create an array of alphabetical characters used to label the markers.
    var googLabels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';

    var testLocations = [
      {lat: 47.4472, lng: -122.4627},
      {lat: 47.45, lng: -122.46},
      {lat: 47.44, lng: -122.47},
      {lat: 47.442, lng: -122.464},
      {lat: 47.4482, lng: -122.465},
      {lat: 47.4492, lng: -122.463}
    ];

    // Add some markers to the map.
    // Note: The code uses the JavaScript Array.prototype.map() method to
    // create an array of markers based on a given "testLocations" array.
    // The map() method here has nothing to do with the Google Maps API.

    var googMarkers = testLocations.map(function(location, i) {
      return new google.maps.Marker({
        position: location,
        label: googLabels[i % googLabels.length]
      });

    });

    // Add a marker clusterer to manage the markers.
    // https://developers.google.com/maps/documentation/javascript/markers
    // images path prefixes an M before the 1.png, resulting in images/m1.png
    var googMarkerCluster = new MarkerClusterer(googMap, googMarkers,
        {imagePath: 'images/m'});
  }

  function junk(){
    // TODO: https://developers.google.com/maps/documentation/javascript/heatmaplayer
    // clear any previous markers:
    var arrayOfLatLngs = [];

    var minLat=Infinity, minLng=Infinity, maxLat=-Infinity, maxLng=-Infinity;

    for (var i = 0; i < teamLocations.length; i++) {
      //dbug("Displaying marker "+i);
      var llat = teamLocations[i].Latitude;
      var llong = teamLocations[i].Longitude;

      if (filters!=null) {
        // Process Filters...
        //dbug("Filters Received");

        //Filter Team?
        //dbug("Team["+i+"]="+teamLocations[i].Team);
        if (filters.Team.length!=0 && (teamLocations[i].Team!=filters.Team)) {
          dbug("#### Filtered out Team: ["+i+"]="+teamLocations[i].Team);
          continue;
        }

        // Filter CallSign?
        //dbug("Call["+i+"]="+teamLocations[i].CallSign);
        if (filters.CallSign.length!=0 && (teamLocations[i].CallSign!=filters.CallSign)) {
          dbug("#### Filtered out CallSign: ["+i+"]="+teamLocations[i].CallSign);
          continue;
        }

        // Filter based on time?
        //dbug("Time["+i+"]  =  "+teamLocations[i].Date);
        //dbug("BaseTime="+filters.BaseTime+"; minutes="+filters.Minutes);
        //dbug("Minutes="+Date.parse(teamLocations[i].Date)/60000.0);

        //dbug("Time Diff="+Math.abs(Date.parse(teamLocations[i].Date) - Date.parse(filters.BaseTime))/60000.0+"<br><br>");

        // Milliseconds/minute = 60+1000
        if (filters.Minutes!=0 && filters.BaseTime.length!=0 &&
        (Math.abs(Date.parse(teamLocations[i].Date) - Date.parse(filters.BaseTime)) >= filters.Minutes*60000.0) ) {
          dbug("#### Filtered out Time: ["+i+"]="+teamLocations[i].CallSign);
          continue;
        }
      }

      minLat=Math.min(minLat,llat);
      minLng=Math.min(minLng,llong);
      maxLat=Math.max(maxLat,llat);
      maxLng=Math.max(maxLng,llong);

      // setup the bounds
      arrayOfLatLngs.push([llat,llong]);

      // dbug("Coords='" + llat + ", " + llong + "'");
      // dbug("Map bounds reset to: ["+minLat+","+minLng+"], ["+maxLat+","+maxLng+"]");

      var color = defTeamColor;
      var shape = defTeamShape;
      var fillColor = defTeamFillColor;
      var fillOpacity = defTeamOpacity;

      var numTeams = teams.length;
      var teamsIndex;

      var team = teamLocations[i].Team;
      // dbug("teamLocations["+i+"]="+team);

      for (teamsIndex=0; teamsIndex<numTeams; teamsIndex++) {
        // dbug("filterLocations: teams["+teamsIndex+"].value='"+teams[teamsIndex].value+"' == team='"+team+"'");
        if (teams[teamsIndex].value == team) {
          color = teams[teamsIndex].color; //TODO: if !empty // BUGBUG: Likely assumes every team has values in the teams array. Unlikely, hah!
          fillColor = teams[teamsIndex].fillColor;
          //fillOpacity = teams[teamIndex].fillOpacity;
          shape = teams[teamsIndex].shape;
          // dbug("filterLocations: Teams index="+teamsIndex + "; color:"+color+"; fillColor:"+fillColor+"; fillOpacity:"+fillOpacity+"; shape:"+shape);
          break;
        }
      }
      var newMarker;

      switch(shape) {
        case "Marker":
          // https://leafletjs.com/reference-1.4.0.html#icon

          var myIcon = L.icon({
                iconUrl: (iconDir+teams[teamsIndex].icon),
                iconSize: [32, 37],
                iconAnchor: [20, 20],
                popupAnchor: [-5, -5],
                //shadowUrl: 'my-icon-shadow.png',
                //shadowSize: [68, 95],
                //shadowAnchor: [22, 94]
            });

          newMarker = L.marker([llat, llong], {icon: myIcon}
              // , title: teamLocations[i].CallSign + "<br>" + teamLocations[i].Date
              )
              .bindPopup(
                teamLocations[i].CallSign + " - " + teamLocations[i].Licensee + "<br>"
                + teamLocations[i].Date + "<br>"
                + teamLocations[i].Notes );
          //dbug("Created Marker. icon=" + iconDir + teams[teamsIndex].icon + "; " );
          break;

        case "Circle":
        default:
          newMarker = L.circle([llat, llong], CIRCLE_SIZE, {
              color: color,
              fillColor: fillColor,
              fillOpacity: fillOpacity,
            }, title="").bindPopup(
                teamLocations[i].CallSign + " - " + teamLocations[i].Licensee + "<br>"
                + teamLocations[i].Date + "<br>"
                + teamLocations[i].Notes
              );


        // Note: You may run into issues with the popups closing when you mouse onto the popup itself,
        // so you might need to adjust the popup anchor in (see popup settings) to show your popups a
        // bit farther away from marker itself so it doesn't disappear too easily.
        // http://gis.stackexchange.com/questions/31951/ddg#95795

        /*
          // sample code for having all popups open if users hovers over any point...
          var markers = getAllMarkers(); // up to you to implement, say it returns an Array<L.Marker>
          for (var i = 0; i < markers.length; i++) {
              var currentMarker = markers[i];
              currentMarker.on('mouseover', currentMarker.openPopup.bind(currentMarker));
          }
        */
        //dbug("Created Circle!");
        //Done with this row, get next
        break;
      }

      newMarker.on('mouseover', function (e) { this.openPopup();  });
      newMarker.on('mouseout' , function (e) { this.closePopup(); });

      // marker.bindPopup(View(event));
      // add marker
      markers.addLayer(newMarker);
    } // Done adding this row to the map

    // https://stackoverflow.com/questions/14106687/how-do-i-change-the-default-cursor-in-leaflet-maps
    bigMap.on('click', onMapClick);
    $('.leaflet-container').css('cursor','crosshair'); // reset cursor with ''!

    // Display coordinates if map is clicked
    var popup = L.popup();

    function onMapClick(e) {
      popup
        .setLatLng(e.latlng)
        .setContent(e.latlng.toString())
        .openOn(bigMap);
    }

    // add the group to the map
    // for more see https://github.com/Leaflet/Leaflet.markercluster
    bigMap.addLayer(markers);

    //markers.on('clusterclick', function (a) {
	  //// markers.zoomToBounds({padding: [20, 20]});
    //});

    /*markers.on('clusterclick', function (a) {
			a.layer.zoomToBounds();
    });
    */

    var bounds = new L.LatLngBounds(arrayOfLatLngs);
    bigMap.fitBounds(bounds);
    bigMap.invalidateSize();

  // TODO: Zoom in to closest view that shows all points:
  // https://leafletjs.com/reference-1.4.0.html#map-methods-for-modifying-map-state
  // dbug("Set map bounds to: ["+minLat+","+minLng+"], ["+maxLat+","+maxLng+"]");
  // bigMap.fitBounds(L.latLngBounds([minLat,minLng], [maxLat,maxLng]));
  // bigMap.fitBounds([minLat,minLng], [maxLat,maxLng]);

  // bigMap.updateSize();
  //bigMap.invalidateSize(true);
  // GridLayer.redraw()
  // bigMap._onResize();
}

  function chkAddresses() {
    var addr = document.getElementById("addresses");
    dbug("Got address: "+addr);
    if (addr == null)
      return;
    var addrText = addr.value;
    dbug("Got address: "+addrText);
    if (addrText.length!=0)
      if (addrText.includes("+")) {
        chkPCodes();
      } else {
       Twords = addrText.split(".");
       if (Twords.length == 3) {
          chk3Words();
       } else {
         chkStreetAddress();
       }
      }
  }

  function chkStreetAddress() {
    dbug("Got street address to check");;
  }

  function chkPCodes() {
    // #region +Code doc
   // https://plus.codes/developers
   // https://github.com/google/open-location-code/wiki
   /*
      Plus Codes refer to variable-sized rectangles - NOT a point! (The regions do have center points however.)

      Only 20 characters are valid: "23456789CFGHJMPQRVWX"

      Global RegEx: /(^|\s)([23456789C][23456789CFGHJMPQRV][23456789CFGHJMPQRVWX]{6}\+[23456789CFGHJMPQRVWX]{2,3})(\s|$)/?i
      This extracts (in capturing group 2) a global code at the start or end of a string, or enclosed with spaces, but not in the middle of a string.

      Local RegEx: /(^|\s)([23456789CFGHJMPQRVWX]{4,6}\+[23456789CFGHJMPQRVWX]{2,3})(\s|$)/?i

      If the query matches, and the user has not entered any other text, then another location must be used to recover the original code. If you are displaying a map to the user, then use the current map center, pass it to the recoverNearest() method to get a global code, and then decode it as above.

      If there is no map, you can use the device location. If you have no map and cannot determine the device location, a local code is not sufficient and you should display a message back to the user asking them to provide a town or city name or the full global code.

      * * *

      Open Location Codes are encodings of WGS84 latitude and longitude coordinates in degrees. Decoding a code returns an area, not a point. The area of a code depends on the length (longer codes are more precise with smaller areas). A two-digit code has height and width[height_width] of 20 degrees, and with each pair of digits added to the code, both height and width are divided by 20.

      The first digit of the code identifies the row (latitude), and the second digit the column (longitude). Subsequent steps divide that area into a 20 x 20 grid, and use one digit to identify the row and another to identify the column.

      If the query matches, and the user has not entered any other text, then another location must be used to recover the original code. If you are displaying a map to the user, then use the current map center, pass it to the recoverNearest() method to get a global code, and then decode it as above.

      globalPCode = encode(latDD,longDD);  // Need locality/focus (within half a degree latitude and half a degree longitude, or ideally 1/4 degree, 25km at equator) pt to get local +code.

      The shorten() method in the OLC library may remove 2, 4, 6 or even 8 characters, depending on how close the reference location is. Although all of these are valid, we recommend only removing the first 4 characters, so that plus codes have a consistent appearance.
   */
   // #endregion

    //
    var pCode = document.getElementById("addresses").value;
    dbug("chkPCodes got '"+pCode+"'");
    if (pCode.length!=0) {
      if (isValid(pCode)) {
        if (pCode.isShort) {
          pCode = recoverNearest(pCode, DEF_LAT, DEF_LONG); //OpenLocationCode.recoverNearest
        }

        // Following needs a full (Global) code
        var coord = decode(pCode); //OpenLocationCode.decode
        dbug("chkPCodes got "+pCode+"; returned: lat=" + coord.latitudeCenter + ', long=' + coord.longitudeCenter);

        updateCoords(coord.latitudeCenter, coord.longitudeCenter);
      } else {
        document.getElementById("addressLabel").innerHTML = " is <strong style='color: darkorange;'>Invalid </strong> Try: ";
        document.getElementById("pCodeGlobal").innerHTML = DEF_PCODE;
      }
    }
  }

  function chk3Words() {
    /*var settings = {
      "async": true,
      "crossDomain": true,
      "url": "https://api.what3words.com/v3/autosuggest?key=0M5I8UPF&input=index.home.r&n-results=5&focus=51.521251%2C-0.203586&clip-to-country=BE%2CGB",
      "method": "GET",
      "headers": {}
    }

    $.ajax(settings).done(function (response) {
      dbug("ddd=" +response);
    });
    */

    // No 3 word results outside these values allowed!!
    // south_lat <= north_lat & west_lng <= east_lng
    var south_lat = 46.0;
    var north_lat = 49.0;
    var west_lng = -124.0;
    var east_lng = -120.0;
    var errMsg = "";

    TWords = document.getElementById("addresses").value;
    dbug(TWords);
    if (TWords.length) {
      // soemthing entered...
      dbug("3Words='" + TWords + "'");
        what3words.api.autosuggest(TWords, {
          nFocusResults: 1,
          //clipTo####: ["US"],
          cliptoboundingbox: {south_lat, west_lng, north_lat, east_lng}, // Clip prevents ANY values outside region
          focus: {lat: DEF_LAT, lng: DEF_LONG}, // Focus prioritizes words closer to this point
          nResults: 1
        })
        .then(function (response) {
          verifiedWords = response.suggestions[0].words;
          dbug("Verified Words='" + verifiedWords + "'");
          if (TWords != verifiedWords) {
            document.getElementById("addressLabel").textContent = " Verified as: " + verifiedWords;
          } else {
            document.getElementById("addressLabel").textContent = " Verified.";
          }
          what3words.api.convertToCoordinates(verifiedWords).then(function (response) {
            //async call HAS returned!
            updateCoords(response.coordinates.lat, response.coordinates.lng);
            // NOTE: Not saving nearest place: too vague to be of value
            document.getElementById("addressLabel").textContent += "; Near: " + response.nearestPlace;
          });
        })
        .catch(function (error) {
          errMsg = "[code]=" + error.code + "; [message]=" + error.message + ".";
          dbug("Unable to verify 3 words entered: "+errMsg);
          document.getElementById("addressLabel").textContent = "*** Not able to verify 3 words! ***";
        });
    }
    // async call not returned yet
  }

  function  updateCoords(latDD, lngDD) {
    dbug("New Coordinates: lat:" + latDD + "; lng:" + lngDD);

    document.getElementById("latitudeDD").value = latDD;
    document.getElementById("longitudeDD").value = lngDD;

    latDMS = DDToDMS(latDD, false);
    document.getElementById("latitudeQ").value = latDMS.dir;
    document.getElementById("latitudeD").value = latDMS.deg;
    document.getElementById("latitudeM").value = latDMS.min;
    document.getElementById("latitudeS").value = latDMS.sec;

    lngDMS = DDToDMS(lngDD, true);
    document.getElementById("longitudeQ").value = lngDMS.dir;
    document.getElementById("longitudeD").value = lngDMS.deg;
    document.getElementById("longitudeM").value = lngDMS.min;
    document.getElementById("longitudeS").value = lngDMS.sec;

    var pCode = encode(latDD, lngDD, 11); // OpenLocationCode.encode using default accuracy returns an INVALID +Code!!!
    dbug("updateCoords: Encode returned PlusCode: " + pCode);
    var fullCode;
    if (pCode.length!=0) {

      if (isValid(pCode)) {
        if (pCode.isShort) {
          // Recover the full code from a short code:
          fullCode = recoverNearest(pCode, DEF_LAT, DEF_LONG); //OpenLocationCode.recoverNearest
        } else {
          fullCode = pCode;
          dbug("Shorten +Codes, Global:" + fullCode + ", Lat:" + DEF_LAT + "; Long:"+ DEF_LONG);
          // Attempt to trim the first characters from a code; may return same value...
          pCode = shorten(fullCode, DEF_LAT, DEF_LONG); //OpenLocationCode.shorten
        }
        dbug("New PlusCodes: " + pCode + "; Global: " + fullCode);
        //document.getElementById("addresses").value = pCode;
        //document.getElementById("addressLabel").innerHTML = defPCodeLabel;
        document.getElementById("pCodeGlobal").innerHTML = " &nbsp;&nbsp; +Code: " + fullCode;
      } else {
        dbug("Invalid +PlusCode: " + pCode);
        document.getElementById("pCodeGlobal").innerHTML = " &nbsp;&nbsp; Unable to get +Code"
        //document.getElementById("addressLabel").innerHTML = "  is <strong style='color: darkorange;'>Invalid </strong> Try: ";
      }
    }

    //ToDO: Update 3 words too!
   if (initialized) displaySmallMap(latDD, lngDD);
 }

  function displayParticipantsGrid() {
    $("#jsParticipantsGrid").jsGrid({
      width: "100%",
      height: "600px",
      filtering: true,
      inserting: true,
      editing: true,
      sorting: true,
      paging: true,
      data: callSigns,
      fields: [
        { name: "value", type: "text", width: 13, validate: "required" },
        { name: "label", type: "text", width: 30 },
        { name: "licensee", type: "text",  width: 15 },
        { name: "licenseKey", type: "text", width: 15 },
        { name: "phone", type: "text", width: 15 },
        { name: "team", type: "text", width: 15 },
        { name: "icon", type: "text", width: 15 },
        { name: "notable", type: "text", title: "Notes", width: 30 },
        { type: "control" }
      ]
    });
  }

  function displayTeamGrid() {
    $("#teamGrid").jsGrid({
      width: "95%",
      height: "400px",
      filtering: true,
      inserting: true,
      editing: true,
      sorting: true,
      paging: true,
      data: teams,
      fields: [
        { name: "value", title: "Team", type: "text", width: 13, validate: "required" },
        { name: "shape", type: "text", width: 15 },
        { name: "icon", type: "text", width: 20 },
        { name: "color", type: "text", width: 15 },
        { name: "fillColor", type: "text", width: 15 },
        { name: "note", type: "text", title: "Notes", width: 40 },
        { type: "control" }
      ]
    });
  }

 if (false) {
 // https://stackoverflow.com/questions/14106687/how-do-i-change-the-default-cursor-in-leaflet-maps
 bigMap.on('click', onMapClick);
  $('.leaflet-container').css('cursor','crosshair'); // reset cursor with ''!

    // Display coordinates if map is clicked
    var popup = L.popup();

    function onMapClick(e) {
      popup
        .setLatLng(e.latlng)
        .setContent(e.latlng.toString())
        .openOn(bigMap);
    }
}

	// localStorage/sessionStorage is stored per browser
  //#region
  // https://stackoverflow.com/questions/23652437/how-to-retrieve-the-all-local-storage-data
  function localStorageCatalog() {
    local = localStorage;
    for (var key in local) {
      //console.log(key);
      dbug("Local Storage key="+key+"; Type="+local[key].type);
      //Do something with key, access value by local[key]
    }
  }

  function localStorageSupported(){
    return (typeof(Storage) !== "undefined");
  }

  function saveToLocalStorage (data) {
    var dataJSON = JSON.stringify(data);
    localStorage.setItem("LOCAL_STORAGE_NAME", dataJSON);
  }

  function loadFromLocalStorage () {
    var locsText = localStorage.getItem("LOCAL_STORAGE_NAME");
    return JSON.parse(locsText);
  }

  function deleteLocalStorage () {
    localStorage.removeItem("LOCAL_STORAGE_NAME");
  }
  //#endregion

 function getCheckedRadioValue(radioGroupName) {
   var rads = document.getElementsByName(radioGroupName);
   var i;
   for (i=0; i < rads.length; i++)
    if (rads[i].checked)
      return rads[i].value;
   return null; // or undefined, or your preferred default for none checked
  }

 // Following from 98070 AND 98013 zip codes, MUST be sorted by call sign!
  // https://wireless2.fcc.gov/UlsApp/UlsSearch/searchAmateur.jsp
  // ToDo, remove/empty Team/Icon
  var callSigns =
    [
      {value: "AC7TB",  label: "AC7TB",  licensee: "Sullivan, Timothy X", licenseKey: "2408850", phone: "206463-", team: "T1", icon: "ACS_32x32.png"},
      {value: "AE7MW",  label: "AE7MW",  licensee: "Smueles, Robert E", licenseKey: "3284428", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "AE7RW",  label: "AE7RW",  licensee: "York, Randy K", licenseKey: "3820636", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "AE7SD",  label: "AE7SD",  licensee: "Danielson, Sharon J", licenseKey: "3298347", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "AE7TH",  label: "AE7TH",  licensee: "Hardy, Timothy R", licenseKey: "3307916", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "AG7TJ",  label: "AG7TJ",  licensee: "Lindgren, Katrina J", licenseKey: "4138277", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "AK7C",   label: "AK7C",   licensee: "Mcdonald, Michael E", licenseKey: "228147", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "K1SAB",  label: "K1SAB",  licensee: "Brown, Steven A", licenseKey: "3336090", phone: "206463-", team: "T2", icon: "ACS_32x32.png"},
      {value: "K3QNQ",  label: "K3QNQ",  licensee: "Treese, F Mitch A", licenseKey: "2399834", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "K6AJV",  label: "K6AJV",  licensee: "Valencia, Andrew J", licenseKey: "2808307", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "K7AJT",  label: "K7AJT",  licensee: "Tharp, Adam J", licenseKey: "2635417", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "K7DGL",  label: "K7DGL",  licensee: "Luechtefeld, Daniel", licenseKey: "3051035", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "K7KMS",  label: "K7KMS",  licensee: "Paull, Steven", licenseKey: "3037228", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "K7NHV",  label: "K7NHV",  licensee: "Francisco, Albert K", licenseKey: "261174", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "K7VMI",  label: "K7VMI",  licensee: "De Steiguer, Allen L", licenseKey: "2687882", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KA7THJ", label: "KA7THJ", licensee: "Hanson, Jay R", licenseKey: "313286", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KB0LJC", label: "KB0LJC", licensee: "Hirsch, Justin D", licenseKey: "329966", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KB7LEV", label: "KB7LEV", licensee: "Lysen, Kurt A", licenseKey: "384291", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KB7MTM", label: "KB7MTM", licensee: "Meyer, Michael T", licenseKey: "3690776", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KB7PII", label: "KB7PII", licensee: "Lindgren, Clifford W", licenseKey: "4098112", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KB7REC", label: "KB7REC", licensee: "Carlson, Robert E", licenseKey: "3989892", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KC7AUT", label: "KC7AUT", licensee: "Nishiyori, Kenneth W", licenseKey: "464637", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KC7JMQ", label: "KC7JMQ", licensee: "Hardy, Denise L", licenseKey: "470126", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KD5JYQ", label: "KD5JYQ", licensee: "Lund, David W", licenseKey: "1080395", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KD7MUB", label: "KD7MUB", licensee: "Clemens, Barry M", licenseKey: "1961124", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KD7PAZ", label: "KD7PAZ", licensee: "Miller, Lee A", licenseKey: "2365702", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KD7PBB", label: "KD7PBB", licensee: "Miller, Joan A", licenseKey: "2365704", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KD7PBC", label: "KD7PBC", licensee: "Kremer, Richard H", licenseKey: "2365705", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KD7PFA", label: "KD7PFA", licensee: "Frye, Leslie G", licenseKey: "2369173", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KD7PMV", label: "KD7PMV", licensee: "Lickfelt, Kevin R", licenseKey: "2373701", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KD7SMI", label: "KD7SMI", licensee: "Griswold, James E", licenseKey: "2442377", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KD7VSA", label: "KD7VSA", licensee: "Givotovsky, Alan", licenseKey: "2509624", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KD7ZVK", label: "KD7ZVK", licensee: "Rollo, Jack W", licenseKey: "2599095", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE6OOQ", label: "KE6OOQ", licensee: "Rockwell, Neil I", licenseKey: "557935", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE6WXA", label: "KE6WXA", licensee: "Garrison, Elizabeth B", licenseKey: "563049", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE7AKA", label: "KE7AKA", licensee: "Coldeen, Chris A", licenseKey: "2608323", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE7AKB", label: "KE7AKB", licensee: "Turner, Ed", licenseKey: "2608325", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE7AKC", label: "KE7AKC", licensee: "Wolczko Dvm, Donald P", licenseKey: "2608327", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE7DEO", label: "KE7DEO", licensee: "Harshman, Clifford E", licenseKey: "2700670", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE7HBX", label: "KE7HBX", licensee: "Karusaitis, Rhoda B", licenseKey: "2795716", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE7HBY", label: "KE7HBY", licensee: "Cooper, David F", licenseKey: "2795740", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE7HCA", label: "KE7HCA", licensee: "Stanton, John S", licenseKey: "2795742", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE7HCB", label: "KE7HCB", licensee: "Bentley, Michael B", licenseKey: "2795743", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE7HFG", label: "KE7HFG", licensee: "Fitzpatrick, Walton R", licenseKey: "2797573", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE7HFH", label: "KE7HFH", licensee: "Kaufer, Tom M", licenseKey: "2797574", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE7KDQ", label: "KE7KDQ", licensee: "Cornelison, John", licenseKey: "2868514", phone: "206463-", team: "T4", icon: "Other_32x32.png"},
      {value: "KE7KDT", label: "KE7KDT", licensee: "Milligan, Douglas S", licenseKey: "2868518", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE7KDU", label: "KE7KDU", licensee: "Milligan, Janet L", licenseKey: "2868519", phone: "206463-", team: "", icon: "CERT_32x32.png"},
      {value: "KE7KDV", label: "KE7KDV", licensee: "Danielson, Richard A", licenseKey: "2868520", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE7MTN", label: "KE7MTN", licensee: "Schueler, Dan F", licenseKey: "2903964", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE7OTE", label: "KE7OTE", licensee: "Way, Steve C", licenseKey: "2944690", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE7VHM", label: "KE7VHM", licensee: "Stoner Jr, Ronald K", licenseKey: "3034947", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KE7VNA", label: "KE7VNA", licensee: "Nelson, William C", licenseKey: "3038276", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KF7CBK", label: "KF7CBK", licensee: "Wojcik, Peter A", licenseKey: "3097676", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KF7FDK", label: "KF7FDK", licensee: "Joffray, Flynn T", licenseKey: "3139612", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KF7GPM", label: "KF7GPM", licensee: "Van Egmond, Raynier A", licenseKey: "3153804", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KF7JCT", label: "KF7JCT", licensee: "Underwood, Robert S", licenseKey: "3186958", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KF7NCS", label: "KF7NCS", licensee: "Staczek, Jason L", licenseKey: "3252847", phone: "206463-", team: "", icon: "VIFR_32x32.png"},
      {value: "KF7QCE", label: "KF7QCE", licensee: "Cochrane, Michael L", licenseKey: "3292661", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KF7QCF", label: "KF7QCF", licensee: "Durrett, Erin A", licenseKey: "3292662", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KF7QCG", label: "KF7QCG", licensee: "Putnam, Keith O", licenseKey: "3292663", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KF7QCH", label: "KF7QCH", licensee: "Rogers, Catherine A", licenseKey: "3292664", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KF7QCI", label: "KF7QCI", licensee: "Sudduth, Margaret M", licenseKey: "3292666", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KF7QCJ", label: "KF7QCJ", licensee: "Blichfeldt Fox, Ulla", licenseKey: "3292667", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KF7QCK", label: "KF7QCK", licensee: "Stratton, Rex B", licenseKey: "3292668", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KF7VDA", label: "KF7VDA", licensee: "Galus, Georgia A", licenseKey: "3366650", phone: "206463-", team: "", icon: "MRC_32x32.png"},
      {value: "KF7WOQ", label: "KF7WOQ", licensee: "Hyde Iv, James F", licenseKey: "3390277", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7BSE", label: "KG7BSE", licensee: "Blackstone, Robert A", licenseKey: "3453248", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7BSG", label: "KG7BSG", licensee: "Cochrane, Catherine S", licenseKey: "3453250", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7BSH", label: "KG7BSH", licensee: "Edwards, Shelby T", licenseKey: "3453251", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7BSI", label: "KG7BSI", licensee: "Moore, Wanda L", licenseKey: "3453252", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7BSK", label: "KG7BSK", licensee: "King, Lori J", licenseKey: "3453254", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7BSL", label: "KG7BSL", licensee: "Lyell, William E", licenseKey: "3453255", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7BSM", label: "KG7BSM", licensee: "Symonds, Penni J", licenseKey: "3453256", phone: "206463-", team: "", icon: "CERT_32x32.png"},
      {value: "KG7BSN", label: "KG7BSN", licensee: "Blackstone, Randee C", licenseKey: "3453257", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7BSP", label: "KG7BSP", licensee: "Nelson, Kimberley A", licenseKey: "3453259", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7BSQ", label: "KG7BSQ", licensee: "Lyell, Jan R", licenseKey: "3453260", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7BSR", label: "KG7BSR", licensee: "Sussman, Stephen M", licenseKey: "3453261", phone: "206463-", team: "", icon: "CERT_32x32.png"},
      {value: "KG7CFG", label: "KG7CFG", licensee: "O'brien, Truman E", licenseKey: "3459739", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7CFH", label: "KG7CFH", licensee: "Stone, Nancy E", licenseKey: "3459740", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7CFI", label: "KG7CFI", licensee: "Nelson, Mary E", licenseKey: "3459741", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7CFJ", label: "KG7CFJ", licensee: "O'brien, Mary A", licenseKey: "3459742", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7CFK", label: "KG7CFK", licensee: "Hayes, Ira A", licenseKey: "3459743", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7CM",  label: "KG7CM",  licensee: "Galus, John F", licenseKey: "603138", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7JIQ", label: "KG7JIQ", licensee: "Beles, Lynette B", licenseKey: "3568624", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7JIR", label: "KG7JIR", licensee: "Danielsen, Jacob M", licenseKey: "3568625", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7JIS", label: "KG7JIS", licensee: "Hauser, James W", licenseKey: "3568626", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7JIT", label: "KG7JIT", licensee: "Goebel, David A", licenseKey: "3568627", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7JIU", label: "KG7JIU", licensee: "Cain, Lidunn O", licenseKey: "3568628", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7JIW", label: "KG7JIW", licensee: "Tuttle, Holly K", licenseKey: "3568630", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7JIX", label: "KG7JIX", licensee: "De Monterey Richoux, Victoria", licenseKey: "3568631", phone: "206463-", team: "", icon: "Other_32x32.png"},
      {value: "KG7JIY", label: "KG7JIY", licensee: "Freiling, Beth Anne", licenseKey: "3568632", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7JJA", label: "KG7JJA", licensee: "Jones, Aaron", licenseKey: "3568634", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7RTH", label: "KG7RTH", licensee: "Hennessey, Shannon M", licenseKey: "3678024", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7TAN", label: "KG7TAN", licensee: "James, Lawrence C", licenseKey: "3694602", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7UAY", label: "KG7UAY", licensee: "Allen, Thomas M", licenseKey: "3705768", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7UAZ", label: "KG7UAZ", licensee: "Bossom, Eden A", licenseKey: "3705769", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7UBA", label: "KG7UBA", licensee: "Sussman, Carole E", licenseKey: "3705770", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7UBB", label: "KG7UBB", licensee: "Wilber, Maurice E", licenseKey: "3705771", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7UBC", label: "KG7UBC", licensee: "Los, Shango", licenseKey: "3705772", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7UBD", label: "KG7UBD", licensee: "Clark, Brad S", licenseKey: "3705773", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7UBF", label: "KG7UBF", licensee: "Fairchild, Josephine B", licenseKey: "3705775", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7UBH", label: "KG7UBH", licensee: "Maurer, Michele L", licenseKey: "3705777", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7UBI", label: "KG7UBI", licensee: "Kutscher, Susan H", licenseKey: "3705778", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7UBJ", label: "KG7UBJ", licensee: "Davidson, Edward D", licenseKey: "3705779", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KG7UBK", label: "KG7UBK", licensee: "Milovsoroff, Peter", licenseKey: "3705780", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7AAY", label: "KI7AAY", licensee: "Rentfro, Samuel J", licenseKey: "3765839", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7EOA", label: "KI7EOA", licensee: "Proffit, Spencer L", licenseKey: "3814596", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7EOB", label: "KI7EOB", licensee: "Hubbard, Suzanne F", licenseKey: "3814597", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7EOC", label: "KI7EOC", licensee: "Brown, Paul S", licenseKey: "3814598", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7EOD", label: "KI7EOD", licensee: "Guerena, Ed R", licenseKey: "3814599", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7EOE", label: "KI7EOE", licensee: "Cressman, Miriam S", licenseKey: "3814600", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7EOF", label: "KI7EOF", licensee: "Douvier, Ann B", licenseKey: "3814601", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7EOG", label: "KI7EOG", licensee: "Williams Jr, Morris C", licenseKey: "3814602", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7EOH", label: "KI7EOH", licensee: "Wallace, Thomas C", licenseKey: "3814603", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7EOI", label: "KI7EOI", licensee: "Lilje, James J", licenseKey: "3814604", phone: "206463-", team: "", icon: "CERT_32x32.png"},
      {value: "KI7EOJ", label: "KI7EOJ", licensee: "Beles, Craig C", licenseKey: "3814605", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7EOK", label: "KI7EOK", licensee: "Graham, L Jill", licenseKey: "3814607", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7EOL", label: "KI7EOL", licensee: "Thayer, Roaxanne B", licenseKey: "3814608", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7EOM", label: "KI7EOM", licensee: "Sager, Virginia", licenseKey: "3814609", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7EON", label: "KI7EON", licensee: "Shepard, Meredith A", licenseKey: "3814610", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7KLO", label: "KI7KLO", licensee: "Luckett, Peter G", licenseKey: "3891211", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7MLU", label: "KI7MLU", licensee: "Templeman, Michael L", licenseKey: "3908395", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7MMD", label: "KI7MMD", licensee: "Wanzel, Eric W", licenseKey: "3908404", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7RYQ", label: "KI7RYQ", licensee: "Stead, Daniel E", licenseKey: "3976509", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7SWF", label: "KI7SWF", licensee: "Rowan, Jonathan P", licenseKey: "3985391", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7TYW", label: "KI7TYW", licensee: "Rousseau, Susan", licenseKey: "3999666", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7TYX", label: "KI7TYX", licensee: "Mitcham, Kevin", licenseKey: "3999667", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7UQ",  label: "KI7UQ",  licensee: "Willsie, Howard D", licenseKey: "609078", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KI7WYU", label: "KI7WYU", licensee: "Herridge, Brook E", licenseKey: "4042611", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KJ1MBO", label: "KJ1MBO", licensee: "Boardman, James H", licenseKey: "2618089", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KJ7CJP", label: "KJ7CJP", licensee: "Cohen, Jeffrey A", licenseKey: "4104854", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KJ7FCE", label: "KJ7FCE", licensee: "Harmon, Corinne C", licenseKey: "4138263", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KJ7FCF", label: "KJ7FCF", licensee: "Satori, Jessika", licenseKey: "4138264", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KJ7FCG", label: "KJ7FCG", licensee: "West, Charles W", licenseKey: "4138265", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KJ7FCH", label: "KJ7FCH", licensee: "Gomez, Erica L", licenseKey: "4138266", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KJ7FCI", label: "KJ7FCI", licensee: "Strasz, Rachel A", licenseKey: "4138267", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KJ7FCJ", label: "KJ7FCJ", licensee: "Hosticka, Eric", licenseKey: "4138268", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KJ7FCK", label: "KJ7FCK", licensee: "Macewan, Allison A", licenseKey: "4138269", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KJ7FCL", label: "KJ7FCL", licensee: "Piston, Robert E", licenseKey: "4138270", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KJ7FCM", label: "KJ7FCM", licensee: "Piston, Jane W", licenseKey: "4138271", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KJ7FCO", label: "KJ7FCO", licensee: "Shepherd, William B", licenseKey: "4138273", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KJ7FCP", label: "KJ7FCP", licensee: "Cain, Lars O", licenseKey: "4138274", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KJ7FCQ", label: "KJ7FCQ", licensee: "Hudson Iv, Thomas F", licenseKey: "4138275", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KJ7FDJ", label: "KJ7FDJ", licensee: "Hosticka, Nancy J", licenseKey: "4138364", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KN7ELP", label: "KN7ELP", licensee: "Pierson Jr, Edward L", licenseKey: "4151822", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KU0W",   label: "KU0W",   licensee: "Frye, Richard D", licenseKey: "2433109", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "KV3SPA", label: "KV3SPA", licensee: "Marshall, Jourdan S", licenseKey: "3976699", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "N0GZW",  label: "N0GZW",  licensee: "Penwell, Clifford F", licenseKey: "629359", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "N0WNW",  label: "N0WNW",  licensee: "Wilks, Nicholas T", licenseKey: "3855377", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "N6QIV",  label: "N6QIV",  licensee: "Goard, Carolyn S", licenseKey: "718569", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "N6SCM",  label: "N6SCM",  licensee: "Valencia, Jane K", licenseKey: "719512", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "N7KZQ",  label: "N7KZQ",  licensee: "Gordon, Richard S", licenseKey: "729288", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "N7OUW",  label: "N7OUW",  licensee: "Malone, Sean C", licenseKey: "731554", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "N7RDP",  label: "N7RDP",  licensee: "Powell, Robert D", licenseKey: "2664784", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "NB7U",   label: "NB7U",   licensee: "Lecky, Ned", licenseKey: "3582715", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "NH6ZA",  label: "NH6ZA",  licensee: "Pine, Douglas E", licenseKey: "2968217", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "W0RIK",  label: "W0RIK",  licensee: "Wallace, Rick", licenseKey: "3277548", phone: "206463-", team: "", icon: "Other_32x32.png"},
      {value: "W7AKT",  label: "W7AKT",  licensee: "Kennedy Taylor, Alison K", licenseKey: "3460553", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "W7CPN",  label: "W7CPN",  licensee: "Burke, John J", licenseKey: "2801788", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "W7GMB",  label: "W7GMB",  licensee: "Bush, Gregory M", licenseKey: "3600306", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "W7GWL",  label: "W7GWL",  licensee: "Loveness, Ghyrn W", licenseKey: "2388788", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "W7IVA",  label: "W7IVA",  licensee: "Mildon, Todd B", licenseKey: "817481", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "W7MCW",  label: "W7MCW",  licensee: "Woods, Melodie", licenseKey: "3460544", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "W7PDZ",  label: "W7PDZ",  licensee: "Zook, Phillip D", licenseKey: "2404030", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "W7PHG",  label: "W7PHG",  licensee: "Gagner, Craig A", licenseKey: "3920455", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "W7PPA",  label: "W7PPA",  licensee: "Hickox, Ernest C", licenseKey: "819183", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "W7RAL",  label: "W7RAL",  licensee: "Larson, Rachel A", licenseKey: "3711874", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "W7SBA",  label: "W7SBA",  licensee: "Allen, Steven B", licenseKey: "3864369", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "W7TSD",  label: "W7TSD",  licensee: "Allen, Bruce B", licenseKey: "819874", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "W7VMI",  label: "W7VMI",  licensee: "Vashon-Maury Island Radio Club", licenseKey: "2446115", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "W7WS",   label: "W7WS",   licensee: "Williams, Jerry B", licenseKey: "820297", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "WA7EAW", label: "WA7EAW", licensee: "Mc Farlane, Claude L", licenseKey: "862112", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "WA7KYI", label: "WA7KYI", licensee: "Tharp, James C", licenseKey: "862926", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "WA7ZYF", label: "WA7ZYF", licensee: "Morrison, Howard W", licenseKey: "864707", phone: "206463-", team: "", icon: "ACS_32x32.png"},
      {value: "WB7FCH", label: "WB7FCH", licensee: "Vogel, Keith W", licenseKey: "899419", phone: "206463-", team: "",  icon: "ACS_32x32.png"},
      {value: "WB7RPG", label: "WB7RPG", licensee: "Voynick, Stanley A", licenseKey: "900498", phone: "206463-", team: "", icon: "ACS_32x32.png"}
  ];

  // Autocomplete call sign based on any valid characters
  // from: https://jqueryui.com/autocomplete/#custom-data
  $( function() {
    $( "#license" ).autocomplete({
      minLength: 0,
      source: callSigns,
      focus: function( event, ui ) {
        $( "#license" ).val( ui.item.label );
        return false;
      },
      select: function( event, ui ) {
        $( "#license" ).val( ui.item.label );
        $( "#license-id" ).val( ui.item.value );
        $( "#licensee-name" ).html( ui.item.licensee );
        $( "#license-icon" ).attr( "src", "images/" + ui.item.icon );
        $( "#team" ).val ( ui.item.team );

        return false;
      }
    })
    .autocomplete( "instance" )._renderItem = function( ul, item ) {
      return $( "<li>" )
        .append( "<div>" + item.label + " - " + item.licensee + "</div>" )
        .appendTo( ul );
    };
  } );

  // Autocomplete call sign based on any valid characters
  // from: https://jqueryui.com/autocomplete/#custom-data
  $( function() {
    //var tt = document.getElementById("team").value;
    $( "#team" ).autocomplete({
      //dbug("----autocomplete Team");
      minLength: 0,
      source: teams,
      focus: function( event, ui ) {
        $( "#team" ).val( ui.item.value );
        dbug("--focused on Team");
        return false;
      },
      select: function( event, ui ) {
        dbug("--selected Team");
        $( "#team" ).val( ui.item.value );
        //$( "#team-id" ).val( ui.item.value );
        //$( "#teamName" ).html( ui.item.licensee );
        //$( "#teamicon" ).attr( "src", iconDir + ui.item.icon );
        return false;
      }
    })
    .autocomplete( "instance" )._renderItem = function( ul, item ) {
      dbug("----push new entry to team array");
      testFunct();
    // Store data in array
    teams.push({
      value: "NewTeam",
      icon: "T44.png", //(document.getElementById("team").value+".png"),
      color: "Tan",
      fillColor: "Salmon",
      shape: "Circle",
      note: ""
      });

      //TODO: Is this best place to update partipant's Team (du joir) name??

      return $( "<li>" )
        .append( "<div>" + item.value + "</div>" )
        .appendTo( ul );
    };
  } );

  function testFunct() {
    dbug("TEst FUNCTION+++++++++++");
    var tea = document.getElementById("team").value;
    dbug("Tea="+tea);
    tea = document.getElementById("team").innerText;
    dbug("Tea="+tea);
  }

  // Update DMS coordinates to reflect new DD coordinates
  function DDCoordsChanged()
  {
    updateCoords(document.getElementById("latitudeDD").value, document.getElementById("longitudeDD").value);
  }

  // Get object {deg:, min:, sec:, dir:}
  // sec truncated to two digits (e.g. 3.14)
  // dir returns S or N if lng = false (for latitudes)
  // dir returns E or W if lng (longitude) = true
  // N.B.: may not work for angles between -1° and 0°
  // from www.stackoverflow.com/questions/5786025
  function DDToDMS(D, lng){
    if (!D) {
        dbug("Invalid number received for Decimal Degrees!")
        return Number.NaN;
    }
    /*
      dbug("DDtoDMS: D=" + D + "; lng=" + lng);
      var dirr = D<0?lng?'W':'S':lng?'E':'N';
      var degg = 0|(D<0?D=-D:D);
      var minn = 0|D%1*60;
      var secc = (0|D*60%1*6000)/100;
      dbug("DDtoDMS: dir=" + dirr + "; deg=" + degg + "; min" + minn + "; sec=" + secc);
    */
    return {
        dir : D<0?lng?'W':'S':lng?'E':'N',
        deg : 0|(D<0?D=-D:D),
        min : 0|D%1*60,
        sec :(0|D*60%1*6000)/100
    };
  }

  // Update DD coordinates to reflect updated DMS degrees
  function DMSCoordsChanged()
  {
    var latDMS = {
      dir: document.getElementById("latitudeQ").value,
      deg: document.getElementById("latitudeD").value,
      min: document.getElementById("latitudeM").value,
      sec: document.getElementById("latitudeS").value
    };
    //dbug("DMSCoordsChanged: lat: dir=" + latDMS.dir + "; deg=" + latDMS.deg + "; min=" + latDMS.min + "; sec=" + latDMS.sec);
    var lngDMS = {
      dir: document.getElementById("longitudeQ").value,
      deg: document.getElementById("longitudeD").value,
      min: document.getElementById("longitudeM").value,
      sec: document.getElementById("longitudeS").value
    };
    //dbug("DMSCoordsChanged: long: dir=" + lngDMS.dir + "; deg=" + lngDMS.deg + "; min=" + lngDMS.min + "; sec=" + lngDMS.sec);

    updateCoords(DMSToDD(latDMS), DMSToDD(lngDMS));
  }

  // https://www.rapidtables.com/convert/number/degrees-minutes-seconds-to-degrees.html
  // From: www.stackoverflow.com/questions/5970961
  function DMSToDD (dms) {
    if (!dms) {
        return Number.NaN;
    }
    //dbug("DMSToDD: dir=" + dms.dir + "; deg=" + dms.deg + "; min=" + dms.min + "; sec=" + dms.sec);
    var neg = 1.0;
    switch(dir){
      case "s":
      case "S":
      case "w":
      case "W":
        neg = -1.0;
        dbug("DMSToDD: Negative");
    }
    return (neg * (Number(dms.deg) + (dms.min/60.0) + (dms.sec/3600.0))).toFixed(6);
}

 /*
  // https://www.rapidtables.com/convert/number/degrees-minutes-seconds-to-degrees.html
  // From: www.stackoverflow.com/questions/5970961
  function dmsToDeg (dms) {
    if (!dms) {
        return Number.NaN;
    }
    var neg = dms.match(/(^\s?-)|(\s?[SW]\s?$)/) != null ? -1.0 : 1.0;
    dms = dms.replace(/(^\s?-)|(\s?[NSEW]\s?)$/, '');
    dms = dms.replace(/\s/g, '');
    var parts = dms.match(/(\d{1,3})[.,°d ]?\s*(\d{0,2})[']?(\d{0,2})[.,]?(\d{0,})(?:["]|[']{2})?/);
    if (parts == null) {
        return Number.NaN;
    }
    // parts:
    // 0 : degree
    // 1 : degree
    // 2 : minutes
    // 3 : secondes
    // 4 : fractions of seconde
    var d = (parts[1] ? parts[1] : '0.0') * 1.0;
    var m = (parts[2] ? parts[2] : '0.0') * 1.0;
    var s = (parts[3] ? parts[3] : '0.0') * 1.0;
    var r = (parts[4] ? ('0.' + parts[4]) : '0.0') * 1.0;
    var dec = (d + (m / 60.0) + (s / 3600.0) + (r / 3600.0)) * neg;
    return dec;
}
*/

  /* from: https://jsfiddle.net/aryzhov/pkfst550
  * Binary search in JavaScript.
  * Returns the index of of the element in a sorted array or (-n-1) where n is the insertion point for the new element.
  * Parameters:
  *     ar - A sorted array
  *     el - An element to search for
  *     compare_fn - A comparator function. The function takes two arguments: (a, b) and returns:
  *        a negative number  if a is less than b;
  *        0 if a is equal to b;
  *        a positive number of a is greater than b.
  * The array may contain duplicate elements. If there are more than one equal elements in the array,
  * the returned value can be the index of any one of the equal elements.
  */
  function binaryStringSearch(ar, el) {
      var m = 0;
      var n = ar.length - 1;
      while (m <= n) {
          var k = (n + m) >> 1;
          if (el > ar[k].Callsign) {
              m = k + 1;
          } else if(el < ar[k].Callsign) {
              n = k - 1;
          } else {
            return ar[k].Licensee;
          }
      }
      return "No Licensee"; // -m - 1;
  }

/*  TODO:
//// Sticky top tabs, from https://www.w3schools.com/howto/howto_js_navbar_sticky.asp
// When the user scrolls the page, execute setStickyTabs
window.onscroll = function() {setStickyTabs()};

// Get the navbar
var navbar = document.getElementsByClassName("ui-tabs-nav");

// Get the offset position of the navbar
var sticky = navbar.offsetTop;

// Add the sticky class to the navbar when you reach its scroll position. Remove "sticky" when you leave the scroll position
function setStickyTabs() {
  if (window.pageYOffset >= sticky) {
    navbar.classList.add("sticky")
  } else {
    navbar.classList.remove("sticky"); // gets: Cannot read property 'remove' of undefined
  }
}
*/

</script>
<script src="js/google.markerclusterer.js">
// local copy of: https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js
// https://developers.google.com/maps/documentation/javascript/marker-clustering
// https://github.com/googlemaps/v3-utility-library/tree/master/markerclusterer
</script>

<script>
// ==============================================================

  function saveLocationsToFile (data) {
    // Options available: https://github.com/clarketm/TableExport




 //Basic export
var csv = $("#teamLocations").jsGrid("exportData");

/*
//Full Options
var csv = $("#teamLocations").jsGrid("exportData", {
    type: "csv", //Only CSV supported
    subset: "all" | "visible", //Visible will only output the currently displayed page
    delimiter: "|", //If using csv, the character to seperate fields
    includeHeaders: true, //Include header row in output
    encapsulate: true, //Surround each field with qoutation marks; needed for some systems
    newline: "\r\n", //Newline character to use

    //Takes each item and returns true if it should be included in output.
    //Executed only on the records within the given subset above.
    filter: function(item){return true},

    //Transformations are a way to modify the display value of the output.
    //Provide a key of the field name, and a function that takes the current value.
    transformations: {
        "Married": function(value){
            if (value === true){
                return "Yes"
            }
            else{
                return "No"
            }
        }
    }
});
*/

// jsLocationsGrid
    var DefaultTable = document.getElementById('jsLocationsGrid'); //default-table
    new TableExport(DefaultTable, {
        headers: true,                              // (Boolean), display table headers (th or td elements) in the <thead>, (default: true)
        footers: true,                              // (Boolean), display table footers (th or td elements) in the <tfoot>, (default: false)
        formats: ['csv'],            // (String[]), filetype(s) for the export, (default: ['xlsx', 'csv', 'txt'])
        //formats: ['xlsx', 'csv', 'txt'],            // (String[]), filetype(s) for the export, (default: ['xlsx', 'csv', 'txt'])
        filename: 'locationsGrid',                             // (id, String), filename for the downloaded file, (default: 'id')
        bootstrap: false,                           // (Boolean), style buttons using bootstrap, (default: false)
        position: 'bottom',                         // (top, bottom), position of the caption element relative to table, (default: 'bottom')
        ignoreRows: null,                           // (Number, Number[]), row indices to exclude from the exported file(s) (default: null)
        ignoreCols: null,                           // (Number, Number[]), column indices to exclude from the exported file(s) (default: null)
        ignoreCSS: '.tableexport-ignore',           // (selector, selector[]), selector(s) to exclude cells from the exported file(s) (default: '.tableexport-ignore')
        emptyCSS: '.tableexport-empty',             // (selector, selector[]), selector(s) to replace cells with an empty string in the exported file(s) (default: '.tableexport-empty')
        trimWhitespace: true,                       // (Boolean), remove all leading/trailing newlines, spaces, and tabs from cell text in the exported file(s) (default: true)
        RTL: false,                                 // (Boolean), set direction of the worksheet to right-to-left (default: false)
        sheetname: 'Sheet1'                             // (id, String), sheet name for the exported spreadsheet, (default: 'id')
    });
  }


</script>

<script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initGoogMap" async defer>
// https://developers.google.com/maps/documentation/javascript/libraries
</script>


</body>
</html>
